<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.55 Maintainer: narigone Status: ready -->
 <chapter id="features.safe-mode">
  <title>Modo Seguro (Safe Mode)</title>

  <para>
   O modo seguro do PHP é uma tentativa de resolver o problema de servidores
   compartilhados. É arquiteturalmente incorreto tentar resolver esse
   problema no nível do PHP, mas já que as alternativas no nível dos
   servidores e dos sistemas operacionais não são muito eficientes, muitas pessoas,
   especialmente provedores de internet, usam o modo seguro por enquanto.
  </para>

  <sect1 id="ini.sect.safe-mode">
   <title>Segurança e o modo seguro</title>
   <para>
    <table>
     <title>Diretivas de configuração de segurança e do modo seguro</title>
     <tgroup cols="3">
      <thead>
       <row>
        <entry>Nome</entry>
        <entry>Valor Padrão</entry>
        <entry>Alterável</entry>
       </row>
      </thead>
      <tbody>
      <row>
       <entry>safe_mode</entry>
       <entry>"0"</entry>
       <entry>PHP_INI_SYSTEM</entry>
      </row>
      <row>
       <entry>safe_mode_gid</entry>
       <entry>"0"</entry>
       <entry>PHP_INI_SYSTEM</entry>
      </row>
      <row>
       <entry>safe_mode_include_dir</entry>
       <entry>NULL</entry>
       <entry>PHP_INI_SYSTEM</entry>
      </row>
      <row>
       <entry>safe_mode_exec_dir</entry>
       <entry>""</entry>
       <entry>PHP_INI_SYSTEM</entry>
      </row>
      <row>
       <entry>safe_mode_allowed_env_vars</entry>
       <entry>PHP_</entry>
       <entry>PHP_INI_SYSTEM</entry>
      </row>
      <row>
       <entry>safe_mode_protected_env_vars</entry>
       <entry>LD_LIBRARY_PATH</entry>
       <entry>PHP_INI_SYSTEM</entry>
      </row>
      <row>
       <entry>open_basedir</entry>
       <entry>NULL</entry>
       <entry>PHP_INI_SYSTEM</entry>
      </row>
      <row>
       <entry>disable_functions</entry>
       <entry>""</entry>
       <entry>PHP_INI_SYSTEM</entry>
      </row>
      <row>
       <entry>disable_classes</entry>
       <entry>""</entry>
       <entry>PHP_INI_SYSTEM</entry>
      </row>
      </tbody>
     </tgroup>
    </table>
    Para mais detalhes e definições das constantes do PHP_INI_* veja
    <function>ini_set</function>.
   </para>
   
   &ini.descriptions.title;
   
   <para>
    <variablelist>
     <varlistentry id="ini.safe-mode">
      <term>
       <parameter>safe_mode</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
        Habilitar ou não o modo seguro do PHP leia o 
        capítulo de <link linkend="security">Segurança</link> para mais
        informação..
       </para>
      </listitem>
     </varlistentry>
     <varlistentry id="ini.safe-mode-gid">
      <term>
       <parameter>safe_mode_gid</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
        Por padrão, o modo seguro faz checagem comparando o UID quando
        abre arquivos. Se você quiser diminuir a especificidade do teste para compara com o GID,
        então ligue a diretiva safe_mode_gid.
        Escolher entre usar checagem de <literal>UID</literal> (&false;)
        ou de <literal>GID</literal> quando acessar
        um arquivo.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry id="ini.safe-mode-include-dir">
      <term>
       <parameter>safe_mode_include_dir</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Checagem de <literal>UID</literal>/<literal>GID</literal> não são feitas quando
        é feita inclusão de arquivos desse diretório e seus subdiretórios (diretório
        também deve estar no <link linkend="ini.include-path">include_path</link>
        ou o caminho completo deve ser incluso).
       </para>
       <simpara>
        A partir do PHP 4.2.0, essa diretiva pode receber vários diretórios separados
        por dois pontos (ponto-e-vírgula no Windows) similar à
        diretiva <link linkend="ini.include-path">include_path</link>,
        ao contrário de apenas um diretório 
       </simpara>
       <simpara>
        A restrição especificada é, na verdade, um prefixo, não um nome de diretório.
        Isso significa que "safe_mode_include_dir = /dir/incl" também permite
        acesso a "/dir/include" e "/dir/incls" se eles existirem. Quando você
        quiser restringir o acesso apenas ao diretório especificado, termine com uma
        barra. Por exemplo: "safe_mode_include_dir = /dir/incl/"
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry id="ini.safe-mode-exec-dir">
      <term>
       <parameter>safe_mode_exec_dir</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Se o PHP for usado no modo seguro, <function>system</function> e as outras
        <link linkend="ref.exec">funções que executam programas do sistema</link>
        se recusam a executar programas que não estão no diretório atual.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry id="ini.safe-mode-allowed-env-vars">
      <term>
       <parameter>safe_mode_allowed_env_vars</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Editar certas variáveis de ambientes pode ser uma falha de segurança em potencial.
        Essa diretiva contem uma lista de prefixos delimitados por vírgulas. No modo seguro,
        o usuário só pode alterar as variáveis de ambiente cujo nome começa com um dos
        prefixos dessa lista. Por padrão, os usuários só poderão ser capazser de editar
        variáveis de ambiente que começão com PHP_ (ex.: PHP_FOO=BAR).
       </para>
       <note>
        <para>
         Se essa diretiva estiver vazia, o PHP deixará o usuário modificar QUALQUER
         variável de ambiente!
        </para>
       </note>
      </listitem>
     </varlistentry>
     <varlistentry id="ini.safe-mode-protected-env-vars">
      <term>
       <parameter>safe_mode_protected_env_vars</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Essa diretiva contem uma lista delimitada por vírgulas de varáveis
        de ambiente que o usuário final não será capaz de mudar usando
        <function>putenv</function>. Essas variáveis serão protegidas mesmo que 
        safe_mode_allowed_env_vars esteja configurada para permitir que elas sejam mudadas.
       </para>
      </listitem>
     </varlistentry>
      <varlistentry id="ini.open-basedir">
      <term>
       <parameter>open_basedir</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Limita os arquivos que podem ser abertos ao diretório especificado
        e seus subdiretórios, incluindo o arquivo em si. Essa diretiva
        <emphasis>NÃO</emphasis> é afetada pelo estado do modo seguro,
        seja este ligado ou desligado.
       </para>
       <para>
        Quando um script tenta abrir um arquivo com, por exemplo,
        <function>fopen</function> ou <function>gzopen</function>,
        a localização do arquivo é checada. Quando o arquivo está fora do
        diretório especificado, o PHP se recusará a abrí-lo. Todos os links
        simbólicos também passam pelo teste, não sendo possível evitar essa restrição
        com um symlink.
       </para>
       <para>
        O valor especial <systemitem class="constant">.</systemitem>
        indica que o diretório de trabalho, onde o script é rodado, será usado como o 
        diretório base. Isso é, no entanto, um pouco perigoso, já que o diretório de trabalho
        do script pode ser facilmente alterado com a função <function>chdir</function>.
       </para>
       <para>
        No Windows, separe os diretórios com ponto-e-vírgula. Em todos os
        outros sistemas, separe os diretórios com dois pontos. Como módulo
        do Apache, caminhos do open_basedir dos diretórios pais são 
        herdados automaticamente agora.
       </para>
       <para>
         A restrição especificada com open_basedir é na verdade um
         prefixo, não um nome de diretório. Isso significa que "open_basedir =
         /dir/incl" também permite acesso à "/dir/include" e
         "/dir/incls" se eles existirem. Quando você quiser restringir o acesso
         para apenas o diretório especificado, termine com uma barrra. Por exemplo:
         "open_basedir = /dir/incl/"
       </para>
       <note>
        <para>
         Suporte para diretórios múltiplos foi adicionado na versão 3.0.7.
        </para>
       </note>
       <para>
        O padrão é permitir que todos os arquivos sejam abertos.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry id="ini.disable-functions">
      <term>
       <parameter>disable_functions</parameter>
       <type>string</type>
      </term>
      <listitem>
       <simpara>
        A diretiva permite que você desabilite certas funções por
        razões de <link linkend="security">segurança</link>. Ela recebe
        uma lista de nomes de funções separadas por vírgula. disable_functions
        não é afetada pela diretiva <link linkend="ini.safe-mode">Safe Mode</link>.
       </simpara>
       <simpara>
        Essa diretiva deve ser configurada no &php.ini; Você não pode,
        por exemplo, configurá-la no &httpd.conf;.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry id="ini.disable-classes">
      <term>
       <parameter>disable_classes</parameter>
       <type>string</type>
      </term>
      <listitem>
       <simpara>
        Essa diretiva permite que você desabilite certas classes por
        razões de <link linkend="security">segurança</link>. 
        This directive allows you to disable certain classes for
        <link linkend="security">security</link> reasons. Ela recebe
        uma lista de nomes de funções separadas por vírgula. disable_functions
        não é afetada pela diretiva <link linkend="ini.safe-mode">Safe Mode</link>.
       </simpara>
       <simpara>
        Essa diretiva deve ser configurada no &php.ini; Você não pode,
        por exemplo, configurá-la no &httpd.conf;.
       </simpara>
       <note>
        <title>Availability note</title>
        <simpara>
         Essa diretiva está disponível na versão 4.3.2 ou superior.
        </simpara>
       </note>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
   <para>
    Veja também: <link linkend="ini.register-globals">register_globals</link>,
    <link linkend="ini.display-errors">display_errors</link>, e
    <link linkend="ini.log-errors">log_errors</link>
   </para>

  <para>
   Quando o <link linkend="ini.safe-mode">safe_mode</link> está ligado, o PHP checa 
   se o proprietário do script atual bate com o proprietário do arquivo a ser
   operado por uma função de arquivo. Por exemplo:
   <programlisting role="ls">
<![CDATA[
-rw-rw-r--    1 rasmus   rasmus       33 Jul  1 19:20 script.php 
-rw-r--r--    1 root     root       1116 May 26 18:01 /etc/passwd 
]]>
   </programlisting>
   Executando esse script.php 
   <programlisting role="php">
<![CDATA[
<?php
 readfile('/etc/passwd'); 
?>
]]>
   </programlisting>
   resulta nesse erro quando o modo seguro estiver habilitado: 
   <screen>
<![CDATA[
Warning: SAFE MODE Restriction in effect. The script whose uid is 500 is not 
allowed to access /etc/passwd owned by uid 0 in /docroot/script.php on line 2
]]>
   </screen>
  </para>
  <para>
   No entando, em certos ambientes uma checagem rígida de <literal>UID</literal>
   não é apropriada e uma checagem mais leve de <literal>GID</literal> é
   suficiente. Isso é suportado através da diretiva <link
   linkend="ini.safe-mode-gid">safe_mode_gid</link>. Atribuindo a ela o valor
   <literal>On</literal> faz a checagem de <literal>GID</literal>, mais leve e
   atribuindo a ela o valor <literal>Off</literal> (o padrão) faz a
   checagem <literal>UID</literal>.   
  </para>
  <para>
   Se, ao invés de <link linkend="ini.safe-mode">safe_mode</link>, você editou um 
   diretório em <link linkend="ini.open-basedir">open_basedir</link>, então todas
   as operações de arquivos serão limitadas a arquivos no diretório especificado e
   seus subdiretórios. Por exemplo (&httpd.conf; do Apache de exemplo):
   <programlisting role="ini">
<![CDATA[
<Directory /docroot>
  php_admin_value open_basedir /docroot 
</Directory>
]]>
   </programlisting>
   Se você rodar o mesmo script.php com essa
   configuração de <link linkend="ini.open-basedir">open_basedir</link>
   então esse será o resultado:
   <screen>
<![CDATA[
Warning: open_basedir restriction in effect. File is in wrong directory in 
/docroot/script.php on line 2 
]]>
   </screen>
  </para>
  <para>
   You can also disable individual functions. Note that the
   <link linkend="ini.disable-functions">disable_functions</link>
   directive can not be used outside of the &php.ini; file which means that
   you cannot disable functions on a per-virtualhost or per-directory basis
   in your &httpd.conf; file.
   If we add this to our &php.ini; file: 
   <programlisting role="ini">
<![CDATA[
disable_functions readfile,system  
]]>
   </programlisting>
   Then we get this output: 
   <screen>
<![CDATA[
Warning: readfile() has been disabled for security reasons in 
/docroot/script.php on line 2 
]]>
   </screen>
  </para>
 </sect1>

  <sect1 id="features.safe-mode.functions">
   <title>Funções restringidas/desabilitadas pelo modo seguro</title>
   <para>
    Essa lista provavelmente ainda está incomplete e possivelmente incorreta
    das funções limitadas pelo
    <link linkend="features.safe-mode">modo seguro</link>.
    <!-- TODO: add &note.sm.*; to the functions mentioned here.
    That entity should link to this section -->
    <table>
     <title>Funções limitadas no modo seguro</title>
     <tgroup cols="2">
      <thead>
       <row>
        <entry>Função</entry>
        <entry>Limitações</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry><function>dbmopen</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>dbase_open</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>filepro</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>filepro_rowcount</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>filepro_retrieve</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry>ifx_*</entry>
        <entry>sql_safe_mode restrictions, (!= safe mode)</entry>
        <!-- TODO: more info on sql-safe-mode -->
       </row>
       <row>
        <entry>ingres_*</entry>
        <entry>sql_safe_mode restrictions, (!= safe mode)</entry>
        <!-- TODO: more info on sql-safe-mode -->
       </row>
       <row>
        <entry>mysql_*</entry>
        <entry>sql_safe_mode restrictions, (!= safe mode)</entry>
        <!-- TODO: more info on sql-safe-mode -->
       </row>
       <row>
        <entry><function>pg_lo_import</function></entry>
        <entry>&sm.uidcheck;</entry>
        <!-- source TODO: there is no PHP-warning for that safe-mode-restriction -->
       </row>
       <row>
        <entry><function>posix_mkfifo</function></entry>
        <entry>&sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>putenv</function></entry>
        <entry>Obedece as diretivas safe_mode_protected_env_vars e 
        safe_mode_allowed_env_vars. Também veja a documentação
        on <function>putenv</function></entry>
        <!-- TODO: document those directives in chapters/config.xml -->
       </row>
       <row>
        <entry><function>move_uploaded_file</function></entry>
        <entry>&sm.uidcheck; <!-- TODO: check this --></entry>
       </row>

       <!-- TODO: from here on, add warning to the function itself -->

       <row>
        <entry><function>chdir</function></entry>
        <entry>&sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>dl</function></entry>
        <entry>&sm.disabled;</entry>
       </row>
       <row>
        <entry><link linkend="language.operators.execution">operador backtick (``)</link></entry>
        <entry>&sm.disabled;</entry>
       </row>
       <row>
        <entry><function>shell_exec</function> (função equivalente 
        de backticks)</entry>
        <entry>&sm.disabled;</entry>
       </row>
       <row>
        <entry><function>exec</function></entry> 
        <entry>Você só pode rodar executáveis que estejam no <link 
        linkend="ini.safe-mode-exec-dir">safe_mode_exec_dir</link>.
        Por razões práticas, não é permitido atualmente ter
        <literal>..</literal> compondo o caminho para o executável.
        <function>escapeshellcmd</function> é executada no argumento dessa
        função.</entry>
       </row>
       <row>
        <entry><function>system</function></entry>
        <entry>Você só pode rodar executáveis que estejam no <link 
        linkend="ini.safe-mode-exec-dir">safe_mode_exec_dir</link>.
        Por razões práticas, não é permitido atualmente ter
        <literal>..</literal> compondo o caminho para o executável.
        <function>escapeshellcmd</function> é executada no argumento dessa
        função.</entry>
       </row>
       <row>
        <entry><function>passthru</function></entry>
        <entry>Você só pode rodar executáveis que estejam no <link 
        linkend="ini.safe-mode-exec-dir">safe_mode_exec_dir</link>.
        Por razões práticas, não é permitido atualmente ter
        <literal>..</literal> compondo o caminho para o executável.
        <function>escapeshellcmd</function> é executada no argumento dessa
        função.</entry>
       </row>
       <row>
        <entry><function>popen</function></entry>
        <entry>Você só pode rodar executáveis que estejam no <link 
        linkend="ini.safe-mode-exec-dir">safe_mode_exec_dir</link>.
        Por razões práticas, não é permitido atualmente ter
        <literal>..</literal> compondo o caminho para o executável.
        <function>escapeshellcmd</function> é executada no argumento dessa
        função.</entry>
        <!-- TODO: not sure. popen uses a completely different implementation
        Don't know why, don't know whether it's behaving the same -->
       </row>
       <row>
        <entry><function>fopen</function></entry>
        <entry>&sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>mkdir</function></entry>
        <entry>&sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>rmdir</function></entry>
        <entry>&sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>rename</function></entry>
        <entry>&sm.uidcheck; &sm.uidcheck.dir;<!-- on the old name only, it seems. Is rename preventing moving files? --></entry>
       </row>
       <row>
        <entry><function>unlink</function></entry>
        <entry>&sm.uidcheck; &sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>copy</function></entry>
        <entry>&sm.uidcheck; &sm.uidcheck.dir; (on 
        <parameter>source</parameter> and 
        <parameter>target</parameter>) </entry>
       </row>
       <row>
        <entry><function>chgrp</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>chown</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>chmod</function></entry>
        <entry>&sm.uidcheck; Além disso, você não pode
        editar os bits SUID, SGID e sticky</entry>
       </row>
       <row>
        <entry><function>touch</function></entry>
        <entry>&sm.uidcheck; &sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>symlink</function></entry>
        <entry>&sm.uidcheck; &sm.uidcheck.dir; (nota: apenas o alvo é
        checado)</entry>
       </row>
       <row>
        <entry><function>link</function></entry>
        <entry>&sm.uidcheck; &sm.uidcheck.dir; (nota: apenas o alvo é
        checado)</entry>
       </row>
       <row>
        <entry><function>apache_request_headers</function></entry>
        <entry>No modo seguro, cabeçalhos começando com 'authorization' 
        (não diferenciando maiúsculas e minúsculas) não serão retornados.</entry>
       </row>
       <row>
        <entry><function>header</function></entry>
        <entry>No modo seguro, o uid do script é adicionado 
        a parte <literal>realm</literal>
        do cabeçalho <literal>WWW-Authenticate</literal> se você configurar esse
        cabeçalho (usado para Autenticação HTTP).</entry>
       </row>
       <row>
        <entry><link linkend="features.http-auth">variáveis PHP_AUTH</link></entry>
        <entry>
         No modo seguro, as variáveis <varname>PHP_AUTH_USER</varname>,
         <varname>PHP_AUTH_PW</varname>, e <varname>AUTH_TYPE</varname>
         não estão disponíveis no array <varname>$_SERVER</varname>. Apesar de tudo, você
         ainda pode usar <varname>REMOTE_USER</varname> para o USER.
         (nota: só afetado desde o PHP 4.3.0)
        </entry>
       </row>
       <row>
        <entry>
         <function>highlight_file</function>,
         <function>show_source</function>
        </entry>
        <entry>
         &sm.uidcheck; &sm.uidcheck.dir; (nota: só afetado desde o PHP 4.2.1)
        </entry>
       </row>
       <row>
        <entry>
         <function>parse_ini_file</function>
        </entry>
        <entry>
         &sm.uidcheck; &sm.uidcheck.dir; (nota: só afetado desde o PHP 4.2.1)
        </entry>
       </row>
       <row>
        <entry>
         <function>set_time_limit</function>
        </entry>
        <entry>
         Não tem efeito quando o PHP é executado em &safemode;.
        </entry>
       </row>
       <row>
        <entry>
         <link linkend="ini.max-execution-time">max_execution_time</link>
        </entry>
        <entry>
         Não tem efeito quando o PHP é executado em &safemode;.
        </entry>
       </row>
       <row>
        <entry>
         <function>mail</function>
        </entry>
        <entry>
         Em modo seguro, o quinto parâmetro é desabilitado. (nota: só afetado desde o PHP 4.2.3)
        </entry>
       </row>
       <row>
        <entry>Qualquer função que use
         <filename>php4/main/fopen_wrappers.c</filename>
        </entry>
        <entry>??</entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
  </sect1>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

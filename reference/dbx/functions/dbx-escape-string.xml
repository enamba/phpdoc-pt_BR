<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.4 Maintainer: thomasgm Status: ready -->
  <refentry id="function.dbx-escape-string">
   <refnamediv>
    <refname>dbx_escape_string</refname>
    <refpurpose>
	 Transforma uma string para que ela possa ser seguramente usada em comandos-sql.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>string</type><methodname>dbx_escape_string</methodname>
      <methodparam><type>objeto</type><parameter>identificador_do_link</parameter></methodparam>
      <methodparam><type>string</type><parameter>texto</parameter></methodparam>
     </methodsynopsis>
    <simpara>
	 A função <function>dbx_escape_string</function> retorna um texto, e 
	 o transforma (onde for necessário, ex: em aspas, barras invertidas, etc) em 
	 uma string válida para ser usado em comandos-sql. Ele retorna NULL ao falhar.
    </simpara>
    <example>
     <title><function>dbx_escape_string</function> exemplo</title>
     <programlisting role="php">
<![CDATA[
<?php
$link   = dbx_connect(DBX_MYSQL, "localhost", "bd", "nome de usuário", "senha")
    or die ("Não foi possível conectar");

$texto = dbx_escape_string($link, "It\'s quoted and backslashed (\\).");
$resultado = dbx_query($link, "insert into tabela (txt) values ('".$texto."')");
if ( $resultado == 0 ) {
    echo dbx_error ($link);
}
dbx_close ($link);
?>
]]>
     </programlisting>
    </example>
    <para>
     Veja também <function>dbx_query</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

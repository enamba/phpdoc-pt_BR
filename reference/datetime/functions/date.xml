<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 $ -->
<!-- splitted from ./en/functions/datetime.xml, last change in rev 1.2 -->
  <refentry id="function.date">
   <refnamediv>
    <refname>date</refname>
    <refpurpose>Formata a data e a hora local </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>string</type><methodname>date</methodname>
      <methodparam><type>string</type><parameter>format</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>
        modelo
       </parameter></methodparam>
     </methodsynopsis>
    <para>
     Retorna uma string de acordo com o formato da string usando o 
	 inteiro dado <parameter>modelo</parameter> ou a a hora corrente local 
     se nenhum modelo é dado.
     <note>
      <para>
       A linha válida de um  modelo é tipicamente de  Fri, 13 Dec
       1901 20:45:54 GMT to Tue, 19 Jan 2038 03:14:07 GMT. (Estas são as datas
	   que correspodem aos mínimos e máximos valores para
       um interiro de 32-bit definido). No windows esta linha é limitada de
       01-01-1970 para 19-01-2038.
      </para>
      <para>
       Pata gerar um modelo de uma string para representação de  data, você
       deve estar capaz de usar<function>strtotime</function>. Adicionalmente, alguns
       bancos de dados têm para converter suas datas em modelos 
	   (tais como a função MySQL's UNIX_TIMESTAMP ).
      </para>
     </note>
    </para>
    <para>
     Os seguintes caracteres são reconhecidos na estrutura da string:
     <itemizedlist>
      <listitem>
       <simpara>
        a - "am" ou "pm"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        A - "AM" ou "PM"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        B - Swatch Internet time
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        d - dia do mês, 2 digitos com zeros zeros à esquerda; i.e. "01"
        até "31"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        D - dia da semana, texto, 3 letras; e.g. "Fri"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        F - mês, texto, longo; e.g. "January"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        g - hora, Forma com 12-horas sem zeros à esquerda; i.e. "1" até
        "12"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        G - hora, Forma com 24-horas sem zeros à esquerda; i.e. "0" até
        "23"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        h - hora, Forma com 12-horas; i.e. "01" até "12"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        H - hour, Forma com 24-hour; i.e. "00" até "23"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        i - mintos; i.e. "00" até "59"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        I (capital i) - "1" Se no horário de verão, senão "0".
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        j - Dia do mês sem zeros à esquerda; i.e. "1" até "31"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        l (minúscula 'L') - dia da semana, texo, longo;
        e.g. "Friday"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        L - booleano se é um ano bissexto; i.e. "0" ou "1"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        m - mês; i.e. "01" até "12"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        M - mês, texto, 3 letras; e.g. "Jan"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        n - mês sem zeros à esquerda; i.e. "1" até "12"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        O - Diferença entre o horário de Greenwich em horas; e.g. "+0200"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        r - RFC 822 formatted date; e.g. "Thu, 21 Dec 2000 16:01:07 +0200"
        (adicionda no PHP 4.0.4)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        s - segundos; i.e. "00" até "59"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        S - Sufixo ordinal para o dia do mês, 2 characteres;
        i.e. "st", "nd", "rd" or "th"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        t - numero de dias do dado mês; i.e. "28" até "31"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        T - Timezone setting desta máquina; e.g. "EST" or "MDT"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        U - segundos desde a época Unix (January 1 1970 00:00:00 GMT)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        w - dia da semana, numérico, i.e. "0" (domingo) até "6"
        (Sábado)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        W - ISO-8601 números de semanas do ano, semana começa na segunda-feira (adicionado no PHP 4.1.0)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Y - ano, 4 dígitos; e.g. "1999"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        y - ano, 2 digitos; e.g. "99"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        z - dia do ano; i.e. "0" até "365"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Z - timezone offset em segundos (i.e. "-43200" to "43200"). O
        offset para  as timezones oeste de UTC é sempre negativa, e para
        as leste de UTC é sempre positiva.
       </simpara>
      </listitem>
     </itemizedlist>
     Caracteres irreconhecíveis na forma de string serão impressas como são.
	  O "Z" formato poderá sempre retornar "0" quando usar
     <function>gmdate</function>.
    </para>
    <para>
     <example>
      <title><function>date</function> exemplo</title>
      <programlisting role="php">
<![CDATA[
echo date ("l dS of F Y h:i:s A");
echo "July 1, 2000 is on a " . date ("l", mktime(0,0,0,7,1,2000));
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Você pode prevenir um caracter conhecido no formato de string de um existente
     por escape com uma barra invertida precedendo-o. Se o caracter com a barra invertida já
	  é uma sequência especial , você pode precisar também de escape para a 
	  barra invertida.
     <example>
      <title>Caracteres de escape em <function>date</function></title>
      <programlisting role="php">
<![CDATA[
echo date("l \\t\h\e jS"); // prints something like 'Saturday the 8th'
]]>
      </programlisting>
     </example>
    </para>
    <para>
     É possível usar <function>date</function> e
     <function>mktime</function> juntos para encontrar datas no futuro ou 
	 no passado.
     <example>
      <title>
       <function>date</function> e <function>mktime</function>
       examplo
      </title>
      <programlisting role="php">
<![CDATA[
$tomorrow  = mktime (0,0,0,date("m")  ,date("d")+1,date("Y"));
$lastmonth = mktime (0,0,0,date("m")-1,date("d"),  date("Y"));
$nextyear  = mktime (0,0,0,date("m"),  date("d"),  date("Y")+1);
]]>
      </programlisting>
     </example>
     <note>
      <para>
       Esta pode ser mais confiável do que simplesmente adicionar ou subtrair o número
       de segundos em úm dia ou mês para um modelo de horário devido ao horário de verão.
      </para>
     </note>
    </para>
    <para>
     Alguns exemplos de <function>date</function> formatação. Note que
     você poderia escapar qualquer outro caracter, qualquer um que correntemente
     tenha um significado especial produziria resultados indesejáveis, e
     outros caracteres poderiam assumir significados em futuras versões do PHP.
     Quando usar escape, certifique o uso de aspas simples para evitar caracteres
     como \n próprio para novas linhas.
     <example>
      <title>
       <function>date</function> Formatação
      </title>
      <programlisting role="php">
<![CDATA[
/* Today is March 10th, 2001, 5:16:18 pm */
$today = date("F j, Y, g:i a");                 // March 10, 2001, 5:16 pm
$today = date("m.d.y");                         // 03.10.01
$today = date("j, n, Y");                       // 10, 3, 2001
$today = date("Ymd");                           // 20010310
$today = date('h-i-s, j-m-y, it is w Day z ');  // 05-16-17, 10-03-01, 1631 1618 6 Fripm01
$today = date('\i\t \i\s \t\h\e jS \d\a\y.');   // It is the 10th day.
$today = date("D M j G:i:s T Y");               // Sat Mar 10 15:16:08 MST 2001
$today = date('H:m:s \m \i\s\ \m\o\n\t\h');     // 17:03:17 m is month
$today = date("H:i:s");                         // 17:16:17
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Para formatar datas em outras línguas, você usaria as funções
     <function>setlocale</function> e <function>strftime</function>
     .
    </para>
    <para>
     
	 Veja também <function>getlastmod</function>, <function>gmdate</function>,
     <function>mktime</function>, <function>strftime</function>
     e <function>time</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

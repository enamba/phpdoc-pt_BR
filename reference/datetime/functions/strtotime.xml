<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
<!-- splitted from ./en/functions/datetime.xml, last change in rev 1.8 -->
  <refentry id="function.strtotime">
   <refnamediv>
    <refname>strtotime</refname>
    <refpurpose>
     Analisa qualquer descri&ccedil;&atilde;o em texto em ingl&ecirc;s de data hora em timestamp 
	 UNIX
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descri&ccedil;&atilde;o</title>
     <methodsynopsis>
      <type>int</type><methodname>strtotime</methodname>
      <methodparam><type>string</type><parameter>time</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>now</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     A fun&ccedil;&atilde;o espera que seja dado uma string contendo um formato de data em ingl&ecirc;s
     e tentar&aacute; analisar esse formato dentro de um timestamp Unix relativo ao 
	 timestamp dado em <parameter>now</parameter>, ou a hora atual 
     se nada &eacute; fornecido. Se fracassa, <literal>-1</literal> &eacute; retornado.
    </simpara>
    <simpara>
     Porque <function>strtotime</function> comporta-se de acordo com a sintaxe 
     de data GNU, procure na p&aacute;gina do manual GNU
	  <ulink url="&url.gnu.man.date-input;">Date Input Formats</ulink>.
     L&aacute; est&aacute; descrito a sintaxe v&aacute;lida para o par&acirc;metro <parameter>time</parameter>.
    </simpara>
    <para>
     <example>
      <title><function>strtotime</function> exemplos</title>
      <programlisting role="php">
<![CDATA[
echo strtotime ("now"), "\n";
echo strtotime ("10 September 2000"), "\n";
echo strtotime ("+1 day"), "\n";
echo strtotime ("+1 week"), "\n";
echo strtotime ("+1 week 2 days 4 hours 2 seconds"), "\n";
echo strtotime ("next Thursday"), "\n";
echo strtotime ("last Monday"), "\n";
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title>Checando por fracasso</title>
      <programlisting role="php">
<![CDATA[
$str = 'Not Good';
if (($timestamp = strtotime($str)) === -1) {
    echo "The string ($str) is bogus";
} else {
    echo "$str == ". date('l dS of F Y h:i:s A',$timestamp);
}
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <para>
      A linha de um timestamp v&aacute;lido &eacute; basicamente Fri, 13 Dec
      1901 20:45:54 GMT to Tue, 19 Jan 2038 03:14:07 GMT. (Estes s&atilde;o os dados 
	  que correspondem aos valores m&aacute;ximos e m&iacute;nimos para 
      um inteiro de 32-bit.)
     </para>
    </note>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

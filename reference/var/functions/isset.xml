<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.20 Maintainer: felipe Status: ready --><!-- CREDITS: kappu -->
<refentry xml:id="function.isset" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>isset</refname>
  <refpurpose>Informa se a variável foi iniciada</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
 &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>isset</methodname>
   <methodparam><type>mixed</type><parameter>var</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>var</parameter></methodparam>
   <methodparam choice="opt"><parameter>...</parameter></methodparam>
  </methodsynopsis>
  <simpara>
   Verifica se a variável é definida.
  </simpara>
  <para>
   Se a variável for destruída com <function>unset</function>, ela não existirá
   mais. <function>isset</function> retornará &false; se for usada em uma variável 
   com o valor &null;. Lembrando que no PHP um byte &null;
   (<literal>"\0"</literal>) é diferente da constante &null;.
  </para>
   <para>
   Se múltiplos parâmetros são fornecidos, então <function>isset</function> 
   retornará &true; somente se todos os parâmetros são definidos. A avaliação
   vai da esquerda para direita e pára logo que encontra uma variável não definida.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>var</parameter></term>
     <listitem>
      <para>
       A variável a ser verificada.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>var</parameter></term>
     <listitem>
      <para>
       Outra variável...
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>...</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna &true; se <parameter>var</parameter> existe; &false; caso contrário.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplos da <function>isset</function></title>
    <programlisting role="php">
<![CDATA[
<?php

$var = '';

// Será interpretado como TRUE imprimindo o texto.
if (isset($var)) {
    echo "Essa variável existe.";
}

// No próximo exemplo será usado var_dump para mostrar
// o valor de retorno de isset().

$a = "teste";
$b = "outrotest";

var_dump( isset($a) );      // TRUE
var_dump( isset ($a, $b) ); // TRUE

unset ($a);

var_dump( isset ($a) );     // FALSE
var_dump( isset ($a, $b) ); // FALSE

$foo = NULL;
var_dump( isset ($foo) );   // FALSE

?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Isto também serve para chaves associativas de matrizes:
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php

$a = array ('test' => 1, 'hello' => NULL);

var_dump( isset ($a['test']) );            // TRUE
var_dump( isset ($a['foo']) );             // FALSE
var_dump( isset ($a['hello']) );           // FALSE

// A chave 'hello' é igual a NULL sendo considerada como inexistente
// Se quiser verificar o valor NULL da chave tente:
var_dump( array_key_exists('hello', $a) ); // TRUE

?>
]]>
    </programlisting>
   </informalexample>
  </para>
 </refsect1>
   
 <refsect1 role="notes">
  &reftitle.notes;
  <warning>
   <para>
    <function>isset</function> somente funciona com variáveis, passando qualquer
    outra coisa resultará em um erro do analisador. Para verificar se
    <link linkend="language.constants">constants</link> estão definidas, use a
    função <function>defined</function>.
   </para>
  </warning>
  &note.language-construct;
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>empty</function></member>
    <member><function>unset</function></member>
    <member><function>defined</function></member>
    <member><link linkend="types.comparisons">a tabela de comparação de tipos</link></member>
    <member><function>array_key_exists</function></member>
    <member><function>is_null</function></member>
    <member>o operador <link linkend="language.operators.errorcontrol">@</link> de controle de erro</member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

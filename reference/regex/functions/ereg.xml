<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.16 Maintainer: felipe Status: ready --><!-- CREDITS: kappu -->
<refentry xml:id="function.ereg" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>ereg</refname>
  <refpurpose>Casando expressões regulares</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>ereg</methodname>
   <methodparam><type>string</type><parameter>pattern</parameter></methodparam>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter role="reference">regs</parameter></methodparam>
  </methodsynopsis>
  <simpara>
   Verifica se a <parameter>variavel</parameter> casa com a expressão
   regular definida em <parameter>expressao</parameter> em um modo
   sensível a distinção de caracteres (case sensitive).
  </simpara>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>pattern</parameter></term>
     <listitem>
      <para>
       A expressão regular case sensitive.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       A string de entrada.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>regs</parameter></term>
     <listitem>
      <para>
       Se existirem parênteses de substrings no <parameter>pattern</parameter>
       e for passado o terceiro parâmetro <parameter>regs</parameter> para a 
       função, a execução guardará os elementos resultantes na matriz 
       <parameter>regs</parameter>.
      </para>
      <para>
       $registros[1] irá conter a substring indicada pelo primeiro
       parenteses da esquerda; $registros[2] contém a segunda substring,
       e assim por diante. $registros[0] conterá uma cópia completa
       da variável casada.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna o tamanho da string encontrada se uma combinação de
   <parameter>pattern</parameter> foi encontrado em <parameter>string</parameter>,
   ou &false; se nenhuma combinação foi feita ou um erro que tenha ocorrido.
  </para>
  <para>
   Se o parâmetro opcional <parameter>regs</parameter> não foi passado ou
   o tamanho da string casada é 0, esta função retorna 1.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo da <function>ereg</function></title>
    <para>
     O exemplo seguinte pega uma data no padrão ISO (YYYY-MM-DD) e imprime na no
     formato DD.MM.YYYY:
    </para>
    <programlisting role="php">
<![CDATA[
<?php
if (ereg ("([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})", $data, $registros)) {
    echo "$registros[3].$registros[2].$registros[1]";
} else {
    echo "Formato de data inválido: $data";
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    <function>preg_match</function>, que usa a sintaxe de expressão regular
    compatível com Perl, é normalmente uma rápida alternativa para
    <function>ereg</function>.
   </para>
  </note>
  <note>
   <simpara>
    Nas versões superiores ao PHP 4.1.0 (inclusive) se você colocar exatamente 
    dez elementos em <varname>$registros</varname>, ou até mesmo mais elementos, 
    a expressão será executada. A quantidade não causará efeitos na função
    <function>ereg</function> que tem habilidade de suportar muitas substrings.
    Se a expressão não casar, <literal>$registros</literal>
    não será alterada por <function>ereg</function>.
   </simpara>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>eregi</function></member>
    <member><function>ereg_replace</function></member>
    <member><function>eregi_replace</function></member>
    <member><function>preg_match</function></member>
    <member><function>strpos</function></member>
    <member><function>strstr</function></member>
    <member><function>quotemeta</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

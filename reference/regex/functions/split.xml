<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.3 Maintainer: kappu Status: ready -->
<!-- splitted from ./en/functions/regex.xml, last change in rev 1.7 -->
  <refentry id="function.split">
   <refnamediv>
    <refname>split</refname>
    <refpurpose>Separa strings em matrizes(array) utilizando expressões regulares</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
    <methodsynopsis>
     <type>array</type><methodname>split</methodname>
     <methodparam><type>string</type><parameter>expressao</parameter></methodparam>
     <methodparam><type>string</type><parameter>variavel</parameter></methodparam>
     <methodparam choice="opt"><type>int</type><parameter>limite</parameter></methodparam>
    </methodsynopsis>
    <tip>
     <para>
      Utilize também as expressões regulares compátiveis com perl <function>preg_split</function>,
      que são frequentemente uma alternativa veloz para <function>split</function>.
      Se não necessitar de todo poder das expressões regulares,
      é mais rápido usar a função <function>explode</function>, a qual
      não carrega o sistema (engine) de expressões regulares
     </para>
    </tip>
    <para>
     Retorna uma matriz de strings, contendo as substrings de
     <parameter>variavel</parameter> separadas pelos limites
     descritos na expressão regular
     <parameter>expressao</parameter>.  Se <parameter>limite</parameter>
     for passado, o retorno será uma matriz com no máximo
     <parameter>limite</parameter> elementos, sendo que o último elemento
     irá conter o resto da <parameter>variavel</parameter>.  Se
     algum erro acontecer, <function>split</function> retornará &false;.
    </para>
    <para>
     Separa os quatro primeiro elementos de uma linha do arquivo
     <filename>/etc/passwd</filename>:
    </para>
    <para>
     <example>
      <title>Exemplo <function>split</function></title>
      <programlisting role="php">
<![CDATA[
<?php
list($user,$pass,$uid,$gid,$extra) =
    split (":", $passwd_line, 5);
?>
]]>
      </programlisting>
     </example>
    </para>
    <simpara>
     Se existirem <replaceable>n</replaceable> ocorrências da
     <parameter>expressao</parameter>, será retornado uma matriz(array) contendo
     <literal><replaceable>n</replaceable>+1</literal> items. Por exemplo, se
     não existir uma ocorrência de <parameter>expressao</parameter>, uma matriz de
     um único elemento será retornada. Certamente, retornará &true; se a
     <parameter>string</parameter> estiver vazia.
    </simpara>
    <para>
     Separação de dados delimitados por barras, pontos, ou
     traços:
    </para>
    <para>
     <example>
      <title>Exemplo <function>split</function></title>
      <programlisting role="php">
<![CDATA[
<?php
// Delimitado por barras, pontos ou traços
$data = "04/30/1973";
list ($mes, $dia, $ano) = split ('[/.-]', $data);
echo "Mês: $mes; Dia: $dia; Ano: $ano<br />\n";
?>
]]>
      </programlisting>
     </example>
    </para>

    <para>
     Para visualizar uma emulação do Perl e seus métodos<command>@chars =
     split('', $str)</command>, por favor veja os exemplos de
     <function>preg_split</function>.
    </para>

    <para>
     Preste atenção <parameter>expressao</parameter> é a expressão
     regular.  Se separar caracteres que são consideredos especiais
     para as expressões regulares, será necessário usar o caracter de
     escape primeiramente. Se você pensar que <function>split</function>
     (ou outra função para execução de expressões regulares) é muito
     estranha, por favor leia o arquivo <filename>regex.7</filename>,
     incluido na pasta <filename>regex/</filename> no subdiretório
     da distribuição do PHP. Está no formato manpage e você deverá usar
     o comando <command>man /usr/local/src/regex/regex.7</command>
     para maiores informações.
    </para>

    <para>
     Veja mais em: <function>preg_split</function>, <function>spliti</function>,
     <function>explode</function>, <function>implode</function>,
     <function>chunk_split</function> e <function>wordwrap</function>.
    </para>

   </refsect1>
  </refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

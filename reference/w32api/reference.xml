<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.13 Maintainer: narigone Status: ready -->
<!-- Purpose: utilspec.windows -->
<!-- Membership: pecl -->

 <reference xml:id="ref.w32api" xmlns="http://docbook.org/ns/docbook">
  <title>Funções da W32api</title>
  <titleabbrev>W32api</titleabbrev>

  <partintro>
   <section xml:id="w32api.intro">
    &reftitle.intro;
    <para>
     Essa extensão é uma API genérica de extensão para DLLs. Ela era originalmente
     escrita para permitir acesso à API Win32 a partir do PHP, embora você pode também
     acessar outras funções exportadas via outras DLLs.
    </para>
    <para>
     Os tipos atualmente suportados são tipos genéticos do PHP (strings, booleans, floats,
     inteiros e nulls) e tipos que você define com a função <function>w32api_deftype</function>.
    </para>
    <note>
     <para>
         &pecl.moved-ver;5.1.0.
     </para>
    </note>
    &warn.experimental;
   </section>

   <section xml:id="w32api.requirements">
    &reftitle.required;
    <para>
     Essa extensão só funciona em sistemas Windows.
    </para>
   </section>

   <section xml:id="w32api.installation">
    &reftitle.install;
    &no.install;
   </section>

   <section xml:id="w32api.configuration">
    &reftitle.runtime;
    &no.config;
   </section>

   <section xml:id="w32api.resources">
    &reftitle.resources;
    <para>
     Essa extensão define um tipo de recurso, usado por tipo definidos pelo usuário.
     O nome desse recurso é <literal>"dynaparm"</literal>.
    </para>
   </section>

   &reference.w32api.constants;

   <section xml:id="w32api.examples">
    &reftitle.examples;
    <para>
     Esse exemplo pega a quantidade de tempo que o sistema está executando e
     mostra em uma caixa de mensagem.
    </para>
    <example>
     <title>Pega o uptime e mostra em uma caixa de mensagem</title>
     <programlisting role="php">
<![CDATA[
<?php
// Define constantes necessárias, pegas do arquivo
// Visual Studio/Tools/Winapi/WIN32API.txt
define("MB_OK", 0);

// Carrega a extensão
dl("php_w32api.dll");

// Registra a função GetTickCount de kernel32.dll
w32api_register_function("kernel32.dll",
                         "GetTickCount",
                         "long");

// Registra a função MessageBoxA de User32.dll
w32api_register_function("User32.dll",
                         "MessageBoxA",
                         "long");

// Pega a informação do uptime
$ticks = GetTickCount();

// Converte a informação para um formato de gente
$secs  = floor($ticks / 1000);
$mins  = floor($secs / 60);
$hours = floor($mins / 60);

$str = sprintf("You have been using your computer for:" .
                "\r\n %d Milliseconds, or \r\n %d Seconds" .
                "or \r\n %d mins or\r\n %d hours %d mins.",
                $ticks,
                $secs,
                $mins,
                $hours,
                $mins - ($hours*60));

// Mostra uma caixa de mensagem com só um botão de OK e o texto de uptime
MessageBoxA(NULL,
            $str,
            "Uptime Information",
            MB_OK);
?>
]]>
     </programlisting>
    </example>
   </section>
  </partintro>

&reference.w32api.entities.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->


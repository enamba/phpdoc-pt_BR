<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.3 Maintainer: ae Status: ready --><!-- CREDITS: rarruda -->

  <refentry xml:id="function.base-convert" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>base_convert</refname>
    <refpurpose>Converte um número entre bases arbitrárias</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>string</type><methodname>base_convert</methodname>
      <methodparam><type>string</type><parameter>number</parameter></methodparam>
      <methodparam><type>int</type><parameter>frombase</parameter></methodparam>
      <methodparam><type>int</type><parameter>tobase</parameter></methodparam>
     </methodsynopsis>
    <para>
     Retorna uma string contendo <parameter>number</parameter>
     representado na base <parameter>tobase</parameter>. A base atual de
     <parameter>number</parameter> é especificada em
     <parameter>frombase</parameter>. Tanto
     <parameter>frombase</parameter> quanto <parameter>tobase</parameter>
     tem que estar entre 2 e 36, inclusive. Digitos em números com
     base maior do que 10 serão representados com letras a-z,
     com a significando 10, b significando 11 e z significando 35.
     <example>
      <title><function>base_convert</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$hexadecimal = 'A37334';
echo base_convert($hexadecimal, 16, 2);
?>
]]>
      </programlisting>
      <para>
       Exibe:
      </para>
      <screen>
<![CDATA[
101000110111001100110100
]]>
      </screen>
     </example>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

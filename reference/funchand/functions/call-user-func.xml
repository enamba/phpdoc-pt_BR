<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.6 Maintainer: marcelo Status: ready $ -->
<!-- splitted from ./en/functions/funchand.xml, last change in rev 1.1 -->
  <refentry id="function.call-user-func">
   <refnamediv>
    <refname>call_user_func</refname>
    <refpurpose>
     Chama uma função de usuário dada pelo primeiro parâmetro
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>mixed</type><methodname>call_user_func</methodname>
      <methodparam><type>callback</type><parameter>function</parameter></methodparam>
      <methodparam choice="opt"><type>mixed</type><parameter>parameter</parameter></methodparam>
      <methodparam choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
     </methodsynopsis>
    <para>
     Chama uma função de usuário dada pelo parâmtro por
     <parameter>function</parameter>. Tome o seguinte exemplo:
    </para>
    <para>
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
function barber ($type) {
    print "You wanted a $type haircut, no problem";
}
call_user_func ('barber', "mushroom");
call_user_func ('barber', "shave");
?>
]]>
      </programlisting>
     </informalexample>
    </para>
    <para>
     Métodos de objeto também devem ser chamados estaticamente usando essa função
     passando <literal>array($objectname, $methodname)</literal>
     para o parâmetro <parameter>function</parameter>.
    </para>
    <para>
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
class myclass {
  function say_hello() {
    print "Hello!\n";
  }
}

$classname = "myclass";

call_user_func(array($classname,'say_hello'));
?>
]]>
      </programlisting>
     </informalexample>
    </para>
    <para>
     Veja também:
     <function>is_callable</function>,
     <function>call_user_func_array</function>,
     <function>call_user_method</function>,
     <function>call_user_method_array</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

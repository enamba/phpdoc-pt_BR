<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.11 Maintainer: felipe Status: ready --><!-- CREDITS: marcelo -->
<refentry xml:id="function.func-get-arg" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>func_get_arg</refname>
  <refpurpose>Retorna um item para uma lista de argumentos</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>func_get_arg</methodname>
   <methodparam><type>int</type><parameter>arg_num</parameter></methodparam>
  </methodsynopsis>
  <para>
   Obtém o argumento especificado da lista de argumento de uma função definida
   pelo usuário.
  </para>
  <para>
   Esta função pode ser usada juntamente com
   <function>func_get_arg</function> e <function>func_num_args</function>
   para usar com variável lista de argumentos.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>arg_num</parameter></term>
     <listitem>
      <para>
       O índice do argumento. Argumentos de função são contados iniciando de
       zero.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna o argumento especificado, ou &false; em erro.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Gera um aviso se chamado fora de uma função definida pelo usuário, ou
   se <parameter>arg_num</parameter> é maior que o número de argumentos
   passado.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo da <function>func_get_arg</function></title>
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
function foo()
{
     $numargs = func_num_args();
     echo "Number of arguments: $numargs<br />\n";
     if ($numargs >= 2) {
     echo "Second argument is: " . func_get_arg(1) . "<br />\n";
     }
} 

foo (1, 2, 3);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.funcnoparam;
  <note>
   <simpara>
    Esta função retorna somente uma cópia dos argumentos passados, e não 
    conta por argumentos padrão (não passado).
   </simpara>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>func_get_args</function></member>
    <member><function>func_num_args</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

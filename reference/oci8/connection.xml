<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.2 Maintainer: felipe Status: ready -->
<chapter xml:id="oci8.connection" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Connecting Handling</title>
 <para>
  A extensão oci8 oferece a você 3 diferentes funções para conectar ao Oracle.
  Isto para você usar a mais apropriada função para sua aplicação, e a informação
  nesta seção tem objetivo de ajudar a fazer um boa escolha.
 </para>
 <para>
  Conectar a um servidor Oracle é uma razoavelmente grande operação, em termos
  de tempo que isto leva para completar. A função <function>oci_pconnect</function>
  usa uma cache persistente de conexões que pode ser reusado para diferentes
  requisições. Isto significa que você irá normalmente somente fazer a conexão
  uma vez por processo php (ou processo filho do apache).
 </para>
 <para>
  Se sua aplicação conecta ao Oracle usando um diferente conjunto de
  credenciais para cada usuário web, o cache persistente empregado por
  <function>oci_pconnect</function> será pouco útil como o
  número de usuários concorrentes aumenta, pelo o ponto onde ele pode
  iniciar um efeito inversamente ao da performance de seu servidor Oracle
  devido a muitas conexões ociosas. Se sua aplicação é estruturada
  desta forma, é recomendado que esteja usando as definições de configuração <link
   linkend="ini.oci8.max-persistent">oci8.max_persistent</link> e <link
   linkend="ini.oci8.persistent-timeout">oci8.persistent_timeout</link>
  (estas irão dar a você controle sobre o tamanho do cache e tempo de vida
  e conexões persistentes) ou usar <function>oci_connect</function> ao invés.
 </para>
 <para>
  Ambas <function>oci_connect</function> e <function>oci_pconnect</function>
  usando um cache de conexão; se você fiz múltiplas chamadas para
  <function>oci_connect</function>, usando os mesmo parâmetros, em um
  dado script, o segundo e subseqüêntes chamadas retornam o existente
  manipulador de conexão. O cache usado por <function>oci_connect</function>
  é limpado no final da execução do script, ou quando você explicitamente
  fecha um manipulador de conexão. <function>oci_pconnect</function> tem um
  comportamento similar, embora o cache seja mantido separadamente e sobreviva
  entre requisições.
 </para>
 <para>
  Este recurso de cache é importamente lembrar, porque ele dá a
  aparência que os dois manipuladores não são transacionalmente isolados (eles
  são de fato o mesmo manipulador de conexão, então não há nenhum tipo de
  isolamento). Se sua aplicação precisa ter dois separados, conexões
  transacionalmente isoladas, você precisa usar <function>oci_new_connect</function>.
 </para>
 <para>
  <function>oci_new_connect</function> sempre cria uma nova conexão para
  o servidor Oracle, desconsiderando que outras conexões possa já existir.
  Aplicações de bastante tráfego web devem tentar evitar usar
  <function>oci_new_connect</function>, especialmente na parte de negócias
  da aplicação.
 </para>
</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->


<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.4 Maintainer: marcelo Status: ready -->
<!-- splitted from ./en/functions/oracle.xml, last change in rev 1.2 -->
  <refentry xml:id="function.ora-bind" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>ora_bind</refname>
    <refpurpose>Passa uma variável PHP para um parâmetro do Oracle</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>bool</type><methodname>ora_bind</methodname>
      <methodparam><type>resource</type><parameter>cursor</parameter></methodparam>
      <methodparam><type>string</type><parameter>PHP_variable_name</parameter></methodparam>
      <methodparam><type>string</type><parameter>SQL_parameter_name</parameter></methodparam>
      <methodparam><type>int</type><parameter>length</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>type</parameter></methodparam>
     </methodsynopsis>
    <para>
     Essa função passa variáveis nomeadas do PHP com um parâmetro SQL.
     O parâmetro SQL deve ser no formato ":name". Com o parâmetro
     type opcional, você pode definir se o parâmetro SQL são  
     in/out (0, default), in (1) ou out (2). Usando PHP
     3.0.1, você pode usar as constantes ORA_BIND_INOUT, ORA_BIND_IN e
     ORA_BIND_OUT ao invés dos números.
    </para>
    <para>
     &return.success; Detalhes sobre erros podem ser retornados usando as funções
     <function>ora_error</function> e <function>ora_errorcode</function>.
     
    </para>
    <para>
     <function>ora_bind</function> deve ser chamado após <function>ora_parse</function>
     e antes de <function>ora_exec</function>. Dados inseridos podem ser dados
     por tarefa para variáveis PHP, após chamada de 
     <function>ora_exec</function> as variáveis PHP irão conter os valores se disponíveis.

     <example>
      <title>Exemplo <function>ora_bind</function></title>
      <programlisting role="php">
<![CDATA[
<?php
  ora_parse($curs, "declare tmp INTEGER; begin tmp := :in; :out := tmp; :x := 7.77; end;");
  ora_bind($curs, "result", ":x", $len, 2);
  ora_bind($curs, "input", ":in", 5, 1);
  ora_bind($curs, "output", ":out", 5, 2);
  $input = 765;
  ora_exec($curs);
  echo "Result: $result<BR>Out: $output<BR>In: $input";
?>
]]>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./pt_BR/functions/dir.xml, last change in rev 1.1 -->
<!-- last change to 'class.dir' in en/ tree in rev 1.2 -->
  <refentry id="class.dir">
   <refnamediv>
    <refname>dir</refname>
    <refpurpose>classe diretório</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>objeto</type><methodname>dir</methodname>
      <methodparam><type>string</type><parameter>diretorio</parameter></methodparam>
     </methodsynopsis>
    <para>
     Um mecanismo pseudo-orientado a objeto para ler um diretório.
     O parametro dado <parameter>diretorio</parameter> é aberto.
     Duas propriedades são disponíveis uma vez que o diretório foi aberto.
     A propriedade sinônima pode ser usada com outras funções de diretório
     como <function>readdir</function>, <function>rewinddir</function> e
     <function>closedir</function>. A propriedade path é configurada
     para o path que o diretório foi aberto. Três metodos são
     disponibilizados: read, rewind e close.
     <example>
      <title><function>dir</function> example</title>
      <programlisting role="php">
<![CDATA[
$d = dir("/etc");
echo "Handle: ".$d->handle."<br>\n";
echo "Path: ".$d->path."<br>\n";
while (false !== ($entry = $d->read())) {
    echo $entry."<br>\n";
}
$d->close();
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <para>
      A ordem em que os diretórios são retornadas pelo metodo é dependente do
      sistema.
     </para>
    </note>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

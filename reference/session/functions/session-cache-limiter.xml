<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
<!-- splitted from ./en/functions/session.xml, last change in rev 1.62 -->
  <refentry id="function.session-cache-limiter">
   <refnamediv>
    <refname>session_cache_limiter</refname>
    <refpurpose>Obtém e/ou define o limitador do cache atual</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>string</type><methodname>session_cache_limiter</methodname>
      <methodparam choice="opt"><type>string</type><parameter>cache_limiter</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>session_cache_limiter</function> retorna o nome do atual
     limitador do cache. Se o <parameter>cache_limiter</parameter> está
     especificado, o nome do limitador do cache atual é mudado para o novo
     valor.
    </para>
    <para>
     O limitador do cache controla HTTP headers enviados para o cliente.
       Estes headers determinam pelas quais o conteúdo da página 
     pode ser guardado no cache.  Definindo o limitador do cache para <literal>nocache</literal>,
     por exemplo, rejeitaria qualquer armazenamento no cache do cliente.  Um valor como
     <literal>public</literal>, entretanto, permitiria o armazenamento no cache.  Ele também 
     poderia ser definido como <literal>private</literal>, que é um pouco mais restritivo
     do que <literal>public</literal>.
    </para>
    <para>
     No modo <literal>private</literal> , Header expirado enviado para o 
	 cliente, pode provocar confusão para alguns para alguns navegadores
	  incluindo o Mozilla. Você pode evitar este problema com o modo
     <literal>private_no_expire</literal>. Header expirado nunca é enviado 
	 para o cliente nesse modo.
    </para>
    <note>
     <para>
      <literal>private_no_expire</literal> foi adicionado no PHP 4.2.0dev.
     </para>
    </note>
    <para>
     O limitador do cache é zerado para o valor padrão guardado em
     <literal>session.cache_limiter</literal> no pedido do startup time. Assim,
     você precisa chamar <function>session_cache_limiter</function> para cada
     pedido (e antes <function>session_start</function> é chamada).
    </para>
    <example>
     <title><function>session_cache_limiter</function> exemplos</title>
     <programlisting role="php">
<![CDATA[
<?php

# Defini o limitador do cache para 'private'

session_cache_limiter('private');
$cache_limiter = session_cache_limiter();

echo "o limitador do cache está definido agora para $cache_limiter<p>";
?>
]]>
     </programlisting>
    </example>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.7 Maintainer: fernandoc Status: ready -->
<!-- CREDITS: surfmax -->
<!-- splitted from ./en/functions/session.xml, last change in rev 1.38 -->
  <refentry id='function.session-cache-expire'>
   <refnamediv>
    <refname>session_cache_expire</refname>
    <refpurpose>Retorna o prazo do cache atual</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>int</type><methodname>session_cache_expire</methodname>
      <methodparam choice="opt"><type>int</type><parameter>new_cache_expire</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>session_cache_expire</function> retorna o prazo do cache atual.
     O valor retornado deve ser lido em minutos, sendo o padrão de 180 minutos.
     Se <parameter>new_cache_expire</parameter> for dado, o prazo do
     cache atual é substituído com <parameter>new_cache_expire</parameter>.
    </para>
    <para>
     O prazo para o cache expirar e retornado ao padrão de 180 minutos
     guardado em <literal>session.cache_limiter</literal> no inicio do script.
     Então você precisa usar <function>session_cache_expire</function> para
     cada requesição (e antes que <function>session_start</function> seja utilizada).
    </para>
    <para>
     <example>
      <title>Exemplo <function>session_cache_expire</function></title>
      <programlisting role="php">
<![CDATA[
<?php

/* Define o limitador de cache para 'private' */
session_cache_limiter('private');
$cache_limiter = session_cache_limiter();

/* Define o limite de tempo do cache em 30 minutos */
session_cache_expire(30);
$cache_expire = session_cache_expire();

/* Inicia a sessão */
session_start();
echo "O limitador de cache esta definido agora como $cache_limiter<br />"; 
echo "As sessões em cache irão expirar em $cache_expire minutos";
?>
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <simpara>
      Definindo <parameter>new_cache_expire</parameter> funciona somente se
      <literal>session.cache_limiter</literal> tiver um valor
      <emphasis>diferente</emphasis> de <literal>nocache</literal>.
     </simpara>
    </note>
      <para>
       Veja também as configurações para <link linkend="ini.session.cache-expire">
       session.cache_expire</link>, <link linkend="ini.session.cache-limiter">
       session.cache_limiter</link> e a função <function>session_cache_limiter</function>.
      </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

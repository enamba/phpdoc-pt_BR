<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.11 Maintainer: narigone Status: ready -->
<!-- $Revision: 1.1 $ -->
 <reference id="ref.wddx">
  <title>Funções WDDX</title>
  <titleabbrev>WDDX</titleabbrev>
  
  <partintro>
   <section id="wddx.intro">
    &reftitle.intro;
    <para>
     Essas funções tem o intuito de funcionara com <ulink
     url="&url.wddx;">WDDX</ulink>.
    </para>
   </section>
   
   <section id="wddx.requirements">
    &reftitle.required;
    <para>
     Para usar WDDX, você precisará instalar a biblioteca expat 
     (que vem com o Apache 1.3.7 ou superior).
    </para>
   </section>
   
   &reference.wddx.configure;
   
   <section id="wddx.configuration">
    &reftitle.runtime;
    &no.config;
   </section>

   <section id="wddx.resources">
    &reftitle.resources;
    &no.resource;
   </section>

   <section id="wddx.constants">
    &reftitle.constants;
    &no.constants;
   </section>

   <section id="wddx.examples">
    &reftitle.examples;
    <para>
     Todas as funções que serializam variáveis usam o primeiro
     elemento de um array para determinar se o array deve ser
     serializado em um array ou estrutura. Se o primeiro elemento
     tem uma chave string, então ele é serializado em uma estrutura, caso contrário,
     em um array.
    </para>
    
    <example>
     <title>Serializando um único valor com WDDX</title>
     <programlisting role="php">
<![CDATA[
<?php
echo wddx_serialize_value("PHP to WDDX packet example", "PHP packet");
?>
]]>
     </programlisting>
     <para>
      Esse exemplo produzirá:
     </para>
     <screen>
<![CDATA[
<wddxPacket version='1.0'><header comment='PHP packet'/><data>
<string>PHP to WDDX packet example</string></data></wddxPacket>
]]>
     </screen>
    </example>
 
    <example>
     <title>Usando pacotes incrementais com WDDX</title>
     <programlisting role="php">
<![CDATA[
<?php
$pi = 3.1415926;
$packet_id = wddx_packet_start("PHP");
wddx_add_vars($packet_id, "pi");

/* Suppose $cities came from database */
$cities = array("Austin", "Novato", "Seattle");
wddx_add_vars($packet_id, "cities");

$packet = wddx_packet_end($packet_id);
echo $packet;
?>
]]>
     </programlisting>
     <para>
      Esse exemplo produzirá:
     </para>
     <screen>
<![CDATA[
<wddxPacket version='1.0'><header comment='PHP'/><data><struct>
<var name='pi'><number>3.1415926</number></var><var name='cities'>
<array length='3'><string>Austin</string><string>Novato</string>
<string>Seattle</string></array></var></struct></data></wddxPacket>
]]>
     </screen>
    </example>

    <note>
     <para>
      Se você quiser serializar caracteres não-ASCII, você tem que primeiro
      converter seus dados para UTF-8 (veja <function>utf8_encode</function> e
      <function>iconv</function>).
     </para>
    </note>
   </section>
  </partintro>

&reference.wddx.functions;

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->


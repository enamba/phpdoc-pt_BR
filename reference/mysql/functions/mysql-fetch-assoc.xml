<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.9 Maintainer: fernandoc Status: ready -->
<!-- splitted from ./en/functions/mysql.xml, last change in rev 1.45 -->
  <refentry id="function.mysql-fetch-assoc">
   <refnamediv>
    <refname>mysql_fetch_assoc</refname>
    <refpurpose>
     Busca o resultado de uma linha e o coloca numa matriz associativa
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>array</type><methodname>mysql_fetch_assoc</methodname>
      <methodparam><type>resource</type><parameter>result</parameter></methodparam>
     </methodsynopsis>
    <para>
     Retorna uma matriz associativa que corresponde a linha 
     ou &false; se não houverem mais linhas.</para>
    <para>
     <function>mysql_fetch_assoc</function> é equivalente a chamar
     <function>mysql_fetch_array</function> com MYSQL_ASSOC para o segundo
     parâmetro, que é opcional. Somente retorna uma matriz associativa.
     Este é o  jeito que <function>mysql_fetch_array</function> funcionava 
     originalmente. Se você precisa dos índices numéricos assim como o 
     associativo, use <function>mysql_fetch_array</function>.
    </para>
    <para>Se duas ou mais colunas do resultado tiverem o mesmo nome do campo,
     a ultima coluna terá precedência. Para acessar as outras coluna(s) com o mesmo nome, 
     você deve usar o índice numérico da coluna usando <function>mysql_fetch_row</function> ou 
     fazer um apelido para a coluna.
     Veja o exemplo em <function>mysql_fetch_array</function>
     uma descrição para apelidos.
    </para>
    <para>
     Uma coisa importante para notar é que usar
     <function>mysql_fetch_assoc</function> <emphasis>não é 
     significativamente</emphasis> mais lenta do que usar
     <function>mysql_fetch_row</function>, enquanto produz um resultado melhor de usar.
    </para>
    &database.field-case;
    <para>
    <example>
     <title><function>mysql_fetch_assoc</function></title>
     <programlisting role="php">
<![CDATA[
<<?php

$conn = mysql_connect("localhost", "mysql_user", "mysql_password");

if (!$conn) {
    echo "Não foi possível conectar com o banco de dados: " . mysql_error();
    exit;
}
    
if (!mysql_select_db("mydbname")) {
    echo "Não foi possível selecionar mydbname: " . mysql_error();
    exit;
}

$sql = "SELECT id as userid, fullname, userstatus 
        FROM   sometable
        WHERE  userstatus = 1";

$result = mysql_query($sql);

if (!$result) {
    echo "Não foi possível executar a consulta ($sql) apartir do banco de dados: " . mysql_error();
    exit;
}

if (mysql_num_rows($result) == 0) {
    echo "Não foram encontradas linhas, nada para mostrar, então estou saindo";
    exit;
}

// Enquanto existir uma linha de dados, coloca esta linha em $row como uma matriz associativa
// Nota: Se você esta esperando apenas uma linha, nõa é necessário usar um loop
// Note: Se você colocar extract($row); dentro do loop a seguir, você então 
//       criará $userid, $fullname, e $userstatus
while ($row = mysql_fetch_assoc($result)) {
    echo $row["userid"];
    echo $row["fullname"];
    echo $row["userstatus"];
}

mysql_free_result($result);

?>
]]>
     </programlisting>
    </example>
    </para>
    <para>
     Veja também
     <function>mysql_fetch_row</function>,
     <function>mysql_fetch_array</function> e
     <function>mysql_query</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

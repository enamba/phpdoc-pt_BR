<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 288721 Maintainer: fernandoc Status: ready -->
<!-- splitted from ./en/functions/exec.xml, last change in rev 1.2 -->
  <refentry xml:id="function.escapeshellcmd" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>escapeshellcmd</refname>
    <refpurpose>escapa metacaracteres shell</refpurpose>
   </refnamediv>
   
    <refsect1 role="description">
    &reftitle.description;
     <methodsynopsis>
      <type>string</type><methodname>escapeshellcmd</methodname>
      <methodparam><type>string</type><parameter>command</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>escapeshellcmd</function> escapa qualquer caractere em uma string
     que possa ser utilizado para enganar um comando shell para executar
     comandos arbritários. Esta função deve ser utilizada para ter certeza 
     que quaisquer dados vindos do usuário é escapado antes que
     estes dados sejam passados para as funções <function>exec</function> ou
     <function>system</function>, ou para <link
     linkend="language.operators.execution">backtick
     operator</link>.
    </para>
    <para>
     Os seguintes caracteres são precedidos por uma barra invertida:
     <literal>#&amp;;`|*?~&lt;&gt;^()[]{}$\</literal>, <literal>\x0A</literal>
     e <literal>\xFF</literal>. <literal>'</literal> e <literal>"</literal>
     são escapados apenas se não estiverem em pares. No windows, todos estes caracteres
     mais <literal>%</literal> são ao invés substituidos por um espaço.
    </para>
   </refsect1>

   <refsect1 role="parameters">
    &reftitle.parameters;
    <para>
     <variablelist>
      <varlistentry>
       <term><parameter>command</parameter></term>
       <listitem>
       <para>
        O comando que será escapado.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
    </para>
   </refsect1>

  <refsect1 role="returnvalues">
   &reftitle.returnvalues;
   <para>
    A string escapada.
   </para>
  </refsect1>

  <refsect1 role="examples">
   &reftitle.examples;
   <para>
    <example>
    <title>Exemplo <function>escapeshellcmd</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$e = escapeshellcmd($userinput);

// Aqui não nos preocupamos se $e tem espaços
system("echo $e");
$f = escapeshellcmd($filename);

// aqui sim
system("touch \"/tmp/$f\"; ls -l \"/tmp/$f\"");
?>
]]>
      </programlisting>
     </example>
    </para>
    </refsect1>
    <refsect1 role="seealso">
     &reftitle.seealso;
    <para>
     <simplelist>
      <member><function>escapeshellarg</function></member>
      <member><function>exec</function></member>
      <member><function>popen</function></member>
      <member><function>system</function></member>
      <member><link linkend="language.operators.execution">backtick operator</link></member>
     </simplelist>
    </para>

   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

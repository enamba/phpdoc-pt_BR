<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.5 Maintainer: fernandoc Status: ready -->
<!-- splitted from ./en/functions/exec.xml, last change in rev 1.2 -->
  <refentry id="function.exec">
   <refnamediv>
    <refname>exec</refname>
    <refpurpose>Executa um programa externo</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>string</type><methodname>exec</methodname>
      <methodparam><type>string</type><parameter>command</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter>output
       </parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>return_var</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>exec</function> executa o
     <parameter>command</parameter> dado, em todo o caso ele não
     mostra nada. Ele simplesmente retorna a última linha do resultado do comando.
     Se você precisar executar o comando e ter todos os dados do comando
     passado diretamente de volta sem interferencia, use
     a função <function>passthru</function>.
    </para>
    <para>
     Se o argumento <parameter>output</parameter> estiver presente, então a matriz especificada
     será prenchida com cada linha da saída do comando. Finais de linha, como
     <literal>\n</literal>, não são incluídos nesta matriz. Note que se a matriz
     já contiver alguns elementos, <function>exec</function> irá adicionar ao final da matriz.
     Se você não quiser que a função adicione elementos, use
     <function>unset</function> antes de passar ela para
     <function>exec</function>.
    </para>
    <para>
     Se o argumento <parameter>return_var</parameter> esta presente
     junto com o argumento <parameter>array</parameter>, então o status de retorno
     do comando executado será escrito nesta variável.
    </para>
    <warning>
     <para>
      Se você vai permitir que dados vindos dos usuários sejam passados para
      esta função, então você deve usar
      <function>escapeshellarg</function> ou
      <function>escapeshellcmd</function> para ter certeza que os usuários não possam
      enganar o sistema usando comandos arbritários.
     </para>
    </warning>
    <note>
     <para>
      Se você começar um programa usando esta função e quer deixar que ele
      seja executado em segundo plano, você deve ter certeza que a saída deste programa
      é redirecionado para um arquivo ou outra saída se não o PHP irá esperar
      até terminar a execução do programa.
     </para>
    </note>
    <para>
     Veja também <function>system</function>,
     <function>passthru</function>, <function>popen</function>,
     <function>escapeshellcmd</function>, e <link
     linkend="language.operators.execution">backtick operator</link>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.9 Maintainer: fernandoc Status: ready -->
<!-- splitted from ./en/functions/exec.xml, last change in rev 1.24 -->
  <refentry id="function.system">
   <refnamediv>
    <refname>system</refname>
    <refpurpose>Executa um programa externo e mostra a saída</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>string</type><methodname>system</methodname>
      <methodparam><type>string</type><parameter>command</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>return_var</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>system</function> é igual a versão C desta função no que executa
     o <parameter>command</parameter> indicado e mostra o resultado. Se é dada
     uma variável como segundo argumento, então o código de status de retorno
     será escrito nesta variável.
    </para>
    &warn.escapeshell;
    &note.exec-bg;
    <para>
     A função <function>system</function> também tenta automaticamente
     limpar o buffer de saída do servidor mandando os dados para o browser 
     após cada linha de saída se o PHP estiver sendo executado como módulo de servidor.
    </para>
    <para>
     Retorna a última linha da saída do comando em caso de sucesso ou
     &false; em caso de falha.
    </para>
    <para>
     Se você precisa executar um comando e ter todos os dados do comando
     passados sem nenhuma interferencia, use a função
     <function>passthru</function>.
    </para>
    <para>
     <example>
      <title>Exemplo <function>system</function></title>
      <programlisting role="php">
<![CDATA[
<?php
echo '<pre>';

// Mostra todo o resultado do comando do shell "ls", e retorna
// a última linha da saída em $last_line. Guarda o valor de retorno
// do comando shell em $retval.
$last_line = system('ls', $retval);

// Mostrando informação adicional
echo '
</pre>
<hr />Última linha da saída: '.$last_line.'
<hr />Valor de Retorno: '.$retval;
?>
]]>
      </programlisting>
     </example>
    </para>
    &note.exec-path;
    &warn.sm.exec;
    <para>
     Veja também <function>exec</function>,
     <function>passthru</function>, <function>popen</function>,
     <function>escapeshellcmd</function>,
     <function>pcntl_exec</function> e <link
     linkend="language.operators.execution">backtick operator</link>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.5 Maintainer: fernandoc Status: ready -->
  <refentry xml:id="function.mysqli-insert-id" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>mysqli_insert_id</refname>
    <refname>mysqli->insert_id</refname>
    <refpurpose>Retorna o id gerado automaticamente na última consulta</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <para>Estilo de procedimento:</para>
     <methodsynopsis>
      <type>mixed</type><methodname>mysqli_insert_id</methodname>
      <methodparam><type>object</type><parameter>link</parameter></methodparam>
     </methodsynopsis>
     <para>Estilo orientado a objeto (proprieadade):</para>
     <classsynopsis>
      <ooclass><classname>mysqli</classname></ooclass>
       <fieldsynopsis><type>mixed</type><varname>insert_id</varname></fieldsynopsis>
     </classsynopsis>
    <para>
     A função <function>mysqli_insert_id</function> retorna o ID gerado
     pela consulta em uma tabela com uma coluna com o atributo AUTO_INCREMENT. Se
     a última consulta não foi um INSERT ou UPDATE ou se a tabela modificada
     não tem uma coluna com o atributo AUTO_INCREMENT, esta função
     irá retornar zero.
    </para>
    <note>
     <para>
      Executar uma consulta INSERT ou UPDATE usando a função LAST_INSERT_ID()
      irá também modificar o valor retornado pela função
      <function>mysqli_insert_id</function>.
     </para>
    </note>
   </refsect1>
   <refsect1>
    &reftitle.returnvalues;
    <para>
      O valor do campo <literal>AUTO_INCREMENT</literal> que foi atualizado
      pela consulta anterior. Retorna zero se não houve uma consulta anterior na conexão
      ou se a consulta não atualizou um valor
      <literal>AUTO_INCREMENT</literal>. 
  </para>
  <note> 
   <para>
    Se o número for maior do que o maior valor inteiro possível, <function>mysqli_insert_id</function> 
    irá retornar uma string.
   </para>
  </note>
 </refsect1>
 <refsect1>
  <title>Exemplo</title>
  <example>
   <title>Estilo orientado a objeto</title>
   <programlisting role="php">
<![CDATA[
<?php
$mysqli = new mysqli("localhost", "my_user", "my_password", "world");

/* check connection */
if (mysqli_connect_errno()) {
    printf("Connect failed: %s\n", mysqli_connect_error());
    exit();
}

$mysqli->query("CREATE TABLE myCity LIKE City");

$query = "INSERT INTO myCity VALUES (NULL, 'Stuttgart', 'DEU', 'Stuttgart', 617000)";
$mysqli->query($query);

printf ("New Record has id %d.\n", $mysqli->insert_id);

/* drop table */
$mysqli->query("DROP TABLE myCity");

/* close connection */
$mysqli->close();
?>
]]>
  </programlisting>
  </example>
  <example>
   <title>Estilo de procedimento</title>
   <programlisting role="php">
<![CDATA[
<?php
$link = mysqli_connect("localhost", "my_user", "my_password", "world");

/* check connection */
if (mysqli_connect_errno()) {
    printf("Connect failed: %s\n", mysqli_connect_error());
    exit();
}

mysqli_query($link, "CREATE TABLE myCity LIKE City");

$query = "INSERT INTO myCity VALUES (NULL, 'Stuttgart', 'DEU', 'Stuttgart', 617000)";
mysqli_query($link, $query);

printf ("New Record has id %d.\n", mysqli_insert_id($link));

/* drop table */
mysqli_query($link, "DROP TABLE myCity");

/* close connection */
mysqli_close($link);
?>
]]>
   </programlisting>
  </example>
  <para>
   Os exemplos acima devem produzir a seguinte saída:
  </para>
  <screen>
<![CDATA[
New Record has id 1.
]]>
  </screen>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

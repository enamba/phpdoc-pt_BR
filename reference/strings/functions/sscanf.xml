<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.16 Maintainer: surfmax Status: ready -->
<!-- splitted from ./en/functions/strings.xml, last change in rev 1.33 -->
  <refentry xml:id="function.sscanf" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>sscanf</refname>
    <refpurpose>
     Interpreta a entrada de uma string de acordo com um formato
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>mixed</type><methodname>sscanf</methodname>
      <methodparam><type>string</type><parameter>str</parameter></methodparam>
      <methodparam><type>string</type><parameter>formato</parameter></methodparam>
      <methodparam choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
     </methodsynopsis>
    <para>
     A função <function>sscanf</function> é análoga a
     <function>printf</function>. <function>sscanf</function> lê da
     string <parameter>str</parameter> e interpreta ela de acordo com
     o <parameter>formato</parameter> especificado. Como é descrito
     na documentação para <function>sprintf</function>. Se apenas
     dois parâmetros forem passados para esta função, os valores interpretados
     serão retornados como array. Caso contrário, se parâmetros opcionais são passados,
     a função retornará o número de valores atribuídos. Os parâmetros opcionais
     precisam ser passados por referência.
    </para>
    <para>
     Qualquer espaço em branco na string de formato será comparada com qualquer espaço
      em branco na string de entrada. Isto significa que até mesmo um tab \t na string 
      de formato pode ser comparada com um caractere de espaço simples na string de entrada.
    </para>
    <para>
     <example>
      <title>Exemplo da <function>sscanf</function></title>
      <programlisting role="php">
<![CDATA[
<?php
// Pegando o número serial
list($serial) = sscanf("SN/2350001","SN/%d");
// e a data de criação
$mandate = "January 01 2000";
list($month, $day, $year) = sscanf($mandate,"%s %d %d");
echo "O Item $serial foi criado em: $year-".substr($month,0,3)."-$day\n";
?>
]]>
      </programlisting>
     </example>
     Se parâetros opcionais são passados, a função retornará o número de valores
     assumidos.
     <example>
      <title><function>sscanf</function> - usando parâmetros opcionais</title>
      <programlisting role="php">
<![CDATA[
<?php
// pega informação do autor e gera uma entrada de DocBook
$auth = "24\tLewis Carroll";
$n = sscanf($auth,"%d\t%s %s", $id, $first, $last);
echo "<author xml:id='$id'>
    <firstname>$first</firstname>
    <surname>$last</surname>
</author>\n";
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Veja também <function>fscanf</function>, <function>printf</function>,
     e <function>sprintf</function>. 
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

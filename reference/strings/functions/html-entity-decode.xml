<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: n/a Maintainer: fernandoc Status: ready -->
<!-- splitted from ./en/functions/strings.xml, last change in rev 1.2 -->
  <refentry xml:id="function.html-entity-decode" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>html_entity_decode</refname>
    <refpurpose>Converte todas as entidades HTML para os seus caracteres</refpurpose>
   </refnamediv>
   
 <refsect1 role="description">
  &reftitle.description;
     <methodsynopsis>
      <type>string</type><methodname>html_entity_decode</methodname>
      <methodparam><type>string</type><parameter>string</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>quote_style</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>charset</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>html_entity_decode</function> é o oposto da função
     <function>htmlentities</function> no que converte todas as entidades HTML
     para os seus caracteres de <parameter>string</parameter>.
    </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       A string de entrada.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>quote_style</parameter></term>
     <listitem>
    <para>
     O segundo parâmetro, que é opcional, <parameter>quote_style</parameter>
     permite você definir o que será feito com 'apostrofos' e "aspas". 
     Ele recebe uma constante entre três, sendo o padrão
     <constant>ENT_COMPAT</constant>:
     <table>
      <title>Constantes disponíveis para <parameter>quote_style</parameter></title>
      <tgroup cols="2">
       <thead>
        <row>
         <entry>Nome da Constante</entry>
         <entry>Descrição</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry><constant>ENT_COMPAT</constant></entry>
         <entry>Irá converter aspas e deixar os apostrofos.</entry>
        </row>
        <row>
         <entry><constant>ENT_QUOTES</constant></entry>
         <entry>Irá converter ambos.</entry>
        </row>
        <row>
         <entry><constant>ENT_NOQUOTES</constant></entry>
         <entry>Irá deixar ambos sem converter.</entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>charset</parameter></term>
     <listitem>
    <para>
     O conjunto de caracteres ISO-8859-1 é usado como padrão para o terceiro parâmetro, que é opcional,
     <parameter>charset</parameter>. Este define o conjunto de caracteres usado na conversão. 
    </para>
      &reference.strings.charsets;
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna a string decodificada.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.0.0</entry>
       <entry>
        Suporte para conjunto de caracteres multi-byte foi adicionado.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
    <para>
     <example>
      <title>Decodificando entidades HTML</title>
      <programlisting role="php">
<![CDATA[
<?php
$orig = "I'll \"walk\" the <b>dog</b> now";

$a = htmlentities($orig);

$b = html_entity_decode($a);

echo $a; // I'll &quot;walk&quot; the &lt;b&gt;dog&lt;/b&gt; now

echo $b; // I'll "walk" the <b>dog</b> now


// For users prior to PHP 4.3.0 you may do this:
function unhtmlentities($string) 
{
    // replace numeric entities
    $string = preg_replace('~&#x([0-9a-f]+);~ei', 'chr(hexdec("\\1"))', $string);
    $string = preg_replace('~&#([0-9]+);~e', 'chr("\\1")', $string);
    // replace literal entities
    $trans_tbl = get_html_translation_table(HTML_ENTITIES);
    $trans_tbl = array_flip($trans_tbl);
    return strtr($string, $trans_tbl);
}

$c = unhtmlentities($a);

echo $c; // I'll "walk" the <b>dog</b> now

?>
]]>
      </programlisting>
     </example>
    </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
     <note>
      <para>Você deve imaginar porque trim(html_entity_decode('&amp;nbsp;')); não reduz a string para uma string
       vazia, isto é porque a entidade '&amp;nbsp;' não é o código ASCII 32 (o qual é retirado por
       <function>trim</function>) mas o caracter ASCII 160 (0xa0) no conjunto de caracteres padrão.
      </para>
     </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
    <para>
   <simplelist>
    <member><function>htmlentities</function></member>
    <member><function>htmlspecialchars</function></member>
    <member><function>get_html_translation_table</function></member>
    <member><function>urldecode</function></member>
   </simplelist>
    </para>
   </refsect1>
   
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.7 Maintainer: fernandoc Status: ready -->
<!-- splitted from ./en/functions/strings.xml, last change in rev 1.2 -->
  <refentry id="function.substr">
   <refnamediv>
    <refname>substr</refname>
    <refpurpose>Retorna uma parte de uma string</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>string</type><methodname>substr</methodname>
      <methodparam><type>string</type><parameter>string</parameter></methodparam>
      <methodparam><type>int</type><parameter>start</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>length</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>substr</function>retorna a parte de <parameter>string</parameter>
     especificada pelo parâmetro <parameter>start</parameter> e
     <parameter>length</parameter>.
    </para>
    <para>
     Se <parameter>start</parameter> não for negativo, a string retornada iniciará
     na posição <parameter>start</parameter> em
     <parameter>string</parameter>, começando em zero. Por exemplo,
     na string '<literal>abcdef</literal>', o caractere na posição
     <literal>0</literal> é '<literal>a</literal>', o
     caractere na posição <literal>2</literal> é
     '<literal>c</literal>', e assim em diante.
    </para>
    <example>
     <title>Uso basico de <function>substr</function></title>
     <programlisting role="php">
<![CDATA[
<?php
$rest = substr("abcdef", 1);    // retorna "bcdef"
$rest = substr("abcdef", 1, 3); // retorna "bcd"
$rest = substr("abcdef", 0, 4); // retorna "abcd"
$rest = substr("abcdef", 0, 8); // retorna "abcdef"

// Outra opção é acessar atravéz de chaves
$string = 'abcdef';
echo $string{0};                // retorna a
echo $string{3};                // retorna d
?>
]]>
     </programlisting>
    </example>
    <para>
     Se <parameter>start</parameter> for negativo, a string retornada
     irá começar no caractere <parameter>start</parameter>
     a partir do fim de <parameter>string</parameter>.</para>
    <example>
     <title>Usando um inicio negativo</title>
     <programlisting role="php">
<![CDATA[
<?php
$rest = substr("abcdef", -1);    // retorna "f"
$rest = substr("abcdef", -2);    // retorna "ef"
$rest = substr("abcdef", -3, 1); // retorna "d"
?>
]]>
     </programlisting>
    </example>
    <para>
     Se <parameter>length</parameter> for dado e for positivo,
     a string retornada irá conter <parameter>length</parameter> caracteres
     começando em <parameter>start</parameter> (dependendo do tamanho de
     <parameter>string</parameter>). Se a <parameter>string</parameter> é menor do
     que <parameter>start</parameter>, será retornado &false;.
    </para>
    <para>
     Se <parameter>length</parameter> for dado e for negativo, então esta quantidade
     caracteres serão omitidos do final de <parameter>string</parameter>
     (após a posicão de inicio ter sido calculada quando
     <parameter>start</parameter> for negativo). Se
     <parameter>start</parameter> denota uma posição além da truncagem,
     uma string vazia será retornada.
    </para>
    <example>
     <title>Usando um <parameter>length</parameter> negativo</title>
     <programlisting role="php">
<![CDATA[
<?php
$rest = substr("abcdef", 0, -1);  // retorna "abcde"
$rest = substr("abcdef", 2, -1);  // retorna "cde"
$rest = substr("abcdef", 4, -4);  // retorna ""
$rest = substr("abcdef", -3, -1); // retorna "de"
?>
]]>
     </programlisting>
    </example>
    <para>
     Veja também <function>strrchr</function>,
     <function>substr_replace</function>,
     <function>ereg</function> e
     <function>trim</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

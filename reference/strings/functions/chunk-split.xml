<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 $ -->
<!-- splitted from ./en/functions/strings.xml, last change in rev 1.2 -->
  <refentry id="function.chunk-split">
   <refnamediv>
    <refname>chunk_split</refname>
    <refpurpose>Divide uma string em pequenos pedaços</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>string</type><methodname>chunk_split</methodname>
      <methodparam><type>string</type><parameter>body</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>chunklen</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>end</parameter></methodparam>
     </methodsynopsis>
    <para>
     Pode dividir uma string em pequenos pedaços que são úteis para
     e.g. converter <link
     linkend="function.base64-encode">base64_encode</link> output para compatibilizar
     com semânticas RFC 2045 . Ela insere <parameter>end</parameter> (padrão para
     "\r\n") cada caracater <parameter>chunklen</parameter> (padrão para
     76). Ela retorna uma nova string deixando a string original intocada.
     <example>
      <title><function>chunk_split</function> exemplo</title>
      <programlisting role="php">
<![CDATA[
# format $data using RFC 2045 semantics

$new_string = chunk_split(base64_encode($data));
]]>
      </programlisting>
     </example>
    </para>
    <simpara>
     Veja também <function>explode</function>, <function>split</function> 
     <function>wordwrap</function> e
     <ulink url="&url.rfc;rfc2045.html">RFC 2045</ulink>.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

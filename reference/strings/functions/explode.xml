<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.4 Maintainer: fernandoc Status: ready -->
<!-- CREDITS: surfmax -->
<!-- splitted from ./en/functions/strings.xml, last change in rev 1.2 -->
  <refentry id="function.explode">
   <refnamediv>
    <refname>explode</refname>
    <refpurpose>Divide uma string em strings</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>array</type><methodname>explode</methodname>
      <methodparam><type>string</type><parameter>separator</parameter></methodparam>
      <methodparam><type>string</type><parameter>string</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>limit</parameter></methodparam>
     </methodsynopsis>
    <para>
     Retorna uma matriz de strings, cada uma como substring de
     <parameter>string</parameter> formada pela divisão dela
     a partir de fronteiras presentes nela <parameter>separator</parameter>.
     Se <parameter>limit</parameter> está definido, a matriz retornada
     conterá o máximo de  <parameter>limit</parameter> elementos com
     o último elemento contendo o resto da
     <parameter>string</parameter>.
    </para>
    <para>
     Se <parameter>separator</parameter> está como uma string vazia (""),
     <function>explode</function> retornará &false;.  Se
     <parameter>separator</parameter> contém um valor que não está contido 
     em <parameter>string</parameter>, então <function>explode</function> retornará uma 
     matriz contendo a <parameter>string</parameter>.
    </para>
    <note>
     <para>
      O parâmetro <parameter>limit</parameter> foi adicionado no PHP
      4.0.1 
     </para>
    </note>
    <para>
     <example>
      <title><function>explode</function> exemplos</title>
      <programlisting role="php">
<![CDATA[
<?php  
// Example 1
$pizza  = "piece1 piece2 piece3 piece4 piece5 piece6";
$pieces = explode(" ", $pizza);
print $pieces[0]; // piece1
print $pieces[1]; // piece2

// Example 2
$data = "foo:*:1023:1000::/home/foo:/bin/sh";
list($user,$pass,$uid,$gid,$gecos,$home,$shell) = explode(":",$data);
print $user; // foo
print $pass; // *
?>

]]>
      </programlisting>
     </example>
    </para>
    <note>
     <para>
      Ainda que <function>implode</function> pode por razões históricas
      aceitar seus parâmetros em uma das duas ordens,
      <function>explode</function> não pode. Você deve assegurar que
      o argumento <parameter>separator</parameter> vem antes do argumento
      <parameter>string</parameter>.
     </para>
    </note>
    <para>
     Veja também 
     <function>preg_split</function>,
     <function>spliti</function>,
     <function>split</function>, e
     <function>implode</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

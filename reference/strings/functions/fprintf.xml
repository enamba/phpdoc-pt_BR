<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.2 Maintainer: fernandoc Status: ready -->
  <refentry id="function.fprintf">
   <refnamediv>
    <refname>fprintf</refname>
    <refpurpose>Escreve uma string formatada para um stream</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>int</type><methodname>fprintf</methodname>
      <methodparam><type>resource</type><parameter>handle</parameter></methodparam>
      <methodparam><type>string</type><parameter>format</parameter></methodparam>
      <methodparam choice="opt"><type>mixed</type><parameter>args</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     Escreve uma string produzida de acordo com a string de formato
     <parameter>format</parameter> para o recurso de stream especificado
     por <parameter>handle</parameter>..
    </simpara>
    <simpara>
     A string de formato é composta por zero ou mais diretivas:
     caracteres ordinários(excluindo <literal>%</literal>) que são copiados 
     diretamente para o resultado ,e <emphasis>especificações de
     conversão</emphasis>, cada qual dos resultados obtidos do seu próprio parâmetro.
     Isto se aplica para <function>fprintf</function>,
     <function>sprintf</function>, e <function>printf</function>.
    </simpara>
    <para>
     Cada especificação de conversão consite de um sinal de porcentagem
     (<literal>%</literal>), seguido por um ou mais destes elementos, em ordem:
     <orderedlist>
      <listitem>
       <simpara>
        Um <emphasis>especificador de prenchimento</emphasis> opcional que diz
        qual caractere será usado para prencher os resultados
        para o tamanho certo da string. Este pode ser um caracteres de espaço ou um
        <literal>0</literal> (zero). O padrão é prencher com espaços. 
        Um caractere de prenchimento alternativo pode ser especificado
        colocando-se antes um aspa simples (<literal>'</literal>).
        Veja os exemplos abaixo.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Um <emphasis>especificador de alinhamento</emphasis> opcional que diz
        se o resultado deve ser alinhado a esquerda ou a direita.
        O padrão é alinhado a direita; um caractere <literal>-</literal>
        aqui fará ser alinhado a esquerda.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Um número opcional, um <emphasis>especificador de largura</emphasis>
        que diz quantos caracteres (mínimo) deve resultar desta conversão.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Um <emphasis>especificador de precisão</emphasis> que diz
        quantos digitos decimais serão mostrados para números de ponto flutuante. 
        Esta opção não tem efeito para outros tipos senão
        <type>float</type>. (Outra função util para formatar números é
        <function>number_format</function>.)
       </simpara>
      </listitem>
      <listitem>
       <para>
        Um <emphasis>especificador de tipo</emphasis> que diz de qual tipo o argumento será tratado como. 
        Tipos possiveis são:
        <simplelist>
         <member>
          <literal>%</literal> - um caractere de porcentagem.
          Não é necessário nenhum argumento.
         </member>
         <member>
          <literal>b</literal> - o argumento é tratado como um inteiro
          e mostrado como um número binário.
         </member>
         <member>
          <literal>c</literal> - o argumento é tratado como um inteiro e
          mostrado o caractere ASCII.
          value.
         </member>
         <member>
          <literal>d</literal> - o argumento é tratado como um inteiro e
          mostrado como um número decimal com sinal.
         </member>
         <member>
          <literal>u</literal> - o argumento é tratado como um inteiro e
          mostrado como um número decimal sem sinal.
         </member>
         <member>
          <literal>f</literal> - o argumento é tratado com um
          <type>float</type> e mostrado como um número de ponto flutuante.
         </member>
         <member>
          <literal>o</literal> - o argumento é tratado como um inteiro e
          mostrado como um número octal.
         </member>
         <member>
          <literal>s</literal> - O argumento é tratado e mostrado como
          uma string.
         </member>
         <member>
          <literal>x</literal> - o argumento é tratado como um inteiro e
          mostrado como um número hexadecimal (com
          letras minúsculas).
         </member>
         <member>
          <literal>X</literal> - o argumento é tratado como um inteiro e
          mostrado como um número hexadecimal (com
          letras maiúsculas).
         </member>
        </simplelist>
       </para>
      </listitem>
     </orderedlist>
    </para>
    <simpara>
     Veja também: <function>printf</function>,
     <function>sprintf</function>,
     <function>sscanf</function>, <function>fscanf</function>,
     <function>vsprintf</function>, e
     <function>number_format</function>.
    </simpara>
   </refsect1>
   <refsect1>
    <title>Examplos</title>
    <para>
     <example>
      <title><function>sprintf</function>: inteiros prenchidos com zero</title>
      <programlisting role="php">
<![CDATA[
<?php
$isodate = sprintf("%04d-%02d-%02d", $year, $month, $day);
?>
]]>
      </programlisting>
     </example>
     <example>
      <title><function>sprintf</function>: formatando valores</title>
      <programlisting role="php">
<![CDATA[
<?php
$money1 = 68.75;
$money2 = 54.35;
$money = $money1 + $money2;
// echo $money irá mostrar "123.1";
$formatted = sprintf("%01.2f", $money);
// echo $formatted irá mostar "123.10"
?>
]]>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

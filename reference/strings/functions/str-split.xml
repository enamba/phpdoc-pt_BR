<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.1 Maintainer: surfmax Status: ready -->
  <refentry id="function.str-split">
   <refnamediv>
    <refname>str_split</refname>
    <refpurpose>
     Converte uma string para um array
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
    <methodsynopsis>
     <type>array</type><methodname>str_split</methodname>
     <methodparam><type>string</type><parameter>string</parameter></methodparam>
     <methodparam choice="opt"><type>int</type><parameter>split_length</parameter></methodparam>
    </methodsynopsis>
    <para>
     Converte uma string em um array. Se o parâmetro opcional
     <parameter>split_length</parameter> for especificado, o array
     retornado será quebrado em pedaços com cada um estando com 
     <parameter>split_length</parameter> de comprimento, caso contrário cada pedaço
     terá um caractere de comprimento.
    </para>
    <para>
     &false; é retornado se  <parameter>split_length</parameter> é menor do que 1.
     Se o comprimento <parameter>split_length</parameter> escede o comprimento da
      <parameter>string</parameter>, a string inteira é retornada como o primeiro(e único)
       elemento do array.
    </para>
    <para>
     <example>
      <title>Exemplo utilizando <function>str_split</function></title>
      <programlisting role="php">
<![CDATA[
<?php

$str = "Hello Friend";

$arr1 = str_split($str);
$arr2 = str_split($str, 3);

print_r($arr1);
print_r($arr2);

/* A saída será como:

Array
(
    [0] => H
    [1] => e
    [2] => l
    [3] => l
    [4] => o
    [5] =>
    [6] => F
    [7] => r
    [8] => i
    [9] => e
    [10] => n
    [11] => d
)

Array
(
    [0] => Hel
    [1] => lo 
    [2] => Fri
    [3] => end
)
*/
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title>Exemplos relacionados a <function>str_split</function></title>
      <programlisting role="php">
<![CDATA[
<?php

$str = "Hello Friend";

print $str{0};  // H
print $str{8};  // i

// Cria: array('H','e','l','l','o',' ','F','r','i','e','n','d')
$arr1 = preg_split('//', $str, -1, PREG_SPLIT_NO_EMPTY);

?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Veja também <function>preg_split</function>,
     <function>split</function>,
     <function>count_chars</function>,
     <function>str_word_count</function>, e 
     <link linkend="control-structures.for">for</link>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.3 Maintainer: fernandoc Status: ready -->
  <refentry xml:id="function.stripos" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>stripos</refname>
    <refpurpose>
     Encontra a primeira ocorrencia de uma string sem diferenciar maiúsculas e minúsculas
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>int</type><methodname>stripos</methodname>
      <methodparam><type>string</type><parameter>haystack</parameter></methodparam>
      <methodparam><type>string</type><parameter>needle</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>offset</parameter></methodparam>
     </methodsynopsis>
    <para>
     Retorna a posição numerica da primeira ocorrencia de
     <parameter>needle</parameter> na string <parameter>haystack</parameter>.
     Diferentemente de <function> strpos</function>,
     <function>stripos</function> não diferencia maiúsculas e minúsculas.
    </para>
    <para>
     Note que o parâmetro <parameter>needle</parameter> deve ser uma string de um
     ou mais caracteres.
    </para> 
    <para>
     Se <parameter>needle</parameter> não for encontrada,
     <function>stripos</function> irá retornar <type>boolean</type> &false;.
    </para>

    &return.falseproblem;

    <para>
     <example>
     <title>Exemplos <function>stripos</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$findme    = 'a';
$mystring1 = 'xyz';
$mystring2 = 'ABC';

$pos1 = stripos($mystring1, $findme);
$pos2 = stripos($mystring2, $findme);

// 'a' certamente não esta em 'xyz'
if ($pos1 === false) {
    echo "A string '$findme' não foi encontrada na string '$mystring1'";
}

// Note o nosso uso de  ===. Simples == não funcionaria como o esperado
// porque a posição de 'a' é 0 (primeiro) caractere.
if ($pos2 !== false) {
    echo "Nós encontramos '$findme' em '$mystring2' na posição $pos2";
}
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Se <parameter>needle</parameter> não é uma string, é convertida
     para um inteiro e aplicado o valor do caractere.
    </para>
    <para>
     O parâmetro opcional <parameter>offset</parameter> permite a você
     especificar apartir de qual caractere em  <parameter>haystack</parameter> 
     a procura começa. A posição retornada ainda é relativa ao
     inicio de <parameter>haystack</parameter>.
    </para>
    <para>
     Veja também <function>strpos</function>, <function>strrpos</function>,
     <function>strrchr</function>, <function>substr</function>,
     <function>stristr</function>, <function>strripos</function>,
     <function>strstr</function> e <function>stri_replace</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

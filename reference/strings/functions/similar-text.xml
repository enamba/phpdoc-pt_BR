<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.2 Maintainer: fernandoc Status: ready -->
<!-- splitted from ./en/functions/strings.xml, last change in rev 1.2 -->
  <refentry xml:id="function.similar-text" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>similar_text</refname>
    <refpurpose>
     Calcula a similaridade entre duas strings
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>int</type><methodname>similar_text</methodname>
      <methodparam><type>string</type><parameter>first</parameter></methodparam>
      <methodparam><type>string</type><parameter>second</parameter></methodparam>
      <methodparam choice="opt"><type>float</type><parameter>percent</parameter></methodparam>
     </methodsynopsis>
    <para>
     Calcula a similaridade entre duas strings como descrito
     em Oliver [1993]. Note que esta implementação não usa um
     stack como no pseudo-código de Oliver, mas chamadas recursivas as quais podem
     ou não tornar todo o processo mais rapido. Note também que a complexidade deste
     algotimo é O(N**3) aonde N é o tamanho da maior string.
    </para>
    <para>
     Passando por referencia o terceiro argumento,
     <function>similar_text</function> irá calcular a similaridare em porcentagem
     para você. Retorna o número de caracteres igual em ambas strings.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

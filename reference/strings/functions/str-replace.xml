<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.12 Maintainer: surfmax Status: ready -->
<!-- splitted from ./en/functions/strings.xml, last change in rev 1.2 -->
  <refentry xml:id="function.str-replace" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>str_replace</refname>
    <refpurpose>
     Substitui todas as ocorrências da string de procura com a string de substituição
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>mixed</type><methodname>str_replace</methodname>
      <methodparam><type>mixed</type><parameter>pesquisa</parameter></methodparam>
      <methodparam><type>mixed</type><parameter>substitui</parameter></methodparam>
      <methodparam><type>mixed</type><parameter>assunto</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>&amp;count</parameter></methodparam>
     </methodsynopsis>
    <para>
     Esta função retorna uma string ou um array com todas as ocorrências de
     <parameter>pesquisa</parameter> em <parameter>assunto</parameter>
     substituidas com a o valor dado para <parameter>substitui</parameter>.  Se
     você não precisa de regras de substituição especiais, você sempre poderia usar
      esta função  ao invés de  <function>ereg_replace</function> ou
     <function>preg_replace</function>.
    </para>
    <para>
     Como do PHP 4.0.5, cada parâmetro em <function>str_replace</function>
     pode ser um <type>array</type>. 
    </para>
    <warning>
     <simpara>
      Em versões do PHP anteriores à 4.3.3 existia  um bug ao se usar arrays em ambos
       os parâmetros <parameter>pesquisa</parameter> e <parameter>substitui</parameter>
      que causava índices de <parameter>pesquisa</parameter> vazios para serem pulados
      sem avançar o apontador interno no array <parameter>substitui</parameter>. 
      Isto foi corrigido no <literal>PHP 4.3.3</literal>, quaisquer scripts que
      contavam com este bug removeriam valores de pesquisa vazios anteriores à chamada
      desta função afim de imitar o comportamento original.
     </simpara>
    </warning>
    <para>
     Se <parameter>assunto</parameter> é um array, então a pesquisa
     e a substituição é executada com cada entrada do <parameter>assunto</parameter>,
     e o valor de retorno é um array também.
    </para>
    <para>
     Se <parameter>pesquisa</parameter> e
     <parameter>substitui</parameter> são arrays, então
     <function>str_replace</function> pega o valor de cada array
     e os usa para fazer a pesquisa e a substituição em <parameter>subject</parameter>. Se
     <parameter>substitui</parameter> tem menos valores do que
     <parameter>pesquisa</parameter>, então um string vazia é usada para o restante dos 
     valores de substituição. Se <parameter>pesquisa</parameter>
    é um array e <parameter>substitui</parameter> é uma string; então
     esta string de substituição é usada para cada valor de
     <parameter>pesquisa</parameter>.
    </para>
    <para>
     <example>
      <title><function>str_replace</function> exemplos</title>
      <programlisting role="php">
<![CDATA[
<?php
// Fornece: <body text='black'>
$bodytag = str_replace("%body%", "black", "<body text='%body%'>");

// Fornece: Hll Wrld f PHP
$vowels = array("a", "e", "i", "o", "u", "A", "E", "I", "O", "U");
$onlyconsonants = str_replace($vowels, "", "Hello World of PHP");

// Fornece: você comeria pizza, cerveja e sorvete todos os dias
$frase  = "você comeria frutas, vegetais, e fibra todos os dias.";
$saudavel = array("frutas", "vegetais", "fibra");
$saboroso   = array("pizza", "cerveja", "sorvete");

$novafrase = str_replace($saudavel, $saboroso, $frase);

// Uso do parâmetro count está disponível no PHP 5.0.0
$str = str_replace("ll", "", "good golly miss molly!", $count);
echo $count; // 2
?>
]]>
      </programlisting>
     </example>
    </para>
    
    &note.bin-safe;
    
    <note>
     <simpara>
      No  <literal>PHP 5.0.0</literal> o número "neddles" (<parameter>search</parameter>) 
      combinadas e substituidas será retornado em <parameter>count</parameter> que é passado
      por referência.
      Antes do <literal>PHP 5.0.0</literal> este parâmetro não estava disponível.
     </simpara>
    </note>
    <para>
     Veja também 
     <function>str_ireplace</function>,
     <function>substr_replace</function>,
     <function>ereg_replace</function>,
     <function>preg_replace</function>, e 
     <function>strtr</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

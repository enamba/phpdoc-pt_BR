<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.27 Maintainer: felipe Status: ready --><!-- CREDITS: surfmax -->
<refentry xml:id="function.str-replace" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>str_replace</refname>
  <refpurpose>Substitui todas as ocorrências da string de procura com a string de substituição</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>str_replace</methodname>
   <methodparam><type>mixed</type><parameter>search</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>replace</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>subject</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">count</parameter></methodparam>
  </methodsynopsis>
  <para>
   Esta função retorna uma string ou um array com todas as ocorrências de
   <parameter>search</parameter> em <parameter>subject</parameter>
   substituidas com a o valor dado para <parameter>replace</parameter>.
  </para>
  <para>
   Se você não precisa de regras de substituição especiais, você sempre poderia usar
   esta função  ao invés de  <function>ereg_replace</function> ou
   <function>preg_replace</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   Se <parameter>search</parameter> e <parameter>replace</parameter> são arrays, então
   <function>str_replace</function> pega o valor de cada array
   e os usa para fazer a pesquisa e a substituição em <parameter>subject</parameter>. Se
   <parameter>subject</parameter> tem menos valores do que
   <parameter>search</parameter>, então um string vazia é usada para o restante dos 
   valores de substituição. Se <parameter>search</parameter>
   é um array e <parameter>replace</parameter> é uma string; então
   esta string de substituição é usada para cada valor de
   <parameter>search</parameter>.
  </para>
  <para>
   Se <parameter>search</parameter> ou <parameter>replace</parameter>
   são arrays, seus elementos são processados do primeiro ao último.
  </para>
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>search</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>replace</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>subject</parameter></term>
     <listitem>
      <para>
       Se <parameter>subject</parameter> é um array, então a pesquisa
       e a substituição é executada com cada entrada do <parameter>subject</parameter>,
       e o valor de retorno é um array também.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>count</parameter></term>
     <listitem>
      <note>
       <simpara>
        Se passado, guardará o número de combinações e modificações feitas.
       </simpara>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Esta função retorna uma string ou um array com os valores modificados.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.0.0</entry>
       <entry>
        O parâmetro <parameter>count</parameter> foi adicionado.
       </entry>
      </row>
      <row>
       <entry>4.3.3</entry>
       <entry>       
        O comportamento desta função foi modificado. Em antigas versões um bug 
        existia ao se usar arrays em ambos os parâmetros <parameter>search</parameter> 
        e <parameter>replace</parameter> que causava índices de 
        <parameter>search</parameter> vazios para serem pulados sem avançar o
        apontador interno no array <parameter>replace</parameter>. 
        Isto foi corrigido no PHP 4.3.3, quaisquer scripts que contavam com este
        bug removeriam valores de pesquisa vazios anteriores à chamada desta função
        afim de imitar o comportamento original.
       </entry>
      </row>
      <row>
       <entry>4.0.5</entry>
       <entry>
        Mais parâmetros podem agora ser um <type>array</type>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplos da <function>str_replace</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Fornece: <body text='black'>
$bodytag = str_replace("%body%", "black", "<body text='%body%'>");

// Fornece: Hll Wrld f PHP
$vowels = array("a", "e", "i", "o", "u", "A", "E", "I", "O", "U");
$onlyconsonants = str_replace($vowels, "", "Hello World of PHP");

// Fornece: você comeria pizza, cerveja e sorvete todos os dias
$frase  = "você comeria frutas, vegetais, e fibra todos os dias.";
$saudavel = array("frutas", "vegetais", "fibra");
$saboroso   = array("pizza", "cerveja", "sorvete");

$novafrase = str_replace($saudavel, $saboroso, $frase);

// Uso do parâmetro count está disponível no PHP 5.0.0
$str = str_replace("ll", "", "good golly miss molly!", $count);
echo $count; // 2

// Order of replacement
$str     = "Line 1\nLine 2\rLine 3\r\nLine 4\n";
$order   = array("\r\n", "\n", "\r");
$replace = '<br />';
// Processes \r\n's first so they aren't converted twice.
$newstr = str_replace($order, $replace, $str);

// Outputs: apearpearle pear
$letters = array('a', 'p');
$fruit   = array('apple', 'pear');
$text    = 'a p';
$output  = str_replace($letters, $fruit, $text);
echo $output;
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
   
 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
  <note>
   <para>
    Esta função é case-sensitive. Use <function>str_ireplace</function>
    para substituição case-insensitive.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>str_ireplace</function></member>
    <member><function>substr_replace</function></member>
    <member><function>preg_replace</function></member>
    <member><function>strtr</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

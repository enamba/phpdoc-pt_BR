<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.5 Maintainer: fernandoc Status: ready -->
<!-- splitted from ./en/functions/sybase.xml, last change in rev 1.2 -->
  <refentry id="function.sybase-fetch-object">
   <refnamediv>
    <refname>sybase_fetch_object</refname>
    <refpurpose>Obtém uma linha como um objeto</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>object</type><methodname>sybase_fetch_object</methodname>
      <methodparam><type>resource</type><parameter>result</parameter></methodparam>
      <methodparam choice="opt"><type>mixed</type><parameter>object</parameter></methodparam>
     </methodsynopsis>
    <para>
     Retorna um objeto com propriedades que correspondem a linha
     obtida, ou &false; se não houverem mais linhas. 
    </para>
    <para> 
     <function>sybase_fetch_object</function> é similar a 
     <function>sybase_fetch_assoc</function>, com uma diferença - um objeto
     é retornado, ao invés de uma matriz.
    </para>  
    <para>
     Use o segundo parâmetro <parameter>object</parameter> para especificar o tipo de
     objeto que você quer. Se o parâmetro for omitido, o objeto será do tipo
     stdClass.
    </para>
    <note>
     <para>
      Apartir do PHP 4.3.0, esta função não retorna mais os membros numéricos.
     </para>
     <para>
      Funcionamento antigo:
      <screen>
<![CDATA[
object(stdclass)(3) {
  [0]=>
  string(3) "foo"
  ["foo"]=>
  string(3) "foo"
  [1]=>
  string(3) "bar"
  ["bar"]=>
  string(3) "bar"
}
]]>
      </screen>
      Funcionamento novo:
      <screen>
<![CDATA[
object(stdclass)(3) {
  ["foo"]=>
  string(3) "foo"
  ["bar"]=>
  string(3) "bar"
}
]]>
      </screen>
     </para>
    </note>
    <para>
     <example>
      <title><function>sybase_fetch_object</function> retornado como Foo</title>
      <programlisting role="php">
<![CDATA[
<?php
    class Foo {
        var $foo, $bar, $baz;
    }
    
    // {...]
    $qrh= sybase_query('SELECT foo, bar, baz FROM example');
    $foo= sybase_fetch_object($qrh, 'Foo');
    $bar= sybase_fetch_object($qrh, new Foo());
    // {...]
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Em termos de velocidade a função é identica a 
     <function>sybase_fetch_array</function>, e quase tão rápida quanto
     <function>sybase_fetch_row</function> (a diferença é insignificante).
    </para>
    <para> 
     Veja também 
     <function>sybase_fetch_array</function> e
     <function>sybase_fetch_row</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

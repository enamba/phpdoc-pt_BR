<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.14 Maintainer: rarruda Status: ready -->
<!-- State: deprecated -->
 <reference xml:id="ref.overload" xmlns="http://docbook.org/ns/docbook">
  <title>Sobrecarga de propriedades e métodos de objetos</title>
  <titleabbrev>Objetos/Sobrecarga</titleabbrev>

  <partintro>

   <section xml:id="overload.intro">
    &reftitle.intro;
    <para>
     O propósito desta extensão é permitir a sobrecarga de propriedades
     de acesso e métodos de objetos. Somente uma função é definida
     nesta extensão, <function>overload</function> que
     recebe o nome da classe que deve ter esta funcionalidade
     habilitada. A classe especificada tem que definir os métodos para
     ter esta funcionalidade: <literal>__get()</literal>,
     <literal>__set()</literal> e <literal>__call()</literal>
     respectivamente para leitura/escrita das propriedades, ou chamar um método.
     Desta forma a sobrecarga pode ser seletiva: Dentro destas funções
     a sobrecarga é desabilitada de forma que você possa acessar
     propriedades do objeto normalmente.
    </para>
    &warn.experimental;
    <warning>
     <para>
      Esta extensão não é parte do PHP 5. PHP 5 suporta <literal>__get()</literal>,
      <literal>__set()</literal> e <literal>__call()</literal> nativamente.
      Veja a página <link linkend="language.oop5.overloading">Sobrecarga no PHP 5</link> 
      para mais informação.
     </para>
    </warning>
   </section>

   <section xml:id="overload.requirements">
    &reftitle.required;
    &no.requirement;
   </section>

   &reference.overload.configure;

   <section xml:id="overload.configuration">
    &reftitle.runtime;
    &no.config;
   </section>

   <section xml:id="overload.resources">
    &reftitle.resources;
    &no.resource;
   </section>

   <section xml:id="overload.constants">
    &reftitle.constants;
    &no.constants;
   </section>

   <section xml:id="overload.examples">
    &reftitle.examples;
    <para>
     Alguns exemplos simples da utilização da função
     <function>overload</function>:
     <example>
      <title>Sobrecarga de uma classe no PHP</title>
      <programlisting role="php">
<![CDATA[
<?php

class OO {
    var $a = 111;
    var $elem = array('b' => 9, 'c' => 42);

    // Método callback para pegar uma propriedade
    function __get($prop_name, &$prop_value)
    {
        if (isset($this->elem[$prop_name])) {
            $prop_value = $this->elem[$prop_name];
            return true;
        } else {
            return false;
        }
    }

    // Método callback para definir uma propriedade
    function __set($prop_name, $prop_value)
    {
        $this->elem[$prop_name] = $prop_value;
        return true;
    }
}

// Aqui nós sobrecarregamos o objeto OO
overload('OO');

$o = new OO;
echo "\$o->a: $o->a\n"; // print: $o->a: 111
echo "\$o->b: $o->b\n"; // print: $o->b: 9
echo "\$o->c: $o->c\n"; // print: $o->c: 42
echo "\$o->d: $o->d\n"; // print: $o->d:

// adicionar um novo intem para o array $elem em OO
$o->x = 56;

// iniciar stdclass (é integrada no PHP 4)
// $var não é sobrecarregada!
$val = new stdclass;
$val->prop = 555;

// Que "a" seja um array com o objeto $val dentro dele
// mas __set() o colocará no array $elem
$o->a = array($val);
var_dump($o->a[0]->prop);

?>
]]>
      </programlisting>
     </example>
    </para>
   </section>
  </partintro>

&reference.overload.entities.functions;

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

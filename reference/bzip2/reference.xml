<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.3 Maintainer: lucasr Status: ready -->
 <reference id="ref.bzip2">
  <title>Funções de compactação com Bzip2</title>
  <titleabbrev>Bzip2</titleabbrev>

  <partintro>
   <section id="bzip2.intro">
    &reftitle.intro;
    <para>
     As funções para bzip2 são usadas para ler e escrever, de forma
     transparente, arquivos compactados do tipo bzip2 (.bz2).
    </para>
   </section>
   
   <section id="bzip2.requirements">
    &reftitle.required;
    <para>
     Este módulo utiliza as funções da biblioteca <ulink
     url="&url.bzip2;">bzip2</ulink> desenvolvida por Julian Seward 
    </para>
   </section>

   <section id="bzip2.installation">
    &reftitle.install;
    <para>
     O suporte às funções para Bzip2 no PHP nãao é habilitado por padrão.
     Você precisa usar a opção de configuração <link linkend="install.configure.with-bz2">--with-bz2</link>
     quando for compilar o PHP para habilitar o suporte a bzip2. Este módulo
     requer bzip2/libbzip2, versão &gt;= 1.0.x.
    </para>
   </section>

   <section id="bzip2.configuration">
    &reftitle.runtime;
    &no.config;
   </section>

   <section id="bzip2.resources">
    &reftitle.resources;
    <para>
     Esta extensão define um tipo de recurso (resource): um ponteiro para
     arquivo que identifica o arquivo bzip2 que está sendo usado.
    </para>
   </section>

   <section id="bzip2.constants">
    &reftitle.constants;
    &no.constants;
   </section>

   <section id="bzip2.examples">
    &reftitle.examples;
    <para>
     Este exemplo abre um arquivo temporário e escreve uma string de test
     nele, e então mostra o conteúdo do arquivo.
    </para>
    <example>
     <title>Um exemplo simples de  bzip2</title>
     <programlisting role="php">
<![CDATA[
<?php

$arquivo = "/tmp/testfile.bz2";
$str = "This is a test string.\n";

// abre o arquivo para escrita
$bz = bzopen($arquivo, "w");

// escreve a string no arquivo
bzwrite($bz, $str);

// fecha o arquivo
bzclose($bz);

// abre o arquivo para leitura
$bz = bzopen($arquivo, "r");

// lê 10 caracteres
print bzread($bz, 10);

// imprime até o final do arquivo (ou os próximos 1024 caracteres)  
print bzread($bz);

// fecha o arquivo
bzclose($bz);

?>
]]>
     </programlisting>
    </example>
   </section>
  </partintro>

&reference.bzip2.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->


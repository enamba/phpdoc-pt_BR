<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.22 Maintainer: narigone Status: ready -->
<!-- Purpose: basic.other -->
<!-- Membership: core -->

 <reference xml:id="ref.tokenizer" xmlns="http://docbook.org/ns/docbook">
  <title>Funções de Tokenizer</title>
  <titleabbrev>Tokenizer</titleabbrev>

  <partintro>
   <section xml:id="tokenizer.intro">
    &reftitle.intro;
    <para>
     As funções de tokenizer formam uma interface para o
     tokenizer do PHP imbutido no Engine Zend. Usando essas
     funções você pode escrever ferramentas próprias para
     análise e modificação de código PHP sem ter que lidar com a
     especificação da linguagem em um nível léxico.
    </para>
    <para>
     Veja também o <link linkend="tokens">apêndice sobre tokens</link>.
    </para>
   </section>

   <section xml:id="tokenizer.requirements">
    &reftitle.required;
    &no.requirement;
   </section>

   &reference.tokenizer.configure;

   &reference.tokenizer.constants;

   <section xml:id="tokenizer.examples">
    &reftitle.examples;
    <para>
     Aqui está um exemplo simples de scripts PHP usando o tokenizer que
     lerá um arquivo PHP, retirará todos os comentários do fonte e
     imprimirá apenas o código puro.
    </para>
    <example>
     <title>Retira os comentários com o tokenizer</title>
     <programlisting role="php">
<![CDATA[
<?php
/*
 * T_ML_COMMENT não existe no PHP 5.
 * As três linhas seguintes definem ela para
 * preservar compatibilidade com versões anteriores.
 *
 * As duas linhas seguintes definem T_DOC_COMMENT que existe apenas no PHP 5,
 * que nós chamaremos como T_ML_COMMENT para o PHP 4.
 */
if (!defined('T_ML_COMMENT')) {
    define('T_ML_COMMENT', T_COMMENT);
} else {
    define('T_DOC_COMMENT', T_ML_COMMENT);
}

$source = file_get_contents('example.php');
$tokens = token_get_all($source);

foreach ($tokens as $token) {
    if (is_string($token)) {
        // token simples de 1 caracter
        echo $token;
    } else {
        // array de tokens
        list($id, $text) = $token;

        switch ($id) {
            case T_COMMENT:
            case T_ML_COMMENT: // Nós definimos essa
            case T_DOC_COMMENT: // e essa
                // não faz nada com os comentários
                break;

            default:
                // Qualquer outra coisa, imprime como é
                echo $text;
                break;
        }
    }
}
?>
]]>
     </programlisting>
    </example>
   </section>


  </partintro>

&reference.tokenizer.entities.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->


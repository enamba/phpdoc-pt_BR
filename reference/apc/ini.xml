<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.5 Maintainer: narigone Status: ready -->
<section id="apc.configuration">
 &reftitle.runtime;
 &extension.runtime;
 <para>
  Embora as configurações padrões do APC são suficientes para muitas instalações,
  usuários sérios devem considerar alterar os seguintes parâmetros.
 </para>
 <para>
  <table>
   <title>Opções de Configuração de APC</title>
   <tgroup cols="4">
    <thead>
     <row>
      <entry>Nome</entry>
      <entry>Valor Padrão</entry>
      <entry>Alterável</entry>
      <entry>Changelog</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>apc.enabled</entry>
      <entry>"1"</entry>
      <entry>PHP_INI_ALL</entry>
      <entry></entry>
     </row>
     <row>
      <entry>apc.shm_segments</entry>
      <entry>"1"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry></entry>
     </row>
     <row>
      <entry>apc.shm_size</entry>
      <entry>"30"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry></entry>
     </row>
     <row>
      <entry>apc.optimization</entry>
      <entry>"0"</entry>
      <entry>PHP_INI_ALL</entry>
      <entry></entry>
     </row>
     <row>
      <entry>apc.num_files_hint</entry>
      <entry>"1000"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry></entry>
     </row>
     <row>
      <entry>apc.ttl</entry>
      <entry>"0"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry></entry>
     </row>
     <row>
      <entry>apc.gc_ttl</entry>
      <entry>"3600"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry></entry>
     </row>
     <row>
      <entry>apc.cache_by_default</entry>
      <entry>"1"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry></entry>
     </row>
     <row>
      <entry>apc.filters</entry>
      <entry>NULL</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry></entry>
     </row>
     <row>
      <entry>apc.mmap_file_mask</entry>
      <entry>NULL</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry></entry>
     </row>
     <row>
      <entry>apc.slam_defense</entry>
      <entry>"0"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry></entry>
     </row>
     <row>
      <entry>apc.file_update_protection</entry>
      <entry>"2"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry></entry>
     </row>
     <row>
      <entry>apc.enable_cli</entry>
      <entry>"0"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>&gt; APC 3.0.6</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
  &ini.php.constants;
 </para>

 &ini.descriptions.title;

 <para>
  <variablelist>
   <varlistentry id="ini.apc.enabled">
    <term>
     <parameter>apc.enabled</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      <literal>apc.enabled</literal> pode ser configurado para 0 para desabilitar APC.
      Isso é primeiramente útil quando APC for compilado estaticamente no
      PHP, já que não existe outra maneira de desabilitá-lo
      (quando compilado como um DSO, a linha <literal>extension</literal>
      do arquivo <literal>php.ini</literal> pode ser comentada).
     </para>
    </listitem>
   </varlistentry>
   <varlistentry id="ini.apc.shm-segments">
    <term>
     <parameter>apc.shm_segments</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <para>
      O número de segmentos de memória compartilhada para alocar
      para o cache do compilador. Se APC estiver ficando sem
      memória compartilhada mas você já configurou
      <literal>apc.shm_size</literal> para o valor mais alto que seu
      sistema permite, tente aumentar esse valor.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry id="ini.apc.shm-size">
    <term>
     <parameter>apc.shm_size</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <para>
      O tamanho de cada segmento de memória compartilhado em MB.
      Por padrão, alguns sistemas (incluindo a maioria dos
      BSDs) tem limites muito baixos no tamanho de um
      segmento de memória compartilhada.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry id="ini.apc.optimization">
    <term>
     <parameter>apc.optimization</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <para>
      O nível de otimização. Zero disabilita o
      otimizador, e valores mais algos usam otimizações
      mais agressivas. Espere melhoras muito modestas de
      velocidade. Isso é experimental.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry id="ini.apc.num-files-hint">
    <term>
     <parameter>apc.num_files_hint</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <para>
      Uma "dica" sobra o número de arquivos-fonte distintos
      serão incluídos ou requisitados no seu servidor
      web. Configura para zero ou omita o valor se não tiver certeza;
      Essa configuração é útil principalmente para sites que tem
      milhares de arquivos-fonte.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry id="ini.apc.ttl">
    <term>
     <parameter>apc.ttl</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <para>
      O número de segundos que uma entrada no cache é
      permitida a ficar ociosa em uma posição, caso essa posição
      for necessária para outra entrada. Deixando o valor zero
      significa que o cache pode potencialmente encher de
      entradas paradas enquanto novas entradas não serão
      guardadas.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry id="ini.apc.gc-ttl">
    <term>
     <parameter>apc.gc_ttl</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <para>
      O número de segundos que uma entrada do cache pode
      ficar na lista do coletor de lixo (garbage-collection). Esse valor
      prove uma segurança caso um processo do servidor
      morra enquanto executando um arquivo-fonte cacheado;
      Se o arquivo-fonte for modificado, a memória alocada
      para a versão antiga não será reclamada até que
      TTL seja alcançado. Configure para zero para
      desabilitar essa funcionalidade.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry id="ini.apc.cache-by-default">
    <term>
     <parameter>apc.cache_by_default</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      Ligado por padrão, mas pode ser desligado e usado em
      conjunto com <literal>apc.filters</literal> positivos para que arquivos
      só sejam guardados se validados por um filtro positivo.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry id="ini.apc.filters">
    <term>
     <parameter>apc.filters</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      Uma lista separada por vírgulas de expressões regulares
      extendidas POSIX. Se qualquer padrão bater com o nome do arquivo-fonte,
      o arquivo não será guardado. Perceba que o
      nome de arquivo usado para comparação é o que é passado
      para a include/require, não o caminho absoluto. Se o
      primeiro caracter da expressão é um <literal>+</literal>, então a
      expressão será aditiva no sentido que quaisquer
      arquivos que baterem com a expressão serão guardados, e
      se o primeiro caracter for <literal>-</literal>, então qualquer arquivo
      que não bater com o padrão não será guardado. O caso <literal>-</literal> é
      o padrão, então pode ser deixado de fora.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry id="ini.apc.mmap-file-mask">
    <term>
     <parameter>apc.mmap_file_mask</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      Se compilado com suporte à MMAP usando <literal>--enable-mmap</literal>
      essa é a máscara de arquivo em estilo mktemp à ser passada para o
      módulo mmap para determinar se sua região mapeada de memória
      será guardada em arquivo ou memória compartilhada.
      Para guardar em arquivo, configure para um valor
      como  <literal>/tmp/apc.XXXXXX</literal>
      (exatamente 6 <literal>X</literal>s).
      Para usar shm_open/mmap no estilo POSIX ponha um <literal>.shm</literal>
      em algum lugar da sua máscara. Por exemplo, <literal>/apc.shm.XXXXXX</literal>
      Você também pode configura para <literal>/dev/zero</literal> usar a interface
      <literal>/dev/zero</literal> do kernel para memória mapeada de
      forma anônima. Deixar em branco forçará mapeamento anônimo.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry id="ini.apc.slam-defense">
    <term>
     <parameter>apc.slam_defense</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <para>
      Em servidores muito ocupados sempre que você inicializar o
      servidor ou modificar arquivos, você pode criar uma "race condition" de
      muitos processos todos tentando guardar o mesmo arquivo ao mesmo tempo.
      Essa opção configura a percentagem de processos que não tentarão
      guardar um arquivo que ainda não esteja no cache. Ou pense como
      sendo a probabilidade de um único processo não guardar o arquivo.
      Por exemplo, configurar <literal>apc.slam_defense</literal>
      para <literal>75</literal> significaria que existe
      uma chance de 75% que o processo não guardará um arquivo em cache.
      Então, quanto maior o valor, maior a defesa contra
      uma "race condition". Configurando isso para <literal>0</literal>
      desabilita essa funcionalidade.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry id="ini.apc.file-update-protection">
    <term>
     <parameter>apc.file_update_protection</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <para>
      Quando você modifica um arquivo em um servidor web, você realmente
      devia fazê-lo de uma maneira atômica. Isso é, escreva para um arquivo
      temporário e renomeie o arquivo (<literal>mv</literal>) para sua posição
      permanente quando estiver pronto. Muito editores de texto, cp, tar e
      outros programas não fazem isso. Isso significa que existe uma
      chance de que um arquivo é acessado (e guardado em cache) enquanto
      ele ainda está sendo escrito. Essa configuração <literal>apc.file_update_protection</literal>
      coloca um atraso ao fazer o cache de arquivos recém-criados. O
      valor padrão é 2 segundos, o que significa que se o horário de
      modificação do arquivo (<literal>mtime</literal>) tiver menos do que 2
      segundos de diferença do tempo atual, ele não será guarado.
      O infeliz que acessar esse arquivo incompleto ainda verá
      coisas estranhas, mas pelo menos não persistirá.
      Se você tiver certeza que você sempre atualiza seus arquivos atomicamente
      usando algo como rsync que faz isso corretamente, você pode desligar
      essa proteção ao atribuir o valor de 0. Se você tiver
      um sistema que é carregado com IO, csuando algum procedimento
      de atualização que leva mais do que dois segundos, você pode querer
      aumentar esse valor um pouco.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry id="ini.apc.enable-cli">
    <term>
     <parameter>apc.enable_cli</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <para>
      Principalmente para teste e depuração. Ligando essa diretiva habilita o
      APC para a versão CLI do PHP. Normalmente você não iria querer criar,
      popular e destrui o cache do APC à cada requisição CLI,
      mas em vários cenários de teste isso é muito útil ser
      capaz de habilitar APC para a versão CLI facilmente.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </para>
</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.5 Maintainer: fernandoc Status: ready -->
<!-- splitted from ./en/functions/zlib.xml, last change in rev 1.2 -->
  <refentry id="function.gzread">
   <refnamediv>
    <refname>gzread</refname>
    <refpurpose>Leitura de arquivos-gz segura para binários</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>string</type><methodname>gzread</methodname>
      <methodparam><type>resource</type><parameter>zp</parameter></methodparam>
      <methodparam><type>int</type><parameter>length</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     <function>gzread</function> lê até
     <parameter>length</parameter> bytes do ponteiro de arquivo-gz
     referenciado por <parameter>zp</parameter>. A leitura termina quando
     <parameter>length</parameter> (descomprimido) bytes forem lidos ou
     até o fim do arquivo, o que chegar primeiro.
    </simpara>
    <para>
     <example>
      <title>Exemplo <function>gzread</function></title>
      <programlisting role="php">
<![CDATA[
<?php
// Obtém o conteúdo de um arquivo-gz em uma string
$filename = "/usr/local/something.txt.gz";
$zd = gzopen($filename, "r");
$contents = gzread($zd, 10000);
gzclose($zd);
?>
]]>
      </programlisting>
     </example>
    </para>
    <simpara>
     Veja também <function>gzwrite</function>, <function>gzopen</function>,
     <function>gzgets</function>, <function>gzgetss</function>,
     <function>gzfile</function>, e <function>gzpassthru</function>.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.4 Maintainer: fernandoc Status: ready -->
<!-- splitted from ./en/functions/zlib.xml, last change in rev 1.4 -->
  <refentry id="function.gzencode">
   <refnamediv>
    <refname>gzencode</refname>
    <refpurpose>Cria uma string comprimida com gzip</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>string</type><methodname>gzencode</methodname>
      <methodparam><type>string</type><parameter>data</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>level</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>encoding_mode</parameter></methodparam>
     </methodsynopsis>
    <para>   
     Esta função retorna uma versão comprimida dos dados de entrada
     <parameter>data</parameter> compatível com a saída do programa
     <command>gzip</command>, ou &false; se um erro for
     encontrado. O parâmetro opcional <parameter>level</parameter>
     pode ser dado como 0 para sem compressão até 9 para compressão
     máxima, se não for dado o nível de compressão padrão será o
     nível de compressão padrão da biblioteca zlib.
    </para>
    <para>
     Você também pode dar <constant>FORCE_GZIP</constant> (o padrão)
     ou <constant>FORCE_DEFLATE</constant> como o terceiro parâmetro, que é opcional,
     <parameter>encoding_mode</parameter>. Se você usar
     <constant>FORCE_DEFLATE</constant>, você obtém uma string DEFLATE
     (inclusive os cabeçalhos gzip) após os cabeçalhos do arquivo gzip
     mais sem o checksum crc32.
     <note>
      <para>
       <parameter>level</parameter> foi adicionado no PHP 4.2, antes do PHP
       4.2 <function>gzencode</function> tinha apenas os parâmetros
       <parameter>data</parameter> e (opcional)
       <parameter>encoding_mode</parameter>.
      </para> 
     </note>
    </para>
    <para>
     Os dados resultantes contém os cabeçalhos apropriados e a estrutura
     de dados para fazer um arquivo .gz padrão, ex:
     <example>
      <title>Criando um arquivo gzip</title>
      <programlisting role="php">
<![CDATA[
<?php
    $data = implode("", file("bigfile.txt"));
    $gzdata = gzencode($data, 9);
    $fp = fopen("bigfile.txt.gz", "w");
    fwrite($fp, $gzdata);
    fclose($fp);
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Para maiores informações sobre o formato GZIP, veja o documento:
     <ulink url="&url.rfc;1952">GZIP file format specification
     version 4.3</ulink> (RFC 1952).
    </para>
    <para>
     Veja também <function>gzcompress</function>.
     <function>gzuncompress</function>,
     <function>gzdeflate</function> e
     <function>gzinflate</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

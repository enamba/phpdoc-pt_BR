<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.2 Maintainer: phaser Status: ready -->
<!-- splitted from ./en/functions/pgsql.xml, last change in rev 1.2 -->
  <refentry id="function.pg-lo-open">
   <refnamediv>
    <refname>pg_lo_open</refname>
    <refpurpose>Abre um objeto grande</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>recurso</type><methodname>pg_lo_open</methodname>
      <methodparam><type>recurso</type><parameter>conexão</parameter></methodparam>
      <methodparam><type>int</type><parameter>oid</parameter></methodparam>
      <methodparam><type>string</type><parameter>modo</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>pg_lo_open</function> abre um Objeto Grande (Large Objeto em
     inglês, daí o lo). O recurso encapsula informações sobre a conexão.
     <parameter>oid</parameter> espeficifa um iod de objeto grande válido e o
     <parameter>modo</parameter> pode ser "r", "w" ou "rw". A função retorna
     &false; se houver algum erro.
    </para>
    <warning>
     <para>
      Não feche a conexãom com o banco de dados sem antes fechar a conexão com
      o objeto grande.
     </para>
    </warning>
    <para>
     Para usar a interface de objetos grandes (lo) é necessário encapsula-lo
     dentro de um bloco de transação.
    </para>
    <note>
     <para>
      Esta função era chamada <literal>pg_loopen()</literal>.
     </para>
    </note>
    <para>
     Veja também <function>pg_lo_close</function> e
     <function>pg_lo_create</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

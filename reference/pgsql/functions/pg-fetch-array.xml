<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.4 Maintainer: phaser Status: ready -->
<!-- splitted from ./en/functions/pgsql.xml, last change in rev 1.2 -->
  <refentry id="function.pg-fetch-array">
   <refnamediv>
    <refname>pg_fetch_array</refname>
    <refpurpose>Pega uma linha como um array</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>array</type><methodname>pg_fetch_array</methodname>
      <methodparam><type>recurso</type><parameter>resultado</parameter></methodparam>
      <methodparam><type>int</type><parameter>linha</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>tipo_de_resultado</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>pg_fetch_array</function> retorna uma array que corresponde 'a
     linha pega (registro). Ela retorna &false; se não existem mais linhas.
    </para>
    <para>
     <function>pg_fetch_array</function> é uma versão extendida de
     <function>pg_fetch_row</function>.  Além de armazenar os dados em índices
     numéricos (index de campo) na array de resultado, ela também armazena os
     dados em índices associativos (nome do campo) por padrão.
    </para>
    <para>
     <parameter>linha</parameter> é o número da linha (registro) a ser
     recuperado. A primeira linha é 0.
    </para>
    <para>
     <parameter>tipo_de_resultado</parameter> é um parâmetro opicional que
     controla como o valor de retorno é iniciado
     <parameter>tipo_de_resultado</parameter> é uma constante e pode ter os
     seguintes valores: PGSQL_ASSOC, PGSQL_NUM, e PGSQL_BOTH.
     <function>pg_fetch_array</function> retorna uma array associativa que tem
     o nome de campo como chave para PGSQL_ASSOC. Index de campo como chave
     com PGSQL_NUM e ambos nome/index como chave com PGSQL_BOTH. O valor
     padrão é PGSQL_BOTH.
     <note>
      <para>
       <parameter>tipo_de_resultado</parameter> foi adicionado no PHP 4.0.
      </para>
     </note>
    </para>
    <para>
     <function>pg_fetch_array</function> NÃO é significativamente mais lento
     do que usar <function>pg_fetch_row</function>, enquanto ele fornece uma
     significativa facilidade de uso.
    </para>
    <para>
     Veja também <function>pg_fetch_row</function> e
    <function>pg_fetch_object</function> e
    <function>pg_fetch_result</function>.
    </para>
    <para>
     <example>
      <title>PostgreSQL fetch array</title>
      <programlisting role="php">
<![CDATA[
<?php 
$conn = pg_pconnect ("dbname=publicar");
if (!$conn) {
    echo "Um erro ocorreu.\n";
    exit;
}

$result = pg_query ($conn, "SELECT * FROM autores");
if (!$result) {
    echo "Um erro ororreu.\n";
    exit;
}

$arr = pg_fetch_array ($result, 0, PGSQL_NUM);
echo $arr[0] . " <- array\n";

$arr = pg_fetch_array ($result, 1, PGSQL_ASSOC);
echo $arr["autor"] . " <- array\n";
?>
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <para>
      A partir do PHP 4.1.0, <parameter>linha</parameter> tornou-se opcional.
      A chamada <function>pg_fetch_array</function> irá incrementar o contador
      de linha interno em 1.
     </para>
    </note>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.7 Maintainer: fernandoc Status: ready -->
<!-- splitted from ./en/functions/ibase.xml, last change in rev 1.39 -->
  <refentry xml:id='function.ibase-blob-import' xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>ibase_blob_import</refname>
    <refpurpose>
     Cria um blob, copia um arquivo para ele e o fecha
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>string</type><methodname>ibase_blob_import</methodname>
      <methodparam><type>resource</type><parameter>link_identifier</parameter></methodparam>
      <methodparam><type>resource</type><parameter>file_handle</parameter></methodparam>
     </methodsynopsis>
     <methodsynopsis>
      <type>string</type><methodname>ibase_blob_import</methodname>
      <methodparam><type>resource</type><parameter>file_handle</parameter></methodparam>
     </methodsynopsis>
    <para>
     Este função cria um BLOB, lê um arquivo inteiro para dentro dele, fecha, e
     retorna o id do BLOB. O parâmetro <parameter>file_handle</parameter> é um 
     ponteiro de arquivo aberto com <function>fopen</function>.
     Retorna &false; em caso de falha.
    </para>
    <para>
     <example>
      <title><function>ibase_blob_import</function> example</title>
      <programlisting role="php">
<![CDATA[
<?php
$dbh = ibase_connect($host, $username, $password);
$filename = '/tmp/bar';
      
$fd = fopen($filename, 'r');
if ($fd) {
    
    $blob = ibase_blob_import($dbh, $fd);
    fclose($fd);
        
    if (!is_string($blob)) {
        // import failed
    } else {
        $query = "INSERT INTO foo (name, data) VALUES ('$filename', ?)";
        $prepared = ibase_prepare($dbh, $query);
        if (!ibase_execute($prepared, $blob)) {
            // record insertion failed
        }
    }
} else {
    // unable to open the data file
}
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Veja também
     <function>ibase_blob_add</function>,
     <function>ibase_blob_cancel</function>,
     <function>ibase_blob_close</function> e
     <function>ibase_blob_create</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version='1.0' encoding='iso-8859-1'?>
<!-- EN-Revision: n/a Maintainer: diogo Status: ready -->
<refentry xml:id="function.class-implements" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>class_implements</refname>
  <refpurpose>
   Retorna as interfaces que são implementadas pela classe
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>class_implements</methodname>
   <methodparam><type>mixed</type><parameter>class</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>autoload</parameter></methodparam>
  </methodsynopsis>
  <para>
   Esta função retorna um array com os nomes das interfaces que a
   classe <parameter>class</parameter> e seus pais implementam.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>class</parameter></term>
     <listitem>
      <para>
       Um objeto (instância da classe) ou uma string (nome da classe).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>autoload</parameter></term>
     <listitem>
      <para>
     Permitir ou não que essa função carregue a classe automaticamente pelo
       método mágico <link linkend="language.oop5.autoload">__autoload</link>
       O padrão é &true;.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>


 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Um array em sucesso, ou &false; em caso de erro.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.1.0</entry>
       <entry>
      Adicionada a opção de passar o parâmetro <parameter>class</parameter> como
        uma string. Adicionado o parâmetro <parameter>autoload</parameter>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo de <function>class_implements</function></title>
    <programlisting role="php">
<![CDATA[
<?php

interface foo { }
class bar implements foo {}

print_r(class_implements(new bar));

// desde o PHP 5.1.0 você também pode especificar o parâmetro como uma string
print_r(class_implements('bar'));


function __autoload($class_name) {
   require_once $class_name . '.php';
}

// utiliza o __autoload para carregar a classe 'not_loaded'
print_r(class_implements('not_loaded', true));

?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Array
(
    [foo] => foo
)

Array
(
    [interface_of_not_loaded] => interface_of_not_loaded
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>class_parents</function></member>
    <member><function>get_declared_interfaces</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

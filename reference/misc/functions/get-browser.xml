<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.10 Maintainer: fernandoc Status: ready -->
<!-- splitted from ./en/functions/misc.xml, last change in rev 1.2 -->
  <refentry xml:id="function.get-browser" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
   <refnamediv>
    <refname>get_browser</refname>
    <refpurpose>
     Diz o que o browser do usuário pode fazer
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>object</type><methodname>get_browser</methodname>
      <methodparam choice="opt"><type>string</type><parameter>user_agent</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     <function>get_browser</function> tenta determinar as
     capacidades do browser do usuário. Isto é feito procurando a informação do browser no
     arquivo <filename>browscap.ini</filename>. Por padrão, o valor de
      <varname>$_SERVER["HTTP_USER_AGENT"]</varname> é usado; em qualquer caso você pode alterar isto (ex., procurar
     informação de outro browser) passando o parâmetro opcional
     <parameter>user_agent</parameter> para a função <function>get_browser</function>.
    </simpara>
    <simpara>
     A informação é retornada como um <type>objeto</type>, que contém vários
     elementos com dados representando, por exemplo, os números de versão maior e menor, a string de ID, valores
     &true;/&false; para coisas como frames, JavaScript, e cookies; e assim em diante.
    </simpara>
    <simpara>
     Enquanto <filename>browscap.ini</filename> contém informações sobre vários browser,
     ele precisa de atualizações para manter o banco de dados atual. 
     O formato do arquivo é auto-explicatório.
    </simpara>
    <para>
    O exemplo a seguir irá mostrar uma possível lista de toda
    a informação disponível sobre o browser do usuário.
     <example>
      <title>Exemplo <function>get_browser</function></title>
      <programlisting role="php">
<![CDATA[
<?php
echo $_SERVER['HTTP_USER_AGENT'] . "<hr />\n";
$browser = get_browser();
foreach ($browser as $name => $value) {
    echo "<b>$name</b> $value <br />\n";
}
?>
]]>
      </programlisting>
    <simpara>
    A saída do script acima deve ser algo como isto:
    </simpara>
    <screen role="html">
<![CDATA[
Mozilla/4.5 [en] (X11; U; Linux 2.2.9 i586)<hr />
<b>browser_name_pattern:</b> Mozilla/4\.5.*<br />
<b>parent:</b> Netscape 4.0<br />
<b>platform:</b> Linux<br />
<b>majorver:</b> 4<br />
<b>minorver:</b> 5<br />
<b>browser:</b> Netscape<br />
<b>version:</b> 4<br />
<b>frames:</b> 1<br />
<b>tables:</b> 1<br />
<b>cookies:</b> 1<br />
<b>backgroundsounds:</b> <br />
<b>vbscript:</b> <br />
<b>javascript:</b> 1<br />
<b>javaapplets:</b> 1<br />
<b>activexcontrols:</b> <br />
<b>beta:</b> <br />
<b>crawler:</b> <br />
<b>authenticodeupdate:</b> <br />
<b>msn:</b> <br />
]]>
    </screen>
    </example>
    </para>
   <simpara>
     Para que isto funcione, sua configuração do <link
     linkend="ini.browscap">browscap</link> no
     &php.ini; deve apontar para o local correto do arquivo
     <filename>browscap.ini</filename> no seu sistema.
     <filename>browscap.ini</filename> não vem com o PHP mas você deve 
     encontrar uma versão atualizada <link xlink:href="&url.browscap.download;">
     do arquivo browscap.ini</link>.  Por padrão,a diretiva
     <link linkend="ini.browscap">browscap</link> esta comentada.
    </simpara>
     <simpara>
      Os  valores de <literal>cookies</literal> simplesmente indicam que
      que o browser é capaz de receber cookies e não indica que o usuário
      permite ao browser receber ou não cookies. O unico meio de testar
      se os cookies são aceitos é criar um com <function>setcookie</function>,
      recarregar, e conferir o valor.
     </simpara>
    <note>
     <simpara>
      Em versões anteriores ao PHP 4.0.6, você tem que passar o
      user agent via o parâmetro opcional <parameter>user_agent</parameter>
      se a diretiva do PHP <link linkend="ini.register-globals">
      register_globals</link> esta em <literal>off</literal>. Neste caso,
      você irá passar <varname>$HTTP_SERVER_VARS['HTTP_USER_AGENT']</varname>.
     </simpara>
    </note>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.18 Maintainer: fernandoc Status: ready -->
<!-- Purpose: remote.other -->
<!-- Membership: bundled, external -->

 <reference xml:id="ref.curl" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>CURL, Biblioteca de Cliente de URL</title>
  <titleabbrev>CURL</titleabbrev>

  <partintro>
   <section xml:id="curl.intro">
    &reftitle.intro;
    <para>
     O PHP suporta a libcurl, uma biblioteca criada por Daniel Stenberg, que
     permite a você conectar e comunicar com vários tipos diferentes de servidor
     com vários tipos diferentes de protocolos. libcurl atualmente
     suporta os protocolos http, https, ftp, gopher, telnet, dict, file, e
     ldap. libcurl também suporta certificados HTTPS, HTTP
     POST, HTTP PUT, upload com FTP (isto também pode ser feito com a extensão
     de ftp do PHP), upload baseado em formulário HTTP, proxies, cookies, e
     autenticação usuário+senha.
    </para>
    <para>
     Estas funções foram adicionadas no PHP 4.0.2.
    </para>
   </section>

   <section xml:id="curl.requirements">
    &reftitle.required;
    <para>
     Para poder usar as funções CURL você precisa instalar o pacote <link
     xlink:href="&url.curl;">CURL</link>. PHP requer que você use o
     CURL 7.0.2-beta ou posterior. PHP não irá funcionar com qualquer versão anterior a
     CURL 7.0.2-beta. No PHP 4.2.3, você precisa do
     CURL versão 7.9.0 ou posterior. A partir do PHP 4.3.0, você precisa da CURL
     versão que seja 7.9.8 ou posterior. PHP 5.0.0 requer a
     libcurl 7.10.5 ou superior.
    </para>
   </section>

   &reference.curl.configure;

   <section xml:id="curl.resources">
    &reftitle.resources;
    <para>
     Esta extensão define 2 tipos resource: um manipulador cURL handle e o
     multi-manipulador cURL.
    </para>
   </section>

   <section>
    &reftitle.constants;
    <para>
     Veja também as <link linkend="curl.constants">Constantes Pré-definidas</link> cURL
    </para>
   </section>

   <section xml:id="curl.examples">
    &reftitle.examples;
    <para>
     Após você ter compilado o PHP com suporte a cURL, você pode começar
     a usar as funções cURL. A idéia basica por trás das funções cURL é
     que você começa uma sessão cURL usando
     <function>curl_init</function>, então você define todas
     as suas opções para a transferencia com <function>curl_setopt</function>,
     então você executa a sessão com
     <function>curl_exec</function> e você termona a sua
     sessão usando a função <function>curl_close</function>.
     Aqui está um exemplo que usa as funções cURL para obter
     a homepage example.com em um arquivo:
     <example>
      <title>Usando o módulo cURL para obter a homepage example.com</title>
      <programlisting role="php">
<![CDATA[
<?php

$ch = curl_init("http://www.example.com/");
$fp = fopen("example_homepage.txt", "w");

curl_setopt($ch, CURLOPT_FILE, $fp);
curl_setopt($ch, CURLOPT_HEADER, 0);

curl_exec($ch);
curl_close($ch);
fclose($fp);
?>
]]>
      </programlisting>
     </example>
    </para>
   </section>

  </partintro>

&reference.curl.constants;

&reference.curl.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

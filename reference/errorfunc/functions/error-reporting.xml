<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.9 Maintainer: fernandoc Status: ready -->
<!-- splitted from ./en/functions/errorfunc.xml, last change in rev 1.1 -->
  <refentry id="function.error-reporting">
   <refnamediv>
    <refname>error_reporting</refname>
    <refpurpose>Define quais erros serão reportados</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>int</type><methodname>error_reporting</methodname>
      <methodparam choice="opt"><type>int</type><parameter>nível</parameter></methodparam>
     </methodsynopsis>
    <para>
     A função <function>error_reporting</function> define a diretiva
     <link linkend="ini.error-reporting">error_reporting</link>
     em tempo de execução. O PHP tem vários níveis de erros, usando esta função
     você pode definir o nível durante a execução do seu script.
    </para>
    <para>
     <function>error_reporting</function> define o nível de erros que o PHP irá reportar,
     e retorna o nível antigo. O parâmetro <parameter>nível</parameter> 
     pode usar um bitmask, ou constantes. É fortemente recomendado
     que você use constantes para assegurar compatibilidade com futuras versões.
     Como níveis de erros podem ser adicionados, o intervalo das constantes pode crescer,
     então os níveis de erros indicados anteriormente por inteiros
     pode não funcionar como esperado.
    </para>
    <para>
     <example role="php">
      <title>Exemplos <function>error_reporting</function></title>
      <programlisting role="php">
<![CDATA[
<?php

// Desativa o relatório de todos os erros
error_reporting(0);

// Reporta erros simples
error_reporting(E_ERROR | E_WARNING | E_PARSE);

// Reportar E_NOTICE pode ser bom também (para reportar variáveis não iniciadas
// ou eros de digitação em nomes de variáveis ...)
error_reporting(E_ERROR | E_WARNING | E_PARSE | E_NOTICE);

// Reportar todos os erros exceto E_NOTICE
// Este é o valor padrão no php.ini
error_reporting(E_ALL ^ E_NOTICE);

// Reporta todos os erros (bitwise 63 deve ser usado no PHP 3)
error_reporting(E_ALL);

// O mesmo que error_reporting(E_ALL);
ini_set('error_reporting', E_ALL);

?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Os níveis de erro disponíveis estão listados a baixo.
     A descrição deles esta em
     <link linkend="errorfunc.constants">constantes predefinidas</link>.
     <table>
      <title>Constantes de nível e valores de bit de <function>error_reporting</function>.</title>
      <tgroup cols="2">
       <thead>
        <row>
         <entry>Valor</entry>
         <entry>Constante</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>1</entry>
         <entry>
          <link linkend="e-error">E_ERROR</link>
         </entry>
        </row>
        <row>
         <entry>2</entry>
         <entry>
          <link linkend="e-warning">E_WARNING</link>
         </entry>
        </row>
        <row>
         <entry>4</entry>
         <entry>
          <link linkend="e-parse">E_PARSE</link>
         </entry>
        </row>
        <row>
         <entry>8</entry>
         <entry>
          <link linkend="e-notice">E_NOTICE</link>
         </entry>
        </row>
        <row>
         <entry>16</entry>
         <entry>
          <link linkend="e-core-error">E_CORE_ERROR</link>
         </entry>
        </row>
        <row>
         <entry>32</entry>
         <entry>
          <link linkend="e-core-warning">E_CORE_WARNING</link>
         </entry>
        </row>
        <row>
         <entry>64</entry>
         <entry>
          <link linkend="e-compile-error">E_COMPILE_ERROR</link>
         </entry>
        </row>
        <row>
         <entry>128</entry>
         <entry>
          <link linkend="e-compile-warning">E_COMPILE_WARNING</link>
         </entry>
        </row>
        <row>
         <entry>256</entry>
         <entry>
          <link linkend="e-user-error">E_USER_ERROR</link>
         </entry>
        </row>
        <row>
         <entry>512</entry>
         <entry>
          <link linkend="e-user-warning">E_USER_WARNING</link>
         </entry>
        </row>
        <row>
         <entry>1024</entry>
         <entry>
          <link linkend="e-user-error">E_USER_NOTICE</link>
         </entry>
        </row>
        <row>
         <entry>6143</entry>
         <entry>
          <link linkend="e-all">E_ALL</link>
         </entry>
        </row>
        <row>
         <entry>2048</entry>
         <entry>
          <link linkend="e-strict">E_STRICT</link>
         </entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
    <warning>
     <simpara>
      A partir do PHP &gt; 5.0.0 <constant>E_STRICT</constant> com o valor 2048
      esta disponível. <constant>E_ALL</constant> <emphasis>NÃO</emphasis>
      erros do nível<constant>E_STRICT</constant>.
     </simpara>
    </warning>
    <para>
     Veja também a diretiva <link linkend="ini.display-errors">display_errors</link>
     e <function>ini_set</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

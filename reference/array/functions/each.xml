<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.20 Maintainer: felipe Status: ready --><!-- CREDITS: lucasr -->
<refentry xml:id="function.each" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>each</refname> 
  <refpurpose>Retorna o par chave/valor corrente de um array e avança o seu cursor</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>each</methodname>
   <methodparam><type>array</type><parameter role="reference">array</parameter></methodparam>
  </methodsynopsis>
  <para>
   Retorna o par chave/valor corrente de um array e avança o seu cursor
  </para>
  <para>
   Depois da execução de <function>each</function>, o cursor interno do
   array vai apontar para o próximo elemento do array, ou após o último
   elemento se ele chegar ao final do array. Você deve usar 
   <function>reset</function> se quiser percorrer o array novamente.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       O array de entrada.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna o par chave/valor corrente de <parameter>array</parameter>. Esse
   par é retornado num array de quatro elementos, com as chaves
   <literal>0</literal>, <literal>1</literal>, <literal>key</literal> e 
   <literal>value</literal>. Elementos <literal>0</literal> e <literal>key</literal> 
   contêm o nome da chave do elemento do array e <literal>1</literal> e
   <literal>value</literal> contêm o valor.
  </para>
  <para>
   Se o cursor interno do array estiver apontando para além do final do
   array, <function>each</function> retorna &false;.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplos da <function>each</function></title>
    <programlisting role="php">
<![CDATA[
<?php

$foo = array("bob", "fred", "jussi", "jouni", "egon", "marliese"); 
$bar = each($foo);
print_r($bar); 
?>
]]>
    </programlisting>
    <para>
     <varname>$bar</varname> agora contém os seguintes pares de chaves e
     valores:
     </para> 
     
     <screen>       
<![CDATA[
Array  
(  
    [1] => bob  
    [value] => bob  
    [0] => 0  
    [key] => 0  
)  
]]>
     </screen> 
    </example> 
    </para>  
    <para>  
     <informalexample>  
      <programlisting role="php">  
<![CDATA[  
<?php  
$foo = array("Robert" => "Bob", "Seppo" => "Sepi");  
$bar = each($foo);  
print_r($bar);  
?>  
]]>  
      </programlisting>  
    <para>
     <varname>$bar</varname> agora contém os seguintes pares de chaves e
     valores:
    </para>
   <screen> 
<![CDATA[  
Array  
(  
    [1] => Bob  
    [value] => Bob  
    [0] => Robert  
    [key] => Robert  
)  
]]>  
      </screen>  
     </informalexample>  
  </para>
  <para>
   <function>each</function> é tipicamente usada em conjunto com
   <function>list</function> para percorrer um array, por exemplo:
   <example>
    <title>Percorrendo um array com <function>each</function></title>
    <programlisting role="php">
<![CDATA[
<?php 
$fruit = array('a' => 'apple', 'b' => 'banana', 'c' => 'cranberry'); 
reset($fruit); 
while (list($key, $val) = each($fruit)) {  
      echo "$key => $val\n";  
}
?>
]]>
  </programlisting>
  &example.outputs;
  <screen>
<![CDATA[
a => apple 
b => banana 
c => cranberry 
]]>
    </screen>
   </example>
  </para>
  <caution> 
   <para>
    Porque a atribuição de um array para outra variável reseta o ponteiro
    do array original, nosso exemplo acima deveria causar um loop infinito 
    tendo nós atribuído <varname>$fruit</varname> para outra variável dentro do
    loop. 
   </para> 
  </caution> 
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>key</function></member>
    <member><function>list</function></member>
    <member><function>current</function></member>
    <member><function>reset</function></member>
    <member><function>next</function></member>
    <member><function>prev</function></member>
    <member><link linkend="control-structures.foreach">foreach</link></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.12 Maintainer: lucasr Status: ready -->
<!-- splitted from ./pt_BR/functions/array.xml, last change in rev 1.1 -->
<!-- last change to 'each' in en/ tree in rev 1.2 -->
  <refentry id="function.each">
   <refnamediv>
    <refname>each</refname> 
    <refpurpose>
     Retorna o par chave/valor corrente de um array e avança o seu cursor
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>array</type><methodname>each</methodname>
      <methodparam><type>array</type><parameter>array</parameter></methodparam>
     </methodsynopsis>
    <para>
     Retorna o par chave/valor corrente de
     <parameter>array</parameter> e avança o seu cursor. Esse
     par é retornado num array de quatro elementos, com as chaves
     <emphasis>0</emphasis>, <emphasis>1</emphasis>,
     <emphasis>key</emphasis>, e
     <emphasis>value</emphasis>. Os elementos <emphasis>0</emphasis> e
     <emphasis>key</emphasis> contêm o nome da chave do elemento do array, e
     <emphasis>1</emphasis> e <emphasis>value</emphasis> contêm o valor.
    </para>
    <para>
     Se o cursor interno do array estiver apontando para além do final do
     array, <function>each</function> retorna &false;.
    </para>
    <para>
     <example>
      <title>Exemplos de <function>each</function></title>
      <programlisting role="php">
<![CDATA[
<?php

$foo = array("bob", "fred", "jussi", "jouni", "egon", "marliese"); 
$bar = each($foo);
print_r($bar); 
?>
]]>
      </programlisting>
      <para>
       <varname>$bar</varname> agora contém os seguintes pares de chaves e
       valores:
       </para> 
       
       <screen> 
       
<![CDATA[
Array  
  (  
      [1] => bob  
      [value] => bob  
      [0] => 0  
      [key] => 0  
  )  
]]>
       </screen> 
      </example> 
      </para>  
      <para>  
       <informalexample>  
        <programlisting role="php">  
  <![CDATA[  
  <?php  
  $foo = array("Robert" => "Bob", "Seppo" => "Sepi");  
  $bar = each($foo);  
  print_r($bar);  
  ?>  
  ]]>  
        </programlisting>  
      <para>
       <varname>$bar</varname> agora contém os seguintes pares de chaves e
       valores:
       
      </para>
     <screen> 
     <![CDATA[  
  Array  
  (  
      [1] => Bob  
      [value] => Bob  
      [0] => Robert  
      [key] => Robert  
  )  
  ]]>  
        </screen>  
       </informalexample>  
    </para>
    <para>
     <function>each</function> é tipicamente usada em conjunto com
     <function>list</function> para percorrer um array, por exemplo:
     <example>
      <title> Percorrendo um array com
       <function>each</function></title>
      <programlisting role="php">
<![CDATA[
<?php 
$fruit = array('a' => 'apple', 'b' => 'banana', 'c' => 'cranberry'); 
reset($fruit); 
while (list($key, $val) = each($fruit)) {  
      echo "$key => $val\n";  
}
/* Saída: 
    
  a => apple 
  b => banana 
  c => cranberry 
    
  */ 
?> 
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Depois da execução de <function>each</function>, o cursor interno do
     array vai apontar para o próximo elemento do array, ou após o último
     elemento se ele chegar ao final do array. Você deve usar 
     <function>reset</function> se quiser percorrer o array novamente.
    </para>
    <caution> 
       <para> 
        Because assigning an array to another variable resets the original 
        arrays pointer, our example above would cause an endless loop had we 
        assigned <varname>$fruit</varname> to another variable inside the 
        loop. 
       </para> 
      </caution> 

    <para>
     Veja também <function>key</function>, <function>list</function>,
     <function>current</function>, <function>reset</function>,
     <function>next</function>, <function>prev</function> e 
     <link linkend="control-structures.foreach">foreach</link>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

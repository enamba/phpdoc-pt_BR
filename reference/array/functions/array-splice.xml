<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.20 Maintainer: felipe Status: ready --><!-- CREDITS: lucasr -->
<refentry xml:id="function.array-splice" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_splice</refname>
  <refpurpose>Remove uma parcela do array e substitui com outros elementos</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>array_splice</methodname>
   <methodparam><type>array</type><parameter role="reference">input</parameter></methodparam>
   <methodparam><type>int</type><parameter>offset</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>length</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>replacement</parameter></methodparam>
  </methodsynopsis>
  <para>
   Remove a sequência de elementos especificados por <parameter>offset</parameter> e
   <parameter>length</parameter> do array <parameter>input</parameter>,
   e os substitui com os elementos do array <parameter>replacement</parameter>, 
   se for especificado.   
  </para>
  <para>
   Note que as chaves numéricas em <parameter>input</parameter> não são preservadas.
  </para>
  <note>
   <simpara>
    Se <parameter>replacement</parameter> não é um array, ele terá
    <link linkend="language.types.array.casting">o tipo convertido</link>
    para um array (i.e. <code>(array) $parameter</code>). Isto pode resultar em um
    comportamento inesperado quando usando um objeto em 
    <parameter>replacement</parameter>.
   </simpara>
  </note>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>input</parameter></term>
     <listitem>
      <para>
       O array de entrada.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para>
       Se <parameter>offset</parameter> for positivo então o começo da
       região a ser removida será nessa posição a partir do início do array
       <parameter>input</parameter>. Se <parameter>offset</parameter> for negativo
       então o ínicio será dessa distância do final de <parameter>input</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       Se <parameter>length</parameter> for omitido, todos os elementos
       a partir de <parameter>offset</parameter> até o final do array serão
       removidos.  Se <parameter>length</parameter> for especificado e positivo, então
       essa quantidade de elementos será removida. Se <parameter>length</parameter>
       for especificado e negativo então o final da região a ser removida será
       dessa quantidade de elementos a partir do final do array.
       Dica: para remover todos elementos a partir de <parameter>offset</parameter>
       até o final do array quando <parameter>replacement</parameter> também é especificado, use
       <literal>count($input)</literal> para o argumento <parameter>length</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>replacement</parameter></term>
     <listitem>
      <para>
       Se o array <parameter>replacement</parameter> for especificado, então
       os elementos removidos serão substituidos pelo elementos desse array.
      </para>
      <para>
       If <parameter>offset</parameter> and <parameter>length</parameter>
       are such that nothing is removed, then the elements from the
       <parameter>replacement</parameter> array are inserted in the place
       specified by the <parameter>offset</parameter>. Note that keys in
       replacement array are not preserved.
      </para>
      <para>
       Se <parameter>replacement</parameter> for de apenas um elemento
       então não será necessário colocar <literal>array()</literal>
       para ele, a não ser que elementos seja um array.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna o array consistindo de elementos extraídos.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplos da <function>array_splice</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$input = array("vermelho", "verde", "azul", "amarelo");
array_splice($input, 2);
// $input será agora array("vermelho", "verde")

$input = array("vermelho", "verde", "azul", "amarelo");
array_splice($input, 1, -1);
// $input será agora array("vermelho", "amarelo")

$input = array("vermelho", "verde", "azul", "amarelo");
array_splice($input, 1, count($input), "laranja");
// $input será agora array("vermelho", "laranja")

$input = array("vermelho", "verde", "azul", "amarelo");
array_splice($input, -1, 1, array("preto", "marrom"));
// $input será agora array("vermelho", "verde", "azul", "preto", "marrom")
$input = array("vermelho", "verde", "azul", "amarelo");
array_splice($input, 3, 0, "roxo");
// A array $input agora é ("vermelho", "verde",
//          "azul", "roxo", "amarelo");

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Exemplos da <function>array_splice</function></title>
    <para>
     Os seguintes comandos modificam os valores de <varname>$input</varname>
     da mesma forma:
    </para>
    <programlisting role="php">
<![CDATA[
<?php
array_push($input, $x, $y);
array_splice($input, count($input), 0, array($x, $y));
array_pop($input);
array_splice($input, -1);
array_shift($input);
array_splice($input, 0, 1);
array_unshift($input, $x, $y);
array_splice($input, 0, 0, array($x, $y));
$input[$x] = $y; // for arrays where key equals offset
array_splice($input, $x, 1, $y);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_slice</function></member>
    <member><function>unset</function></member>
    <member><function>array_merge</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

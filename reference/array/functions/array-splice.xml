<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.5 Maintainer: lucasr Status: ready -->
<!-- splitted from ./pt_BR/functions/array.xml, last change in rev 1.3 -->
<!-- last change to 'array-splice' in en/ tree in rev 1.14 -->
  <refentry id="function.array-splice">
   <refnamediv>
    <refname>array_splice</refname>
    <refpurpose>
     Remove uma parcela do array e substitui com outros elementos
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>array</type><methodname>array_splice</methodname>
      <methodparam><type>array</type><parameter>input</parameter></methodparam>
      <methodparam><type>int</type><parameter>offset</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>length</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter>
        replacement
       </parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>array_splice</function> remove a sequência de elementos 
     do array <parameter>input</parameter> especificados
     por <parameter>offset</parameter> e
     <parameter>length</parameter>, e os substitui com os elementos
     do array <parameter>replacement</parameter>, se for especificado.
     Retorna um array contendo os elementos removidos.
    </para>
    <para>
     Se <parameter>offset</parameter> for positivo então o começo da
     região a ser removida será nessa posição a partir do início do array
     <parameter>input</parameter>. Se <parameter>offset</parameter> for negativo
     então o ínicio será dessa distância do final de <parameter>input</parameter>.
    </para>
    <para>
     Se <parameter>length</parameter> for omitido, todos os elementos
     a partir de <parameter>offset</parameter> até o final do array serão
     removidos.  Se <parameter>length</parameter> for especificado e positivo, então
     essa quantidade de elementos será removida. Se <parameter>length</parameter> 
     for especificado e negativo então o final da região a ser removida será 
     dessa quantidade de elementos a partir do final do array. 
     Dica: para remover todos elementos a partir de <parameter>offset</parameter> 
     até o final do array quando <parameter>replacement</parameter> também é especificado, use
     <literal>count($input)</literal> para o argumento <parameter>length</parameter>.
    </para>
    <para>
     Se o array <parameter>replacement</parameter> for especificado, então
     os elementos removidos serão substituidos pelo elementos desse array.
     Se <parameter>offset</parameter> e
     <parameter>length</parameter> são dados de forma que nada será removido,
     então os elementos de <parameter>replacement</parameter> serão inseridos
     no lugar especificado por <parameter>offset</parameter>. 
     Dica: se a substituição for de apenas um elemento
     então não será necessário colocar <literal>array()</literal>
     para ele, a não ser que elementos seja um array.
    </para>
    <para>
     As seguintes equivalências abaixo são válidas:
     <programlisting role="php">
<![CDATA[
array_push ($input, $x, $y)     array_splice ($input, count ($input), 0, 
                                             array ($x, $y))
array_pop ($input)              array_splice ($input, -1)
array_shift ($input)            array_splice ($input, 0, 1)
array_unshift ($input, $x, $y)  array_splice ($input, 0, 0, array ($x, $y))
$input[$x] = $y                 array_splice ($input, $x, 1, $y)
]]>
     </programlisting>
    </para>
    <para>
     Retorna um array contendo os elementos removidos.
    </para>
    <para>
     <example>
      <title>Exemplos de <function>array_splice</function></title>
      <programlisting role="php">
<![CDATA[
$input = array ("vermelho", "verde", "azul", "amarelo");
array_splice ($input, 2);      
// $input será agora array ("vermelho", "verde")

$input = array ("vermelho", "verde", "azul", "amarelo");
array_splice ($input, 1, -1);  
// $input será agora array ("vermelho", "amarelo")

$input = array ("vermelho", "verde", "azul", "amarelo");
array_splice ($input, 1, count($input), "laranja");  
// $input será agora array ("vermelho", "laranja")

$input = array ("vermelho", "verde", "azul", "amarelo");
array_splice ($input, -1, 1, array("preto", "marrom")); 
// $input será agora array ("vermelho", "verde", "azul", "preto", "marrom")
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Veja também <function>array_slice</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

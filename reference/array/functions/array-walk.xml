<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.28 Maintainer: felipe Status: ready --><!-- CREDITS: lucasr -->
<refentry xml:id="function.array-walk" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_walk</refname>
  <refpurpose>Aplica uma determinada funcão em cada elemento de um array</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
   <methodsynopsis>
    <type>bool</type><methodname>array_walk</methodname>
    <methodparam><type>array</type><parameter role="reference">arrary</parameter></methodparam>
    <methodparam><type>string</type><parameter>funcname</parameter></methodparam>
    <methodparam choice="opt"><type>mixed</type><parameter>userdata</parameter></methodparam>
   </methodsynopsis>
  <simpara>
   Aplica uma função definida pelo usuário nomeada pelo argumento
   <parameter>funcname</parameter> em cada elemento de <parameter>array</parameter>.
  </simpara>
  <para>
   <function>array_walk</function> não é afetado pelo ponteiro interno de
   <parameter>array</parameter>.  <function>array_walk</function>
   percorrerá por todo array desconsiderando a posição do ponteiro.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       O array de entrada.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>funcname</parameter></term>
     <listitem>
      <para>
       Normalmente, <parameter>funcname</parameter> recebe dois parâmetros.
       O valor do parâmetro <parameter>array</parameter> sendo o primeiro, e 
       a chave/índice o segundo.
      </para>
      <note>
       <para>
        Se <parameter>funcname</parameter> precisar alterar realmente os valores 
        do array, especifique que o primeiro parâmetro de
        <parameter>funcname</parameter> deve ser passado por <link linkend="language.references">
        referência</link>. Então qualquer mudança feita nesses elementos serão feitas 
        no próprio array também.
       </para>
      </note>
      <para>
       Usuários não podem modificar o próprio <parameter>array</parameter> na
       função callback e.g. Adicionar/deletar elementos, apagar elementos, etc. Se
       o array que <function>array_walk</function> é aplicado é
       modificado, o comportamento desta função é indefinido, e imprevisível.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>userdata</parameter></term>
     <listitem>
      <para>
       Se o parâmetro opcional <parameter>userdata</parameter> é fornecido,
       será passado como o terceiro parâmetro para o callback
       <parameter>funcname</parameter>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Se <parameter>funcname</parameter> necessita de mais argumentos do que o que
   está sendo passado para ela, um erro do nível <link linkend="errorfunc.constants">
   E_WARNING</link> será gerado a cada vez que 
   <function>array_walk</function> executar
   <parameter>func</parameter>. Esses avisos podem ser suprimidos
   adicionando o operador <link linkend="language.operators.errorcontrol">@</link> 
   à chamada da função <function>array_walk</function>,
   ou usando <function>error_reporting</function>.
  </para>
 </refsect1>
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.0.0</entry>
       <entry>
        Passagem da chave e <parameter>userdata</parameter> para
        <parameter>funcname</parameter> foi adicionado.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 <refsect1 role="examples">
  <para>
   <example>
    <title>Exemplo da <function>array_walk</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$frutas = array("d" => "limao", "a" => "laranja", "b" => "banana", "c" => "melancia");

function test_alter(&$item1, $key, $prefix)
{
    $item1 = "$prefix: $item1";
}

function test_print($item2, $key)
{
    echo "$key. $item2<br>\n";
}

echo "Antes ...:\n";
array_walk($frutas, 'test_print');

array_walk($frutas, 'test_alter', 'fruta');
echo "... e depois:\n";

array_walk($frutas, 'test_print');
?>
]]>
    </programlisting>
    &example.outputs;

     <screen role="php">
<![CDATA[
Antes ...:
d. limao
a. laranja
b. banana
c. melancia
... e depois:
d. fruit: limao
a. fruit: laranja
b. fruit: banana
c. fruit: melancia
]]>
     </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_walk_recursive</function></member>
    <member><function>create_function</function></member>
    <member><function>list</function></member>
    <member><function>each</function></member>
    <member><function>call_user_func_array</function></member>
    <member><function>array_map</function></member>
    <member>&seealso.callback;</member>
    <member><link linkend="control-structures.foreach">foreach</link></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

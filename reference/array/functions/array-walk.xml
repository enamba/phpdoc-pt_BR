<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.6 Maintainer: lucasr Status: ready -->
<!-- splitted from ./pt_BR/functions/array.xml, last change in rev 1.1 -->
<!-- last change to 'array-walk' in en/ tree in rev 1.2 -->
  <refentry id="function.array-walk">
   <refnamediv>
    <refname>array_walk</refname>
    <refpurpose>
     Aplica uma determinada funcão em cada elemento de um array
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>int</type><methodname>array_walk</methodname>
      <methodparam><type>array</type><parameter>arr</parameter></methodparam>
      <methodparam><type>string</type><parameter>func</parameter></methodparam>
      <methodparam choice="opt"><type>mixed</type><parameter>userdata</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     Aplica uma função definida pelo usuário nomeada pelo argumento 
     <parameter>func</parameter> em cada elemento de <parameter>arr</parameter>.
     Normalmente, <parameter>func</parameter> recebe dois argumentos: o
     primeiro é o valor do elemento e o segundo, sua chave. Se
     <parameter>userdata</parameter> for especificado, ele será usado como
     terceiro argumento da função do usuário. 
    </simpara>
    <simpara>
     Se <parameter>func</parameter> necessita de mais argumentos do que o que
     está sendo passado para ela, um erro do nível <link linkend="errorfunc.constants">
     E_WARNING</link> será gerado a cada vez que 
     <function>array_walk</function> executar
     <parameter>func</parameter>. Esses avisos podem ser suprimidos
     adicionando o operador <link linkend="language.operators.errorcontrol">@</link> 
     à chamada da função <function>array_walk</function>,
     ou usando <function>error_reporting</function>.
    </simpara>
    <note>
     <para>
      Se <parameter>func</parameter> precisar alterar realmente os valores 
      do array, especifique que o primeiro parâmetro de
      <parameter>func</parameter> deve ser passado por <link linkend="language.references">
      referência</link>. Então qualquer mudança feita nesses elementos serão feitas 
      no próprio array também.
     </para>
    </note>
    <note>
     <para>
      A passagem das chaves e do terceiro argumento para <parameter>func</parameter> foi
      adicionada no PHP 4.0.0.
     </para>
    </note>
    <para>
     <function>array_walk</function> não é afetada pelo ponteiro interno do
     array <parameter>arr</parameter>.  <function>
     array_walk</function> irá percorrer todo o array independente da posição
     atual do ponteiro interno. Para reiniciar o ponteiro, use 
     <function>reset</function>.  No PHP 3, 
     <function>array_walk</function> reinicia o ponteiro.
    </para>
    <para>
     Usuários não podem alterar o array a partir da função definida para
     ser usada. Por exemplo, adicionar/remover elementos, removerá o array
     no qual <function>array_walk</function> está sendo aplicada. Se o array
     for alterado, o comportamento desta função se torna imprevisível.
    </para>
    <para>
     <example>
      <title>Exemplo de <function>array_walk</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$frutas = array ("d" => "limao", "a" => "laranja", "b" => "banana", "c" => "melancia");

function test_alter (&$item1, $key, $prefix) {
    $item1 = "$prefix: $item1";
}

function test_print ($item2, $key) {
    echo "$key. $item2<br>\n";
}

echo "Antes ...:\n";
array_walk ($frutas, 'test_print');

array_walk ($frutas, 'test_alter', 'fruta');
echo "... e depois:\n";

array_walk ($frutas, 'test_print');
?>
]]>
      </programlisting>
      <para>
       A saída do programa acima seria:
       <screen role="php">
<![CDATA[
Antes ...:
d. limao
a. laranja
b. banana
c. melancia
... e depois:
d. fruit: limao
a. fruit: laranja
b. fruit: banana
c. fruit: melancia
]]>
       </screen>
      </para>
     </example>
    </para>
    <simpara>
     Veja também <function>list</function>, <link linkend="control-structures.foreach">foreach</link>,
     <function>each</function> e <function>call_user_func_array</function>.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

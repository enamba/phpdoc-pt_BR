<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.11 Maintainer: lucasr Status: ready -->
<!-- splitted from ./pt_BR/functions/array.xml, last change in rev 1.1 -->
<!-- last change to 'array-unique' in en/ tree in rev 1.2 -->
  <refentry id="function.array-unique">
   <refnamediv>
    <refname>array_unique</refname>
    <refpurpose>Remove o valores duplicados de um array</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>array</type><methodname>array_unique</methodname>
      <methodparam><type>array</type><parameter>array</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>array_unique</function> recebe o argumento
     <parameter>array</parameter> e retorna um novo array sem valores
     duplicados.
    </para>
    <para>
     Note que as chaves são preservadas. <function>array_unique</function>
     ordena inicialmente os valores como strings mantendo a primeira
     chave encontrada para cada valor, e ignorando as chaves encontradas
     posteriormente. Isso não significa que a chave do primeiro valor
     do <parameter>array</parameter> ainda desordenado será mantido.
    </para>
    <note>
     <simpara>
      Dois elementos são considerados iguais se, e somente se,  
      <literal>(string) $elem1 === (string) $elem2</literal>. Em palavras:
      quando a represetação em string é a mesma.
     </simpara>
     <simpara>
      O primeiro será usado.
     </simpara>
    </note>
    <para>
     <example>
      <title>Exemplo de <function>array_unique</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$input = array ("a" => "verde", "vermelho", "b" => "verde", "azul", "vermelho");
$result = array_unique ($input);
print_r($result);
?>
]]>
      </programlisting>
      <para>
       A saída seria:
      </para>
       <screen role="php">
<![CDATA[
Array
(
    [a] => verde
    [1] => azul
    [2] => vermelho
)
]]>
       </screen>
     </example>
    </para>
    <para>
     <example>
      <title><function>array_unique</function> e tipos</title>
      <programlisting role="php">
<![CDATA[
<?php
$input = array (4, "4", "3", 4, 3, "3");
$result = array_unique ($input);
var_dump($result);
?>
]]>
      </programlisting>
      <para>
       A saída do programa acima seria:
      </para>
       <screen role="php">
<![CDATA[
array(2) {
  [0] => int(4)
  [2] => string(1) "3"
}
]]>
       </screen>
     </example>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

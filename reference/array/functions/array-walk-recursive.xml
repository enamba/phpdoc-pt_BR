<?xml version='1.0' encoding='iso-8859-1'?>
<!-- EN-Revision: 288721 Maintainer: felipe Status: ready -->
<refentry xml:id="function.array-walk-recursive" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_walk_recursive</refname>
  <refpurpose>Aplica um função do usuário recursivamente para cada membro de um array</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>array_walk_recursive</methodname>
   <methodparam><type>array</type><parameter role="reference">input</parameter></methodparam>
   <methodparam><type>callback</type><parameter>funcname</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>userdata</parameter></methodparam>
  </methodsynopsis>
  <para>
   Aplica a função definida pelo usuário <parameter>funcname</parameter> para cada
   elemento do array <parameter>input</parameter>. Esta função irá
   ser usada em todo array.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>input</parameter></term>
     <listitem>
      <para>
       O array de entrada.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>funcname</parameter></term>
     <listitem>
      <para>
       Tipicamente, <parameter>funcname</parameter> usa dois
       parâmetros. O primeiro valor do parâmetro <parameter>input</parameter>, e
       a segunda chave/índice. 
      </para>
     <note>
      <para>
       Se <parameter>funcname</parameter> precisa trabalhar com
       atuais valores da array, especifique o primeiro parâmetro da
       <parameter>funcname</parameter> com uma
       <link linkend="language.references">referência</link>. Então,
       as modificações feitas para estes elementos serão feitas no
       próprio array original.
      </para>
     </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>userdata</parameter></term>
     <listitem>
      <para>
       Se o opcional parâmetro <parameter>userdata</parameter>
       é fornecido, ele é usado como o terceiro parâmetro para o
       callback <parameter>funcname</parameter>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo da <function>array_walk_recursive</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$sweet = array('a' => 'apple', 'b' => 'banana');
$fruits = array('sweet' => $sweet, 'sour' => 'lemon');

function test_print($item, $key)
{
    echo "$key holds $item\n";
}

array_walk_recursive($fruits, 'test_print');
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
a holds apple
b holds banana
sour holds lemon
]]>
    </screen>
    <para>
     Você pode nota que a chave 'sweet' nunca é mostrada. Uma chave que indica um
     <type>array</type> não é passado para a função.
    </para>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_walk</function></member>
    <member>&seealso.callback;</member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

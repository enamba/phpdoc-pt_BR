<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.14 Maintainer: lucasr Status: ready -->
  <refentry id="function.array">
   <refnamediv>
    <refname>array</refname>
    <refpurpose>Cria um array</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>array</type><methodname>array</methodname>
      <methodparam choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
     </methodsynopsis>
    <para>
     Retorna um array a partir dos valores fornecidos. Índices podem ser atribuidos
     aos valores através do operador <literal>=&gt;</literal>.
     leia a seção sobre o <link linkend="language.types.array">tipo array(matriz)</link>
     para maiores informações sobre o que é uma matriz.
    </para>
    <para>
     <note>
      <para>
       <function>array</function> é uma estrutura utilizada para representar
       literais de arrays, e não uma função.
      </para>
     </note>
    </para>
    <para>
     A sintaxe "index =&gt; values", separados por vírgulas, definem índice e
     valores respectivamente. O índice por de ser do tipo string ou numérico.
     Quando o índice é omitido, um índice numérico inteiro é automaticamente
     gerado, começando do 0. Se o índice é um inteiro, o próximo índice a ser
     gerado será igual ao maior índice inteiro + 1. Note que quando dois
     índices idênticos são definidos, o último sobrescreve o primeiro.
    </para>
    <para>
     O exemplo a seguir demonstra como criar um array com duas dimensões, como
     especificar chaves em arrays associativos, e como definir índices
     numéricos em arrays normais.
     Tem uma vírgula após a ultima entrada definida da matriz, mesmo
     sendo incomum, é uma sintaxe válida.
    </para>
   <para>
     <example>
      <title>Exemplo de <function>array</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$frutas = array (
    "frutas" => array("a"=>"laranja", "b"=>"banana", "c"=>"maçã"),
    "numeros" => array(1, 2, 3, 4, 5, 6),
    "buracos" => array("primeiro", 5 => "segundo", "terceiro")
);
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title>Indexação automática com <function>array</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$array = array(1, 1, 1, 1,  1, 8 => 1,  4 => 1, 19, 3 => 13);
print_r($array);
?>
]]>
      </programlisting>
 &example.outputs;
       <screen role="php">
<![CDATA[
Array
(
    [0] => 1
    [1] => 1
    [2] => 1
    [3] => 13
    [4] => 1
    [8] => 1
    [9] => 19
)
]]>
       </screen>
     </example>
     </para>
     <para>
     Note que o índice 3 é definido duas vezes, e retêm seu último valor
     13. O índice 4 é definido depois do índice 8, e o índice gerado depois
     dele foi 9, uma vez que o maior índice era 8.
    </para>
    <para>
     Esse exemplo cria um array com o índices a partir do 1.
     <example>
      <title>Array com índices a partir do 1 com <function>array</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$firstquarter = array(1 => 'January', 'February','March');
print_r($firstquarter);
?>
]]>
      </programlisting>
 &example.outputs;
       <screen>
<![CDATA[
Array
(
    [1] => Janeiro
    [2] => Fevereiro
    [3] => Marco
)
]]>
       </screen>
     </example>
    </para>
    <para>
     Como no Perl, você pode acessar o valor de um array dentro de aspas.
     Entretanto, você terá que colocar a sua array dentro de conchetes.
    <example>
     <title>Acessando uma matriz dentro de conchetes</title>
      <programlisting role="php">
<![CDATA[
<?php

$foo = array('bar' => 'baz');
echo "Hello {$foo['bar']}!"; // Hello baz!

?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Veja também <function>array_pad</function>,
     <function>list</function>, <link linkend="control-structures.foreach">foreach</link>
     e <function>range</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

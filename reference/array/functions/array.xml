<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.2 Maintainer: lucasr Status: ready -->
<!-- splitted from ./pt_BR/functions/array.xml, last change in rev 1.3 -->
<!-- last change to 'array' in en/ tree in rev 1.110 -->
  <refentry id="function.array">
   <refnamediv>
    <refname>array</refname>
    <refpurpose>
     Cria um array
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descri&ccedil;&atilde;o</title>
     <methodsynopsis>
      <type>array</type><methodname>array</methodname>
      <methodparam choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
     </methodsynopsis>
    <para>
     Retorna um array de par&acirc;metros fornecidos. Índices podem ser atribuidos
     aos par&acirc;metros atrav&eacute;s do operador <literal>=&gt;</literal>.
    </para>
    <para>
     <note>
      <para>
       <function>array</function> &eacute; uma estrutura utilizada para representar
       literais de arrays, e n&atilde;o uma fun&ccedil;&atilde;o.
      </para>
     </note>
    </para>
    <para>
     A forma "index =&gt; values", separados por v&iacute;rgulas, definem &iacute;ndice e
     valores respectivamente. O &iacute;ndice por de ser do tipo string ou num&eacute;rico.
     Quando o &iacute;ndice &eacute; omitido, um &iacute;ndice num&eacute;rico inteiro &eacute; automaticamente
     gerado, come&ccedil;ando do 0. Se o &iacute;ndice &eacute; um inteiro, o pr&oacute;ximo &iacute;ndice a ser
     gerado ser&aacute; igual ao maior &iacute;ndice inteiro + 1. Note que quando dois
     &iacute;ndices id&ecirc;nticos s&atilde;o definidos,  o &uacute;ltimo sobrescreve o primeiro.
    </para>
    <para>
     O exemplo a seguir demonstra como criar um array com duas dimens&otilde;es, como
     especificar chaves em arrays associativos, e como definir &iacute;ndices
     num&eacute;ricos em arrays normais.
     <example>
      <title>Exemplo de <function>array</function></title>
      <programlisting role="php">
<![CDATA[
$frutas = array (
    "frutas"  => array ("a"=>"laranja", "b"=>"banana", "c"=>"melancia"),
    "numeros" => array (1, 2, 3, 4, 5, 6),
    "buracos"   => array ("primeiro", 5 => "segundo", "terceiro")
);
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title>Índices autom&aacute;ticos com <function>array</function></title>
      <programlisting role="php">
<![CDATA[
$array = array( 1, 1, 1, 1,  1, 8=>1,  4=>1, 19, 3=>13);
print_r($array);
]]>
      </programlisting>
      <para>
       vai mostrar : 
       <screen role="php">
<![CDATA[
Array 
(
    [0] => 1
    [1] => 1
    [2] => 1
    [3] => 13
    [4] => 1
    [8] => 1
    [9] => 19
)
]]>
       </screen>
      </para>
     </example>
     Note que o &iacute;ndice 3 &eacute; definido duas vezes, e ret&ecirc;m seu &uacute;ltimo valor
     13. O &iacute;ndice 4 &eacute; definido depois do &iacute;ndice 8, e o &iacute;ndice gerado depois
     dele foi 9, uma vez que o maior &iacute;ndice era 8.
    </para>
    <para>
     Esse exemplo cria um array com o &iacute;ndices a partir do 1.
     <example>
      <title>Array com &iacute;ndices a partir do 1 com <function>array</function></title>
      <programlisting role="php">
<![CDATA[
$trimestre  = array(1 => 'Janeiro', 'Fevereiro', 'Marco');
print_r($trimestre);
]]>
      </programlisting>
      <para>
       vai mostrar : 
       <screen>
<![CDATA[
Array 
(
    [1] => 'Janeiro'
    [2] => 'Fevereiro'
    [3] => 'Marco'
)
]]>
       </screen>
      </para>
     </example>
    </para>
    <para>
     Veja tamb&eacute;m: <function>list</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

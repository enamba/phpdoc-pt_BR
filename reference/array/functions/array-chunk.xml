<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.2 Maintainer: lucasr Status: ready -->
<!-- splitted from ./pt_BR/functions/array.xml, last change in rev 1.1 -->
<!-- last change to 'array-chunk' in en/ tree in rev 1.2 -->
  <refentry id="function.array-chunk">
   <refnamediv>
    <refname>array_chunk</refname>
    <refpurpose>Divide um array em peda&ccedil;os</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descri&ccedil;&atilde;o</title>
     <methodsynopsis>
      <type>array</type><methodname>array_chunk</methodname>
      <methodparam><type>array</type><parameter>input</parameter></methodparam>
      <methodparam><type>int</type><parameter>size</parameter></methodparam>
      <methodparam choice="opt"><type>bool</type><parameter>preserve_keys</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>array_chunk</function> divide um array em diversos
     arrays tendo como tamanho o valor de <parameter>size</parameter>. 
     Voc&ecirc; provavelmente ter&aacute; um array com menos valores no final. 
     Voc&ecirc; gerar&aacute; arrays como membros de um array multidimensional com &iacute;ndices
     num&eacute;ricos que come&ccedil;am do 0.
    </para>
    <para>
     Passando o valor &true; para par&acirc;metro <parameter>preserve_keys</parameter>,
     voc&ecirc; pode for&ccedil;ar a preserva&ccedil;&atilde;o das chaves do array original. Se for
     passado o valor &false;, novos &iacute;ndices num&eacute;ricos ser&atilde;o usados em cada
     array resultante come&ccedil;ando do valor 0. O padr&atilde;o &eacute; &false;.
    </para>
    <example>
     <title><function>array_chunk</function> example</title>
     <programlisting role="php">
<![CDATA[
$input_array = array('a', 'b', 'c', 'd', 'e');
print_r(array_chunk($input_array, 2));
print_r(array_chunk($input_array, 2, TRUE));
]]>
     </programlisting>
     <para>
      A sa&iacute;da deste programa ser&aacute;:
      <screen>
<![CDATA[
Array
(
    [0] => Array
        (
            [0] => a
            [1] => b
        )

    [1] => Array
        (
            [0] => c
            [1] => d
        )

    [2] => Array
        (
            [0] => e
        )

)
Array
(
    [0] => Array
        (
            [0] => a
            [1] => b
        )

    [1] => Array
        (
            [2] => c
            [3] => d
        )

    [2] => Array
        (
            [4] => e
        )

)
]]>
      </screen>
     </para>
    </example>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

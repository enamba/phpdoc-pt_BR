<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.2 Maintainer: lucasr Status: ready -->
<!-- splitted from ./pt_BR/functions/array.xml, last change in rev 1.1 -->
<!-- last change to 'list' in en/ tree in rev 1.2 -->
  <refentry id="function.list">
   <refnamediv>
    <refname>list</refname>
    <refpurpose>
     Cria vari&aacute;veis como se fossem arrays
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descri&ccedil;&atilde;o</title>
     <methodsynopsis>
      <type>void</type><methodname>list</methodname>
      <methodparam rep="repeat"><type>mixed</type><parameter>...</parameter></methodparam>
     </methodsynopsis>
    <para>
     Assim como <function>array</function>, n&atilde;o &eacute; exatamente uma fun&ccedil;&atilde;o,
     e sim uma estrutura da pr&oacute;pria linguagem.  <function>list</function> &eacute; usada
     para criar uma lista de vari&aacute;veis em apenas um opera&ccedil;&atilde;o.
     <example>
      <title>Exemplo de <function>list</function></title>
      <programlisting role="php">
<![CDATA[
<table>
 <tr>
  <th>Nome do empregado</th>
  <th>Sal&aacute;rio</th>
 </tr>

<?php

$resultado = mysql_query ("SELECT id, nome, salario FROM empregados",$conn);
while (list ($id, $nome, $salario) = mysql_fetch_row ($resultado)) {
    print (" <tr>\n".
           "  <td><a href=\"info.php3?id=$id\">$nome</a></td>\n".
           "  <td>$salario</td>\n".
           " </tr>\n");
}

?>

</table>
]]>
      </programlisting>
     </example>
    </para>
    <warning>
    <para>
     A função <function>list</function> assinala os valores começando pelos 
     parâmetros da direita. Se você está usando variáveis normais, então não 
     precisa se preocupar com esse detalhe. Mas se você está usando arrays com
     índices você normalmente iria esperar que a ordem dos índices no array 
     fosse da esquerda para a direita, mas não é isso que acontece. O índice é
     criado na ordem reversa.
    </para>
    </warning>
    <para>
     <example>
      <title>Usando <function>list</function> com índices de array</title>
      <programlisting role="php">
<![CDATA[
<?php

$info = array('caf&eacute;', 'marrom', 'cafe&iacute;na');

list($a[0], $a[1], $a[2]) = $info;

var_dump($a);
]]>
      </programlisting>
     </example>
     O retorno desse script &eacute; o seguinte (note a ordem dos elementos em
     compara&ccedil;&atilde;o com o array original):
     <screen>
array(3) {
  [2]=>
  string(8) "cafe&iacute;na"
  [1]=>
  string(5) "marrom"
  [0]=>
  string(6) "caf&eacute;"
}
     </screen>
    </para>
    <para>
     Veja tamb&eacute;m <function>each</function> e <function>array</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

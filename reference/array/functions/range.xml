<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.18 Maintainer: felipe Status: ready --><!-- CREDITS: lucasr -->
  <refentry xml:id="function.range" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>range</refname>
    <refpurpose>Cria um array contendo uma faixa de elementos</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
    <methodsynopsis>
     <type>array</type><methodname>range</methodname>
     <methodparam><type>mixed</type><parameter>low</parameter></methodparam>
     <methodparam><type>mixed</type><parameter>high</parameter></methodparam>
     <methodparam choice="opt"><type>number</type><parameter>step</parameter></methodparam>
    </methodsynopsis>
    <para>
     <function>range</function> retorna um array com elementos de
     <parameter>low</parameter> até <parameter>high</parameter>,
     com intervalo fechado.  Se low > high, será de high até low.
    </para>
    <note> 
       <title>Novo parâmetro</title> 
       <simpara> 
        O parâmetro opcional <parameter>step</parameter> foi adicionado no PHP 5.0.0. 
       </simpara> 
      </note> 

    <para>
     Se o parâmetro <parameter>step</parameter> for especificado, será usado
     como o incremento entre os elementos da sequência. <parameter>step</parameter>
     deve ser um inteiro positivo.  Se não for especificado,
     <parameter>step</parameter> terá valor igual a 1.
    </para>
    <para>
     <example>
      <title><function>range</function> exemplos</title>
      <programlisting role="php">
<![CDATA[
<?php  
  // array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ,11, 12)  
foreach(range(0, 12) as $numero) {  
    echo $numero;
}
// O parâmetro step foi introduzido no 5.0.0 
// array(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100) 

foreach(range(0, 100, 10) as $numero) {
    echo $numero;
}
// Utilização da sequência de caracteres introduzidos no 4.1.0  
  // array('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i');  
  foreach(range('a', 'i') as $letra) {  

    echo $letra;
}
// array('c', 'b', 'a');  
  foreach(range('c', 'a') as $letra) {  

    echo $letra;
}
?>
]]>
     </programlisting>
    </example>
    </para> 
    <note>
     <para>
      Até a versão 4.1.0, a função <function>range</function> só gerava
      arrays de inteiros em ordem crescente. O suporte para
      sequências de caracteres e arrays descrescentes foi adicionado no PHP 4.1.0.
      Valores de sequência de caracter estão limitados para o comprimento de um.
      Se um comprimento maior do que um é entrado, apenas o primeiro caractere é usado.
      </para>
    </note>
    <caution> 
       <para> 
        Nas versões de PHP 4.1.0 até 4.3.2, <function>range</function> vê 
        strings numéricas como strings e não como inteiros. Em lugar disso, eles serão
        usados por sequência de caracteres. Por exemplo, <literal>"4242"</literal> 
        é tratado como <literal>"4"</literal>. 
       </para> 
      </caution> 

    <para>
     Veja também <function>shuffle</function>,  
       <function>array_fill</function>, e  
       <link linkend="control-structures.foreach">foreach</link>.  

    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

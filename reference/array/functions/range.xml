<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.5 Maintainer: lucasr Status: ready -->
<!-- splitted from ./pt_BR/functions/array.xml, last change in rev 1.1 -->
<!-- last change to 'range' in en/ tree in rev 1.2 -->
  <refentry id="function.range">
   <refnamediv>
    <refname>range</refname>
    <refpurpose>
     Cria um array contendo uma faixa de elementos 
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>array</type><methodname>range</methodname>
      <methodparam><type>mixed</type><parameter>low</parameter></methodparam>
      <methodparam><type>mixed</type><parameter>high</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>step</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>range</function> retorna um array com elementos de
     <parameter>low</parameter> até <parameter>high</parameter>,
     com intervalo fechado.  Se low > high, será de high até low.
    </para>
    <para>
     Se o parâmetro <parameter>step</parameter> for especificado, será usado
     como o incremento entre os elementos da sequência. <parameter>step</parameter>
     deve ser um inteiro positivo.  Se não for especificado,
     <parameter>step</parameter> terá valor igual a 1.
    </para>
    <example>
     <title>Exemplos de <function>range</function></title>
     <programlisting role="php">
<![CDATA[
foreach(range(0, 9) as $numero) {
    echo $numero;
}
foreach(range(0, 100, 10) as $numero) {
    echo $numero;
}
foreach(range('a', 'z') as $letra) {
    echo $letra;
}
foreach(range('z', 'a') as $letra) {
    echo $letra;
}
]]>
     </programlisting>
    </example>
    <note>
     <para>
      Até a versão 4.1.0, a função <function>range</function> só gerava
      arrays de inteiros em ordem crescente. O suporte para
      sequências de caracteres e arrays descrescentes foi adicionado no PHP 4.1.0.
      O parâmetro <parameter>step</parameter> foi adicionado na versão 4.4.0.
     </para>
     <example>
      <title>Simulando faixas decrescentes e sequências de caracteres</title>
      <programlisting role="php">
<![CDATA[
# array_reverse pode ser usada para inverter a ordem da faixa de valores 
foreach(array_reverse(range(0,9)) as $numero) {
    echo $numero;
}

# array_map() pode ser usada para transformar inteiros em caracteres usando chr()
foreach(array_map('chr', range(ord('a'),ord('z'))) as $caracter) {
    echo $caracter;
}
]]>
      </programlisting>
     </example>
    </note>
    <para>
     Veja <function>shuffle</function> para outro exemplo de utilização dessa
     função.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

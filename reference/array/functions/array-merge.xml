<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.11 Maintainer: lucasr Status: ready -->
  <refentry id="function.array-merge">
   <refnamediv>
    <refname>array_merge</refname>
    <refpurpose>Funde um ou mais arrays</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>array</type><methodname>array_merge</methodname>
      <methodparam><type>array</type><parameter>array1</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter>array2</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter>...</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>array_merge</function> funde os elementos dois ou mais
     arrays de forma que os elementos de um são colocados no final
     do array anterior. Retorna o array resultante da fusão.
    </para>
    <para>
     Se os arrays dados têm as mesmas chaves string, então o último
     valor para uma chave irá sobrescrever o valor anterior. Se, no entanto,
     os arrays tem as mesmas chaves numéricas, o último valor para uma chave
     não sobrescreverá o valor original, e sim adicionado ao array
     resultante.
    </para>
    <para>
     Se apenas uma array é dada e a array é indexada numericamente,
     as chaves são reindexadas de uma maneira continua.
    </para>
    <para>
     <example>
      <title>Exemplo de <function>array_merge</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$array1 = array("cor" => "vermelho", 2, 4);
$array2 = array("a", "b", "cor" => "verde", "forma" => "trapezoide", 4);
$result = array_merge($array1, $array2);
print_r($result);
?>
]]>
      </programlisting>
      &example.outputs;
       <screen role="php">
<![CDATA[
Array
(
    [cor] => verde
    [0] => 2
    [1] => 4
    [2] => a
    [3] => b
    [forma] => trapezoide
    [4] => 4
)
]]>
       </screen>
     </example>
    </para>
    <para>
     <example>
      <title>Exemplo simples de <function>array_merge</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$array1 = array();
$array2 = array(1 => "data");
$result = array_merge($array1, $array2);
?>
]]>
      </programlisting>
      <para>
       Não esqueça que as chaves numéricas serão reordenadas!
      </para>
       <screen role="php">
<![CDATA[
Array
(
    [0] => data
)
]]>
       </screen>
      <para>
       Se você quer preservar os arrays e apenas concatená-los, o operador
       <literal>+</literal>:
      </para>
       <programlisting role="php">
<![CDATA[
<?php
$array1 = array();
$array2 = array(1 => "data");
$result = $array1 + $array2;
?>
]]>
       </programlisting>
       <para>
       As chaves numéricas serão preservadas e as associações originais
       permanecem.
       </para>
       <screen role="php">
<![CDATA[
Array
(
    [1] => data
)
]]>
       </screen>
     </example>
    </para>
     <warning>
  113         <para>
  114          The behavior of <function>array_merge</function> was modified in PHP 5. Unlike PHP 4, <function>array_merge</function>
  115          now only accepts parameters of type <type>array</type>. However, you can use typecasting
  116          to merge other types. See the example below for details.
  117         </para>
  118        <para>        <para>
  119         Shared keys will be overwritten on a first-come first-served basis.       <example>
  120           <title><function>array_merge</function> PHP 5 example</title>
  121           <programlisting role="php">
  122      <![CDATA[
  123      <?php
  124      $beginning = 'foo';
  125      $end = array(1 => 'bar');
  126      $result = array_merge((array)$beginning, (array)$end);
  127      print_r($result);
  128      ?>
  129      ]]>
  130           </programlisting>
  131           &example.outputs;
  132           <screen role="php">
  133      <![CDATA[
  134      Array
  135      (
  136          [0] => foo
  137          [1] => bar
  138      )
  139      ]]>
  140           </screen>
  141          </example>
</para>
     </warning>
    <para>
     Veja também <function>array_merge_recursive</function> e <function>array_combine</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.2 Maintainer: lucasr Status: ready -->
<!-- splitted from ./pt_BR/functions/array.xml, last change in rev 1.1 -->
<!-- last change to 'extract' in en/ tree in rev 1.2 -->
  <refentry id="function.extract">
   <refnamediv>
    <refname>extract</refname>
    <refpurpose>
     Importa vari&aacute;veis para a tabela de s&iacute;mbolos a partir de um array
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descri&ccedil;&atilde;o</title>
     <methodsynopsis>
      <type>int</type><methodname>extract</methodname>
      <methodparam><type>array</type><parameter>var_array</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>extract_type</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>prefix</parameter></methodparam>
     </methodsynopsis>
    <para>
     Essa &eacute; usada para importar vari&aacute;veis a partir de um array para a tabela
     de s&iacute;mbolos corrente. Recebe o array associativo
     <parameter>var_array</parameter> e trata as suas chaves como
     os nomes das vari&aacute;veis e os valores como valores das vari&aacute;veis. 
     Para cada par chave/valor ele criar&aacute; uma vari&aacute;vel na tabela de s&iacute;mbolos
     corrente, seguindo os par&acirc;metros
     <parameter>extract_type</parameter> e
     <parameter>prefix</parameter>.
    </para>
    <note>
     <para>
      Desde a vers&atilde;o 4.0.5 essa fun&ccedil;&atilde;o retorna o n&uacute;mero de vari&aacute;veis
      extra&iacute;das.
     </para>
    </note>
    <para>
     <function>extract</function> checa se cada chave do array constituinum
     nome de vari&aacute;vel v&aacute;lido e por colis&otilde;es com as vari&aacute;veis j&aacute; existentes na
     tabela de s&iacute;mbolos. O modo com que chaves inv&aacute;lidas ou n&uacute;mericas e colis&otilde;es 
     s&atilde;o tratadas &eacute; determinado pelo argumento 
     <parameter>extract_type</parameter>. Esse argumento pode receber os
     seguintes valores:
     <variablelist>
      <varlistentry>
       <term>EXTR_OVERWRITE</term>
       <listitem>
        <simpara>
         Se houver uma colis&atilde;o, sobrescreve a vari&aacute;vel existente.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>EXTR_SKIP</term>
       <listitem>
        <simpara>
         Se houver uma colis&atilde;o, n&atilde;o sobrescreve a vari&aacute;vel existente.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>EXTR_PREFIX_SAME</term>
       <listitem>
        <simpara>Se houver uma colis&atilde;o, adiciona um prefixo ao nome da
        vari&aacute;vel definido pelo argumento 
        <parameter>prefix</parameter>.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>EXTR_PREFIX_ALL</term>
       <listitem>
        <simpara>
         Adiciona um prefixo ao nome de todas as vari&aacute;veis definido por 
         <parameter>prefix</parameter>. Desde o PHP 4.0.5 est&atilde;o inclu&iacute;dos
         nomes num&eacute;ricos.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>EXTR_PREFIX_INVALID</term>
       <listitem>
        <simpara>
         Adiciona um prefixo definido por <parameter>prefix</parameter> apenas
         para vari&aacute;veis como nomes inv&aacute;lidos ou num&eacute;ricos. Essa op&ccedil;&atilde;o foi adicionada no
         PHP 4.0.5.
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
    <para>
     Se <parameter>extract_type</parameter> n&atilde;o for especificado, &eacute; assumido
     o valor EXTR_OVERWRITE por padr&atilde;o.
    </para>
    <para>
     Note que <parameter>prefix</parameter> s&oacute; &eacute; necess&aacute;rio se
     <parameter>extract_type</parameter> for EXTR_PREFIX_SAME,
     EXTR_PREFIX_ALL, ou EXTR_PREFIX_INVALID. se o nome com o prefixo
     n&atilde;o for um nome de vari&aacute;vel v&aacute;lido, ela n&atilde;o ser&aacute; importada para a tabela
     de s&iacute;mbolos.
    </para>
    <para>
     <function>extract</function> retorna o n&uacute;mero de vari&aacute;veis importadas
     com sucesso para a tbela de s&iacute;mbolos.
    </para>
    <para>
     Um uso comum de extract e na importa&ccedil;&atilde;o de
     vari&aacute;veis contidas num array associativo retornado pela fun&ccedil;&atilde;o
     <function>wddx_deserialize</function>.
    </para>
    <para>
     <example>
      <title>Exemplo de <function>extract</function></title>
      <programlisting role="php">
<![CDATA[
<?php

/* Suponha que $var_array &eacute; um array retornado pela fun&ccedil;&atilde;o
   wddx_deserialize */

$tamanho = "grande";
$var_array = array ("cor" => "azul",
                    "tamanho"  => "medio",
                    "forma" => "esfera");
extract ($var_array, EXTR_PREFIX_SAME, "wddx");

print "$cor, $tamanho, $forma, $wddx_tamanho\n";

?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     O exemplo acima produziria:
     <programlisting>
<![CDATA[
azul, grande, esfera, medio
]]>
     </programlisting>
    </para>
    <para>
     O <varname>$tamanho</varname> n&atilde;o foi sobrescrito, porque
     n&oacute;s especificamos EXTR_PREFIX_SAME, o que resultou na cria&ccedil;&atilde;o da vari&aacute;vel 
     <varname>$wddx_tamanho</varname>.  Se EXTR_SKIP fosse
     utilizado, ent&atilde;o $wddx_tamanho n&atilde;o seria criada.
     EXTR_OVERWRITE teria feito com que <varname>$size</varname> tivesse
     o valor "medio", e EXTR_PREFIX_ALL resultaria em novas vari&aacute;veis
     com os nomes <varname>$wddx_cor</varname>,
     <varname>$wddx_tamanho</varname>, e
     <varname>$wddx_forma</varname>.
    </para>
    <para>
     Voc&ecirc; deve usar um arra associativo, um array indexado numericamente n&atilde;o
     produzir&aacute; resultados.
    </para>
    <para>
     Veja tamb&eacute;m: <function>compact</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.18 Maintainer: fernandoc Status: ready -->
<!-- splitted from ./en/functions/info.xml, last change in rev 1.29 -->
  <refentry id="function.dl">
   <refnamediv>
    <refname>dl</refname>
    <refpurpose>Carrega uma extensão do PHP durante a execução</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
    <methodsynopsis>
     <type>int</type><methodname>dl</methodname>
     <methodparam><type>string</type><parameter>library</parameter></methodparam>
    </methodsynopsis>
    <para>
     Carrega a extensão do PHP indicada pelo parâmetro
     <parameter>library</parameter>. O parâmetro <parameter>library</parameter>
     é <emphasis>somente</emphasis> o nome do arquivo da extensão para carregar
     o qual depende da sua plataforma. Por exemplo, a extensão <link
     linkend="ref.sockets">sockets</link> (se compilada como módulo compartilhado,
     o que não é o padrão) deve ser chamado como <filename>sockets.so</filename>
     em plataformas Unix enquanto é chamado
     <filename>php_sockets.dll</filename> em plataformas Windows.
    </para>
    <para>
     &return.success; Se o funcionamento de carregar módulos não estiver disponível
     (veja a nota) ou for desabilitado (ou por colocar em off
     <literal>enable_dl</literal> ou ativando o &safemode;
     no &php.ini;) um <constant>E_ERROR</constant> é emitido
     e a execução é encerrada. Se <function>dl</function> falhar porque a biblioteca especificada
     não puder ser carregada, em adição ao &false; uma mensagem
     <constant>E_WARNING</constant> é emitida.
    </para>
    <para>
     Use <function>extension_loaded</function> para testar se uma extensão esta
     disponível ou não. Isto funciona para extensões internas e para aquelas carregadas
     dinamicamente (através do &php.ini;
     ou da função <function>dl</function>).
    </para>
    <example>
     <title>Exemplos <function>dl</function></title>
     <programlisting role="php">
<![CDATA[
<?php
// Exemplo de carregar uma extensão baseada no sistema operacional
if (!extension_loaded('sqlite')) {
    if (strtoupper(substr(PHP_OS, 0, 3) == 'WIN')) {
        dl('php_sqlite.dll');
    } else {
        dl('sqlite.so');
    }
}

// ou usando a constante PHP_SHLIB_SUFFIX disponível a partir do  PHP 4.3.0
if (!extension_loaded('sqlite')) {
    $prefix = (PHP_SHLIB_SUFFIX == 'dll') ? 'php_' : '';
    dl($prefix . 'sqlite.' . PHP_SHLIB_SUFFIX);
}
?>
]]>
     </programlisting>
    </example>
    <para>
     O diretório a partir do qual a extensão é carregada depende da sua plataforma:
    </para>
    <para>
     Windows - Se for explicitamente definido no &php.ini;, a extensão é carregada
     a partir de <filename>c:\php4\extensions\</filename> por padrão.
    </para>
    <para>
     Unix - Se não for explicitamente definido no &php.ini;, o diretório
     padrão das extensões depende de
     <itemizedlist>
      <listitem>
       <simpara>
        se o PHP foi compilado com <literal>--enable-debug</literal> ou não
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        se o PHP foi compilado com suporte (experimental) ZTS (Zend Thread Safety)
        ou não
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        O <literal>ZEND_MODULE_API_NO</literal> (o número Zend
        internal module API, o que é basicamente a data onde houve uma mudança maior na  
        API ex. <literal>20010901</literal>)
       </simpara>
      </listitem>
     </itemizedlist>
     Levando em conta o acima, o diretório padrão poderá ser
     <literal>&lt;install-dir&gt;/lib/php/extensions/ &lt;debug-or-not&gt;-&lt;zts-or-not&gt;-ZEND_MODULE_API_NO</literal>,
     e.g.
     <filename>/usr/local/php/lib/php/extensions/debug-non-zts-20010901</filename>
     or
     <filename>/usr/local/php/lib/php/extensions/no-debug-zts-20010901</filename>.
    </para>
    <note>
     <para>
      <function>dl</function> <emphasis>não</emphasis> e suportado em
      servidores multi-tarefa. Use<literal>extensions</literal>
      no seu &php.ini; quando estiver operando em um ambiente assim. Em todo o caso,
      as versões <literal>CGI</literal> e <literal>CLI</literal>
      <emphasis role="strong">não</emphasis> são afetadas!
     </para>
    </note>
    <note>
     <para>
      <function>dl</function> diferencia maiúsculas e minúsculas em plataformas Unix.
     </para>
    </note>
    &note.sm.disabled;
    <para>
     Veja também
     <link linkend="ini.extension">Extension Loading Directives</link>
     e <function>extension_loaded</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

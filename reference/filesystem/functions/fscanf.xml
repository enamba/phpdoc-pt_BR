<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.19 Maintainer: diogo Status: ready --><!-- CREDITS: rarruda,ae -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.fscanf">
 <refnamediv>
  <refname>fscanf</refname>
  <refpurpose>Interpreta a leitura de um arquivo de acordo com um formato</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>fscanf</methodname>
   <methodparam><type>resource</type><parameter>handle</parameter></methodparam>
   <methodparam><type>string</type><parameter>formato</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter role="reference">...</parameter></methodparam>
  </methodsynopsis>
  <para>
   A função <function>fscanf</function> é semelhante à
   <function>sscanf</function>, mas usa como entrada um arquivo
   associado com o <parameter>handle</parameter> e interpreta a
   entrada de acordo com o <parameter>formato</parameter> especificado,
   o qual é descrito na documentação da <function>sprintf</function>.
  </para>
  <para>
   Qualquer espaço em branco na string do formato combina com quaisquer outros
   espaços no stream de entrada. Isto significa que até uma tabulação
   <literal>\t</literal> na string do formato combina com um caracter de espaço
   simples no stream de entrada.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>handle</parameter></term>
     <listitem>
      &fs.file.pointer;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>formato</parameter></term>
     <listitem>
      <para>
	   O formato especificado como descrito na documentação de
	   <function>sprintf</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>...</parameter></term>
     <listitem>
      <para>
       Variáveis opcionais onde definir os valores.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Se somente dois parâmetros forem passados pra essa função, os valores interpretados
   serão retornados como um array. Do contrário, se parâmetros opcionais forem passados,
   a função retornará o número de valores definidos. Os parâmetros opcionais
   devem ser passados por referência.
  </para>
 </refsect1>
 
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.3.0</entry>
       <entry>
	    Antes do PHP 4.3.0, o maior número de caracteres lidos do
        arquivo era 512 (ou o primeiro \n, o que viesse primeiro).
        Agora, linhas de qualquer comprimento são lidas e interpretadas.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo de <function>fscanf</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$handle = fopen("users.txt", "r");
while ($userinfo = fscanf($handle, "%s\t%s\t%s\n")) {
    list ($name, $profession, $countrycode) = $userinfo;
    //... fazer algo com os valores
}
fclose($handle);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Conteúdo de users.txt</title>
    <programlisting role="txt">
<![CDATA[
javier  argonaut        pe
hiroshi sculptor        jp
robert  slacker us
luigi   florist it
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>fread</function></member>
    <member><function>fgets</function></member>
    <member><function>fgetss</function></member>
    <member><function>sscanf</function></member>
    <member><function>printf</function></member>
    <member><function>sprintf</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.9 Maintainer: ae Status: ready --><!-- CREDITS: rarruda -->
<!-- splitted from ./pt_BR/functions/filesystem.xml, last change in rev 1.5 -->
  <refentry id="function.fscanf">
   <refnamediv>
    <refname>fscanf</refname>
    <refpurpose>Interpreta a leitura de um arquivo de acordo com um formato</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>mixed</type><methodname>fscanf</methodname>
      <methodparam><type>resource</type><parameter>handle</parameter></methodparam>
      <methodparam><type>string</type><parameter>formato</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>var1</parameter></methodparam>
     </methodsynopsis>
    <para>
     A função <function>fscanf</function> é semelhante a
     <function>sscanf</function>, mas usa como entrada um arquivo
     associado com <parameter>handle</parameter> e interpreta a
     entrada de acordo com o
     <parameter>formato</parameter> especificado. Se somente dois parametros forem passados
     para a função, os valores interpretados serão retornados como um array.
     De outro modo, se parametros opcionais são passados a função
     irá retornar o número de valores utilizados. Os parametros opcionais
     tem que ser passados por referência.
    </para>
    <para>
     Qualquer espaço em branco na string formato baterá quaisquer outros espaços no stream
     de entrada. Isto significa que qualquer tabulação <literal>\t</literal> na string
     formato poderá bater com um caracter de espaço simples no stream de entrada.
    </para>
    <para>
     <example>
      <title>Exemplo do <function>fscanf</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$handle = fopen ("users.txt","r");
while ($userinfo = fscanf ($handle, "%s\t%s\t%s\n")) {
    list ($name, $profission, $countrycode) = $userinfo;
    //... fazer algo com os valores
}
fclose($handle);
?>
]]>
      </programlisting>
     </example>
     <example>
      <title>users.txt</title>
      <screen>
<![CDATA[
javier  argonauta        pe
hiroshi escultor         jp
robert  tradutor us
luigi   florista it
]]>
      </screen>
     </example>
    </para>
    <note>
     <simpara>
      Antes do PHP 4.3.0, o maior número de caracteres lidos do
      arquivo era 512 (ou o primeiro \n, o que viesse primeiro).
      A partir do PHP 4.3.0, qualquer número longo pode ser lidos e interpretados.
     </simpara>
    </note>
    <para>
     Veja também <function>fread</function>, <function>fgets</function>,
     <function>fgetss</function>, <function>sscanf</function>,
     <function>printf</function> e <function>sprintf</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

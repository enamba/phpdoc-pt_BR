<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.11 Maintainer: diogo Status: ready --><!-- CREDITS: rarruda,ae -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.is-uploaded-file">
 <refnamediv>
  <refname>is_uploaded_file</refname>
  <refpurpose>Diz se o arquivo foi enviado por POST HTTP</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>is_uploaded_file</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
  </methodsynopsis>
  <para>
   Retorna &true; se o arquivo com o nome <varname>filename</varname>
   foi enviado por POST HTTP. Isto é útil para ter certeza que um
   usuário malicioso não está tentando levar o script a trabalhar
   em arquivos que não deve estar trabalhando --- por exemplo,
   <filename>/etc/passwd</filename>.
  </para>
  <para>
   Este tipo de confirmação é importante principalmente se existe
   alguma chance que qualquer coisa feita com os arquivos carregados
   possa revelar seu conteúdo para o usuário, ou mesmo para outros
   usuários no mesmo sistema.
  </para>
  <para>
   Para o funcionamento apropriado, a função <function>is_uploaded_file</function>
   precisa de um argumento como $_FILES['userfile']['tmp_name'], - o nome do
   arquivo enviado na máquina do cliente $_FILES['userfile']['name'] não funciona.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>
       O nome do arquivo sendo checado.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo de <function>is_uploaded_file</function></title>
    <programlisting role="php">
<![CDATA[
<?php

if (is_uploaded_file($_FILES['userfile']['tmp_name'])) {
   echo "O arquivo ". $_FILES['userfile']['name'] ." foi enviado com sucesso.\n";
   echo "Mostrando o conteúdo\n";
   readfile($_FILES['userfile']['tmp_name']);
} else {
   echo "Possível ataque de envio de arquivo: ";
   echo "nome do arquivo '". $_FILES['userfile']['tmp_name'] . "'.";
}

?>]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Exemplo de <function>is_uploaded_file</function> para PHP 4 &lt; 4.0.3</title>
    <para>
     O exemplo seguinte <emphasis>não</emphasis> funcionará em
     versões do PHP posteriores a 4.0.2. Isto depende de uma funcionalidade
     interna do PHP que mudou depois dessa versão.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
/* Teste de arquivo carregado pelo usuário */
function is_uploaded_file_4_0_2($filename)
{
    if (!$tmp_file = get_cfg_var('upload_tmp_dir')) {
        $tmp_file = dirname(tempnam('', ''));
    }
    $tmp_file .= '/' . basename($filename);
    /* Podem haver barras sobressalentes no php.ini... */
    return (ereg_replace('/+', '/', $tmp_file) == $filename);
}

/* Assim é como utilizá-la, uma vez que você também não tem
 * move_uploaded_file() nessas versões mais antigas: */
if (is_uploaded_file_4_0_2($HTTP_POST_FILES['userfile'])) {
    copy($HTTP_POST_FILES['userfile'], "/lugar/onde/colocar/arquivo/enviado");
} else {
    echo "Possível ataque de envio de arquivo: nome do arquivo '$HTTP_POST_FILES[userfile]'.";
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>move_uploaded_file</function></member>
    <member>Veja <link linkend="features.file-upload">Gerenciar upload de arquivo</link> para um simples exemplo de uso.</member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.3 Maintainer: ae Status: ready --><!-- CREDITS: rarruda -->
<!-- splitted from ./pt_BR/functions/filesystem.xml, last change in rev 1.5 -->
  <refentry id="function.is-uploaded-file">
   <refnamediv>
    <refname>is_uploaded_file</refname>
    <refpurpose>Diz se o arquivo foi uploaded via HTTP POST</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
    <methodsynopsis>
     <type>bool</type><methodname>is_uploaded_file</methodname>
     <methodparam><type>string</type><parameter>filename</parameter></methodparam>
    </methodsynopsis>
    <para>
     Retorna &true; se o arquivo com o nome <varname>filename</varname>
     foi uploaded via HTTP POST. Isto é útil para ter certeza que um
     usuário malicioso, não está tentando confundir o script em trabalhar
     em arquivos que não deve estar trabalhando --- por exemplo,
     <filename>/etc/passwd</filename>.
    </para>
    <para>
     Este tipo de confirmação é importante principalmente se existe
     alguma chance que qualquer coisa feita com os arquivos carregados
     poderiam revelar o seu conteúdo para o usuário, ou mesmo
     para outros usuários no mesmo sistema.
    </para>
    <para>
     <function>is_uploaded_file</function> está disponível somente em
     versões do PHP 3 depois da 3.0.16 e em versões do PHP 4 posteriores a
     4.0.2. Se você ainda está utilizando uma versão anterior, você pode
     utilizar o seguinte código para se proteger:
     <note>
      <para>
       O exemplo seguinte <emphasis>não</emphasis> funcionará em
       versões do PHP posteriores a 4.0.2. Isto depende de uma funcionalidade
       interna do PHP que mudou depois dessa versão.
      </para>
     </note>
     <programlisting role="php">
<![CDATA[
<?php
/* Teste de arquivo carregado pelo usuário */
function is_uploaded_file($filename) {
    if (!$tmp_file = get_cfg_var('upload_tmp_dir')) {
        $tmp_file = dirname(tempnam('', ''));
    }
    $tmp_file .= '/' . basename($filename);
    /* Pode haver uma barra no final do php.ini... */
    return (ereg_replace('/+', '/', $tmp_file) == $filename);
}

/* Utilize isto se por acaso você não tiver
 * move_uploaded_file() em versões antigas: */
if (is_uploaded_file($HTTP_POST_FILES['userfile'])) {
    copy($HTTP_POST_FILES['userfile'], "/place/to/put/uploaded/file");
} else {
    echo "Possível ataque de carregamento de arquivo: filename '$HTTP_POST_FILES[userfile]'.";
}
?>
]]>
     </programlisting>
    </para>
    <para>
     Veja também <function>move_uploaded_file</function> e a seção
     <link linkend="features.file-upload">Manipulando upload de arquivos</link>
     para um exemplo de utilização desta função.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.5 Maintainer: ae Status: ready --><!-- CREDITS: rarruda -->
<!-- splitted from ./pt_BR/functions/filesystem.xml, last change in rev 1.5 -->
  <refentry id="function.filesize">
   <refnamediv>
    <refname>filesize</refname>
    <refpurpose>Lê o tamanho do arquivo</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>int</type><methodname>filesize</methodname>
      <methodparam><type>string</type><parameter>nomedoarquivo</parameter></methodparam>
     </methodsynopsis>
    <para>
     Retorna o tamanho do arquivo, ou &false; em caso de erro.
    </para>
    <note>
     <simpara>
      Como o tipo inteiro do PHP é sinalizado e muitas plataformas utilizam inteiros de 32 bits,
      <function>filesize</function> pode retornar resultados inesperados para arquivos que
      sejam maiores que 2 Gb. Para arquivos entre 2 Gb e 4 Gb você pode resolver
      esse problema utilizando <literal>sprintf("%u", filesize($file))</literal>.
     </simpara>
    </note>

    &note.clearstatcache;

    &note.no-remote;

    <para>
     <example>
      <title>Exemplo de <function>filesize</function></title>
      <programlisting role="php">
<![CDATA[
<?php

// Exibe algo como: arquivo.txt: 1024 bytes

$filename = 'arquivo.txt';
echo $filename . ': ' . filesize($filename) . ' bytes';

?>
]]>
      </programlisting>
     </example>
    </para>
    <simpara>
     Veja também <function>file_exists</function>
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

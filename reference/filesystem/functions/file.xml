<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.3 Maintainer: ae Status: ready --><!-- CREDITS: rarruda -->
<!-- splitted from ./pt_BR/functions/filesystem.xml, last change in rev 1.5 -->
  <refentry id="function.file">
   <refnamediv>
    <refname>file</refname>
    <refpurpose>Le um arquivo inteiro para um array</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>array</type><methodname>file</methodname>
      <methodparam><type>string</type><parameter>filename</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>use_include_path</parameter></methodparam>
     </methodsynopsis>
    <para>
     Idêntico a <function>readfile</function>, exceto que
     <function>file</function> retorna o arquivo em um array. Cada
     elemento do array corresponde a uma linha no arquivo, inclusive
     com o caracter de nova linha.
    </para>
    <note>
     <para>
      Cada linha do array resultante terá os caracteres de fim de linha, então você
      precisa utilizar <function>trim</function> se não quiser esses
      caracteres presentes.
     </para>
    </note>
    &note.line-endings;
    <para>
     Você pode usar o segundo parametro opcional como "1", se voce
     deseja procurar o arquivo no <link
     linkend="ini.include-path">include_path</link> também.
    </para>
    <para>
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
// ler uma webpage para um array e o imprimir
$fcontents = file ('http://www.example.com/');
while (list ($line_num, $line) = each ($fcontents)) {
    echo "<b>Linha $line_num:</b>; ", htmlspecialchars ($line), "<br>\n";
}

// ler uma web paga para uma string
$fcontents = implode ('', file ('http://www.example.com/'));
?>
]]>
      </programlisting>
     </informalexample>
    </para>
    <note>
     <para>
      A partir do PHP 4.3.0, você pode utilizar <function>file_get_contents</function> para
      retornar o conteúdo de um arquivo como uma string binária (binary safe).
     </para>
    </note>
    &note.not-bin-safe;
    &tip.fopen-wrapper;
    <para>
     Veja também <function>readfile</function>,
     <function>fopen</function>, <function>fsockopen</function> e
     <function>popen</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.8 Maintainer: ae Status: ready --><!-- CREDITS: rarruda -->
<!-- splitted from ./pt_BR/functions/filesystem.xml, last change in rev 1.5 -->
  <refentry xml:id="function.flock" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>flock</refname>
    <refpurpose>Monitor de travamento de arquivos portátil</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>bool</type><methodname>flock</methodname>
      <methodparam><type>int</type><parameter>handle</parameter></methodparam>
      <methodparam><type>int</type><parameter>operation</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>&amp;wouldblock</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     O PHP suporta uma maneira portável de lock arquivos inteiros
     em uma advisory way (que significa que todos os programas acessando
     tem que usar o mesmo tipo de travamento ou não irá funcionar).
    </simpara>
    <simpara>
     <function>flock</function> opera em <parameter>fp</parameter>,
     que tem que ser um ponteiro de arquivo aberto com sucesso.
     <parameter>operacao</parameter> é um dos seguintes
     valores:
    </simpara>
    <para>
     <itemizedlist>
      <listitem>
       <simpara>
         Para obter um lock compartilhado (leitura), utilize
         <parameter>operation</parameter> como <constant>LOCK_SH</constant> (ou use 1 se a versão
         do PHP for anterior a 4.0.1).
       </simpara>
      </listitem>
      <listitem>
       <simpara>
         Para obter um lock exclusivo (gravação), utilize
         <parameter>operacao</parameter> como <constant>LOCK_EX</constant> (ou use 2 se a versão
         do PHP for anterior a 4.0.1).
       </simpara>
      </listitem>
      <listitem>
       <simpara>
         Para retirar um lock (compartilhado ou exclusivo), uyilize
         <parameter>operacao</parameter> como <constant>LOCK_UN</constant> (ou use 3 se a versão
         do PHP for anterior a 4.0.1).
       </simpara>
      </listitem>
      <listitem>
       <simpara>
         Se você não quer usar <function>flock</function> para bloquear
         enquanto travando, adicione <constant>LOCK_NB</constant> (4 se a versão
         do PHP for anterior a 4.0.1) a <parameter>operacao</parameter>.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    <simpara>
     <function>flock</function> permite a você fazer um simples
     modelo leitura/gravação (reader/writer) que pode ser usado em
     virtualmente todas as plataformas (incluindo a maior parte dos
     Unixes e até mesmo Windows). O terceiro argumento opcional é usado
     como &true; se a lock irá bloquear (EWOULDBLOCK errno condition).
    </simpara>
    <simpara>
      &return.success;
    </simpara>
    <para>
     <example>
      <title><function>flock</function> example</title>
      <programlisting role="php">
<![CDATA[
<?php

$fp = fopen("/tmp/lock.txt", "w+");

if (flock($fp, LOCK_EX)) { // faca um lock exclusivo
    fwrite($fp, "escrevemos algo aqui\n");
    flock($fp, LOCK_UN); // libera o lock
} else {
    echo "Não pude travar o arquivo !";
}

fclose($fp);

?>
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <para>
      Uma vez que <function>flock</function> requer um ponteiro de arquivo, você precisa
      utilizar um lock de arquivo especial para proteger i acessi a um arquivo ao qual você pretende
      truncar quando abrindo no modo de escrita (com um argumento "w" ou "w+" em
      <function>fopen</function>).
     </para>
    </note>
    <warning>
     <para>
      <function>flock</function> não funcionará em NFS ou em qualquer outro sistema de
      arquivos em rede. Verifique a documentação do seu sistema operacional para mais
      detalhes.
     </para>
     <para>
      Na maior parte dos sistemas operacionais <function>flock</function>
      é implementada no nível do processo. Quando utilizando um servidor
      com uma API de multiprocessamento (como ISAPI), você não pode confiar em
      <function>flock</function> para proteger os arquivos contra outros
      scripts PHP rodando em threads paralelas da mesma instância do servidor!
     </para>
     <para>
      <function>flock</function> não é suportado em sistemas de arquivos antiquados como a
      <literal>FAT</literal> e seus derivados, e sempre
      retornará &false; sob esses ambientes (especialmente para usuários do
      Windows 98).
     </para>
    </warning>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

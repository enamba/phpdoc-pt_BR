<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.2 Maintainer: rarruda Status: ready -->
<!-- splitted from ./pt_BR/functions/filesystem.xml, last change in rev 1.5 -->
<!-- last change to 'set-file-buffer' in en/ tree in rev 1.2 -->
  <refentry id="function.set-file-buffer">
   <refnamediv>
    <refname>set_file_buffer</refname>
    <refpurpose>
     Configura o buffer de um ponteiro de arquivo
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>int</type><methodname>set_file_buffer</methodname>
      <methodparam><type>int</type><parameter>fp</parameter></methodparam>
      <methodparam><type>int</type><parameter>buffer</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     A saída usando <function>fwrite</function> é normalmente 
     guardada em um buffer de 8K. Isto significa que se se tem 
     dois processos querendo gravar no mesmo stream de saída (output)
     (um arquivo), cada um é pausado depois de 8K de informações para
     deixar o outro processo escrever. <function>set_file_buffer</function>
     configura o buffer para operações de escrita no dado ponteiro de
     arquivo <parameter>fp</parameter> para o <parameter>buffer</parameter>
     em bytes. Se <parameter>buffer</parameter> é 0 então as operações
     de escrita não utilizarão o buffer. Isso garante que todas
     as gravações com <function>fwrite</function> são completadas
     antes que outros processos são possibilitados de escreverem
     para este stream de saída.
    </simpara>
    <simpara>
     Esta função retorna 0 em caso de sucesso, ou fim do arquivo (eof)
     se o pedido não puder ser honrado.
    </simpara>
    <para>
     O seguinte exemplo demonstra como usar 
     <function>set_file_buffer</function> para criar um stream
     sem usar o buffer.
     <example>
      <title>exemplo de <function>set_file_buffer</function></title>
      <programlisting role="php">
$fp=fopen($arquivo, "w");
if($fp){
  set_file_buffer($fp, 0);
  fputs($fp, $saida);
  fclose($fp);
}
      </programlisting>
     </example>
    </para>

    <simpara>
     Veja também <function>fopen</function> e <function>fwrite</function>.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

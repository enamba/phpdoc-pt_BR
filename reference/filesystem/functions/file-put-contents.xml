<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.11 Maintainer: narigone Status: ready -->
<refentry id="function.file-put-contents">
 <refnamediv>
  <refname>file_put_contents</refname>
  <refpurpose>Escreve uma string para um arquivo</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>file_put_contents</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>data</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter></methodparam>
   <methodparam choice="opt"><type>resource</type><parameter>context</parameter></methodparam>
  </methodsynopsis>
  <simpara>
   Idêntico à chamar <function>fopen</function>, <function>fwrite</function>,
   e <function>fclose</function> sucessivamente.
  </simpara>
  <para>
   Você também pode especificar o parâmetro <parameter>data</parameter> como um
   array (não multi-dimensional). Isso é equivalente à
   <literal>file_put_contents($filename, implode('', $array))</literal>.
  </para>
  <para>
   A partir do PHP 5.1.0, você deve também passar o recurso de uma stream para o
   parâmetro <parameter>data</parameter>. Como resultado, o buffer remanescente
   daquele stream será copiado para o arquivo especificado. Isso é similar à
   usar <function>stream_copy_to_stream</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>
       O nome do arquivo onde escrever os dados
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>data</parameter></term>
     <listitem>
      <para>
       Os dados a serem escritos; Pode ser uma <type>string</type>, um
       <type>array</type> ou um recurso <type>stream</type> (explicado acima).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       <parameter>flags</parameter> pode receber
       <constant>FILE_USE_INCLUDE_PATH</constant>,
       <constant>FILE_APPEND</constant> e/ou <constant>LOCK_EX</constant>
       (adquire um lock exclusivo), no entanto, a opção
       <constant>FILE_USE_INCLUDE_PATH</constant> deve ser usada
       com cuidado.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>context</parameter></term>
     <listitem>
      <para>
       Um recurso de contexto
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   A função retorna a quantidade de bytes que foi escrita no arquivo ou
   &false; em caso de falha.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.1.0</entry>
       <entry>
        Adicionado o suporte para <constant>LOCK_EX</constant> e a habilidade para passar
        como parâmetro um recurso para stream <parameter>data</parameter>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>


 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
  &note.context-support;
  &tip.fopen-wrapper;
 </refsect1>


 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>fopen</function></member>
    <member><function>fwrite</function></member>
    <member><function>file_get_contents</function></member>
    <member><function>stream_context_create</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.14 Maintainer: ae Status: ready --><!-- CREDITS: rarruda -->
<!-- splitted from ./pt_BR/functions/filesystem.xml, last change in rev 1.5 -->
  <refentry id="function.fread">
   <refnamediv>
    <refname>fread</refname>
    <refpurpose>Leitura binary-safe de arquivo</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>string</type><methodname>fread</methodname>
      <methodparam><type>resource</type><parameter>handle</parameter></methodparam>
      <methodparam><type>int</type><parameter>length</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     <function>fread</function> lê até
     <parameter>length</parameter> bytes do ponteiro de arquivo
     informado em <parameter>handle</parameter>. A leitura é interrompida quando
     <parameter>length</parameter> bytes foram lidos ou 
     o fim do arquivo (eof) foi alcançado, ou (para streams de rede) quando um
     pacote se torna disponível, o que ocorrer primeiro.
    </simpara>
    <para>
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
// ler o conteúdo do arquivo para uma string
$filename = "/usr/local/qualquer.txt";
$handle = fopen ($filename, "r");
$conteudo = fread ($handle, filesize ($filename));
fclose ($handle);
?>
]]>
      </programlisting>
     </informalexample>
    </para>
    <warning>
     <para>
      Em sistemas que diferenciam entre arquivos binários e texto
      (por exemplo Windows) o arquivo tem que ser aberto com 'b'
      incluído como parametro na função <function>fopen</function>.
     </para>
    </warning>
    <para>
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
$nomedoarquivo = "c:\\files\\figura.gif";
$handle = fopen ($nomedoarquivo, "rb");
$conteudo = fread ($handle, filesize ($filename));
fclose ($handle);
?>
]]>
      </programlisting>
     </informalexample>
    </para>

    <warning>
     <para>
      Quando lendo de streams de rede ou canais (pipes), como aqueles retornados pela
      leitura de <link linkend="features.remote-files">arquivos remotos</link> ou de
      <function>popen</function> e <function>proc_open</function>, a leitura
      irá parar depois que um pacote se torna disponível. Isto significa que você
      deve juntar os dados em blocos como demonstrado no exemplo seguinte.
     </para>
    </warning>
    <para>
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
$handle = fopen ("http://www.example.com/", "rb");
$conteudo = "";
do {
    $data = fread($handle, 8192);
    if (strlen($data) == 0) {
        break;
    }
    $conteudo .= $data;
} while(true);
fclose ($handle);
?>
]]>
      </programlisting>
     </informalexample>
    </para>
    <note>
     <para>
      O exemplo acima tem uma performance melhor que o jeito comum
      usando while(!<function>feof</function>), porque ele economiza o overhead
      de uma chamada de função por iteração.
     </para>
    </note>
    <note>
     <para>
      Se você quer apenas pegar o conteúdo de um arquivo para uma string, utilize
      <function>file_get_contents</function> que tem uma performance ainda melhor
      que o código acima.
     </para>
    </note>
    <simpara>
     Veja também <function>fwrite</function>, <function>fopen</function>,
     <function>fsockopen</function>, <function>popen</function>,
     <function>fgets</function>, <function>fgetss</function>,
     <function>fscanf</function>, <function>file</function> e
     <function>fpassthru</function>.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./pt_BR/functions/filesystem.xml, last change in rev 1.5 -->
<!-- last change to 'fgetcsv' in en/ tree in rev 1.2 -->
  <refentry id="function.fgetcsv">
   <refnamediv>
    <refname>fgetcsv</refname>
    <refpurpose>
     Ler uma linha do ponteiro de arquivos e parse por campos CSV
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>array</type><methodname>fgetcsv</methodname>
      <methodparam><type>int</type><parameter>fp</parameter></methodparam>
      <methodparam><type>int</type><parameter>comprimento</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>
        delimitador
       </parameter></methodparam>
     </methodsynopsis>
    <simpara>
     Similar à <function>fgets</function> exceto que
     <function>fgetcsv</function> parses a linha que lê por campos
     no formato <acronym>CSV</acronym> e retorna um vetor (array)
     contendo os campos lidos. O delimitador dos campos é a virgula,
     a menos que seja especificado com o terceiro parametro que é
     opcional.
    </simpara>
    <simpara>
     <parameter>Fp</parameter> tem que ser um ponteiro de arquivo
     válido para um arquivo aberto com sucesso por
     <function>fopen</function>, <function>popen</function>,
     ou <function>fsockopen</function>
    </simpara>
    <simpara>
     Comprimento tem que ser maior do que a maior linha a ser encontrada
     no arquivo CSV (incluindo caracteres de terminação de linha).
    </simpara>
    <simpara>
     <function>fgetcsv</function> retorna &false; ao encontrar um erro,
     incluindo fim de arquivo (eof).
    </simpara>
    <simpara>
     N.B. Uma linha em branco em um arquivo CSV será retornada como um
     vetor contendo um único campo nulo (&null;), e não será tratado
     como um erro.
    </simpara>
    <example>
     <title>
      exemplo de <function>fgetcsv</function> - Ler e imprimir os conteúdos
      inteiros de um arquivo CSV.
     </title>
     <programlisting role="php">
$row = 1;
$fp = fopen ("test.csv","r");
while ($data = fgetcsv ($fp, 1000, ",")) {
    $num = count ($data);
    print "&lt;p&gt; $num campos na linha $row: &lt;br&gt;";
    $row++;
    for ($c=0; $c&lt;$num; $c++) {
        print $data[$c] . "&lt;br&gt;";
    }
}
fclose ($fp);
     </programlisting>
    </example>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

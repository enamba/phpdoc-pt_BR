<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.29 Maintainer: diogo Status: ready --><!-- CREDITS: ae -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.parse-ini-file">
 <refnamediv>
  <refname>parse_ini_file</refname>
  <refpurpose>Interpreta um arquivo de configuração</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>parse_ini_file</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>process_sections</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>parse_ini_file</function> carrega o arquivo INI
   especificado em <parameter>filename</parameter> e retorna
   as configurações contidas nele em um array associativo.
  </para>
  <para>
   A estrutura do arquivo INI é a mesma do &php.ini;.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>
       O nome do arquivo INI sendo interpretado.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>process_sections</parameter></term>
     <listitem>
      <para>
	   Definindo o último parâmetro <parameter>process_sections</parameter>
	   como &true;, você recupera um array multidimensional com o nome
	   das seções e configurações inclusas. O padrão para
	   <parameter>process_sections</parameter> é &false;
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   As configurações são retornadas como um <type>array</type> associativo.
  </para>
 </refsect1>

 
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.2.4</entry>
       <entry>
	    Chaves e nomes de seção que consistem de números, agora são interpretados
		como <link linkend="language.types.integer">inteiros</link>, de forma que
		números iniciados por 0 são interpretados como octais e números iniciados
		por 0x são interpretados como hexadecimais.
       </entry>
      </row>
      <row>
       <entry>5.0.0</entry>
       <entry>
	    Valores envolvidos em aspas duplas podem conter novas linhas.
       </entry>
      </row>
      <row>
       <entry>4.2.1</entry>
       <entry>
	    Esta função agora é afetada por &safemode; e
		<link linkend="ini.open-basedir">open_basedir</link>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Conteúdo de <filename>sample.ini</filename></title>
    <programlisting>
<![CDATA[
; Este é um arquivo de configuração de exemplo
; Comentários iniciam com ';', como no php.ini

[primeira_secao]
um = 1
cinco = 5
animal = PASSARO

[segunda_secao]
path = "/usr/local/bin"
URL = "http://www.example.com/~username"
]]>
    </programlisting>
   </example>
   <example>
    <title>Exemplo de <function>parse_ini_file</function></title>
    <para>
     <link linkend="language.constants">Constantes</link> também podem ser
	 interpretadas no arquivo INI, então se você definir uma constante como
	 um valor INI antes de executar <function>parse_ini_file</function>, ela
	 será integrada ao resultado. Somente valores INI são avaliados. Por exemplo:
    </para>
    <programlisting role="php">
<![CDATA[
<?php

define('PASSARO', 'Pássaro Dodo');

// Interpreta sem as seções
$ini_array = parse_ini_file("sample.ini");
print_r($ini_array);

// Interpreta com as seções
$ini_array = parse_ini_file("sample.ini", true);
print_r($ini_array);

?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Array
(
    [um] => 1
    [cinco] => 5
    [animal] => Pássaro Dodo
    [path] => /usr/local/bin
    [URL] => http://www.example.com/~username
)
Array
(
    [primeira_secao] => Array
        (
            [um] => 1
            [cinco] => 5
            [animal] = Dodo bird
        )

    [segunda_secao] => Array
        (
            [path] => /usr/local/bin
            [URL] => http://www.example.com/~username
        )

)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Essa função não tem nada a ver com o arquivo &php.ini;.
	Ele já está processado no momento em que você executa seu script.
	Esta função pode ser usada para ler os arquivos de configuração
	da sua própria aplicação.
   </para>
  </note>
  <note>
   <para>
    Se um valor no arquivo INI tiver algum caractere não
	alfanumérico, ele precisará ser envolvido em aspas duplas (").
   </para>
  </note>
  <note>
   <simpara>
    Existem algumas palavras reservadas que não podem ser usadas como
	chaves em arquivos INI. Elas incluem: null, yes, no, true e false.
	Valores null, no e false retornam como "", yes e true retormam como "1".
	Os caracteres <literal>{}|&amp;~![()"</literal> não podem ser usados em
	lugar algum na chave e têm significado especial no valor.
   </simpara>
  </note>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

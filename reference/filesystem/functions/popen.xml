<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.9 Maintainer: ae Status: ready --><!-- CREDITS: rarruda -->
<!-- splitted from ./pt_BR/functions/filesystem.xml, last change in rev 1.5 -->
  <refentry id="function.popen">
   <refnamediv>
    <refname>popen</refname>
    <refpurpose>Abre um processo como ponteiro de arquivo</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>resource</type><methodname>popen</methodname>
      <methodparam><type>string</type><parameter>command</parameter></methodparam>
      <methodparam><type>string</type><parameter>mode</parameter></methodparam>
     </methodsynopsis>
    <para>
     Abre uma pipe para um processo executado ao se dar um fork
     para o comando dado por command.
    </para>
    <para>
     Retorna um ponteiro de arquivo idêntico ao retornado por
     <function>fopen</function>, exceto que ele é unidirecional
     (somente pode ser usado para leitura ou gravação) e tem que ser
     fechado com pclose. Este ponteiro pode ser usado com
     <function>fgets</function>, <function>fgetss</function> e
     <function>fputs</function>.
    </para>
    <para>
     Caso um erro ocorra retorna &false;.
    </para>
    <note>
     <para>
      Se você está procurando por suporte bidirecional (via dupla), utilize
      <function>proc_open</function>.
     </para>
    </note>
    <para>
     <example>
      <title>Exemplo de <function>popen</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$handle = popen ("/bin/ls", "r");
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Se o comando a ser executado não for encontrado um recurso
     válido será retornado. Isso pode parecer esquisito, mas tem sentido:
     permite que você acesse a mensagem de erro retornado pelo sistema operacional.
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
error_reporting(E_ALL);

/* Add redirection so we can get stderr. */
$handle = popen('/path/to/spooge 2>&1', 'r');
echo "'$handle'; " . gettype($handle) . "\n";
$read = fread($handle, 2096);
echo $read;
pclose($handle);
?>
]]>
      </programlisting>
     </informalexample>
    </para>
    <para>
     Veja também <function>pclose</function>, <function>fopen</function>
     e <function>proc_open</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

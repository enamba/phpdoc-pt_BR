<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.25 Maintainer: ae Status: ready -->

 <appendix id="reserved">
  <title>Palavras reservadas do PHP</title>
  <para>
   Esta &eacute; uma lista de identificadores predefinidos do PHP. Nenhum
   dos identificadores listados aqui pode ser utilizado como seus identificadores
   nos scripts. Esta lista inclui palavras-chave e vari&aacute;veis predefinidas,
   constantes e nomes de classes. Esta lista ainda n&atilde;o est&aacute;
   completa.
  </para>

  <sect1 id="reserved.keywords">
  <title>Lista de palavras-chave (keywords)</title>
   <simpara>
    Estas palavras tem um significado especial no PHP. Algumas delas representam coisas
    que parecem fun&ccedil;&otilde;es, algumas parecem constantes mas na verdade n&atilde;o o s&atilde;o
    realmente: elas s&atilde;o construtores de linguagem. Voc&ecirc; n&atilde;o pode usar nenhuma
    das seguintes palavras como constantes, nomes de classes ou de fun&ccedil;&otilde;es.
    Utilizar como nome de vari&aacute;veis geralmente n&atilde;o causa erros, mas pode levar a confus&atilde;o.
   </simpara>

   <table>
    <title>Palavras-chave do PHP</title>
    <tgroup cols="4">
     <tbody>
      <row>
       <entry>
        <link linkend="language.operators.logical">and</link>
       </entry>
       <entry>
        <link linkend="language.operators.logical">or</link>
       </entry>
       <entry>
        <link linkend="language.operators.logical">xor</link>
       </entry>
       <entry>
        __FILE__
       </entry>
      </row>
      <row>
       <entry>
        __LINE__
       </entry>
       <entry>
        <function>array</function>
       </entry>
       <entry>
        <link linkend="control-structures.foreach">as</link>
       </entry>
       <entry>
        <link linkend="control-structures.break">break</link>
       </entry>
       <entry>
        <link linkend="control-structures.switch">case</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="functions.old-syntax">cfunction</link>
       </entry>
       <entry>
        <link linkend="keyword.class">class</link>
       </entry>
       <entry>
        const
       </entry>
       <entry>
        <link linkend="control-structures.continue">continue</link>
       </entry>
       <entry>
        <link linkend="control-structures.declare">declare</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="control-structures.switch">default</link>
       </entry>
       <entry>
        <function>die</function>
       </entry>
       <entry>
        <link linkend="control-structures.do.while">do</link>
       </entry>
       <entry>
        <function>echo</function>
       </entry>
       <entry>
        <link linkend="control-structures.else">else</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="control-structures.elseif">elseif</link>
       </entry>
       <entry>
        <function>empty</function>
       </entry>
       <entry>
        <link linkend="control-structures.declare">enddeclare</link>
       </entry>
       <entry>
        <link linkend="control-structures.alternative-syntax">endfor</link>
       </entry>
       <entry>
        <link linkend="control-structures.alternative-syntax">endforeach</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="control-structures.alternative-syntax">endif</link>
       </entry>
       <entry>
        <link linkend="control-structures.alternative-syntax">endswitch</link>
       </entry>
       <entry>
        <link linkend="control-structures.alternative-syntax">endwhile</link>
       </entry>
       <entry>
        <link linkend="function.eval">eval</link>
       </entry>
       <entry>
        <function>exit</function>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="keyword.class">extends</link>
       </entry>
       <entry>
        <link linkend="control-structures.for">for</link>
       </entry>
       <entry>
        <link linkend="control-structures.foreach">foreach</link>
       </entry>
       <entry>
        <link linkend="functions.user-defined">function</link>
       </entry>
       <entry>
        <link linkend="language.variables.scope">global</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="control-structures.if">if</link>
       </entry>
       <entry>
        <function>include</function>
       </entry>
       <entry>
        <function>include_once</function>
       </entry>
       <entry>
        <function>isset</function>
       </entry>
       <entry>
        <function>list</function>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="keyword.class">new</link>
       </entry>
       <entry>
        <link linkend="functions.old-syntax">old_function</link>
       </entry>
       <entry>
        <function>print</function>
       </entry>
       <entry>
        <function>require</function>
       </entry>
       <entry>
        <function>require_once</function>
       </entry>
      </row>
      <row>
       <entry>
        <function>return</function>
       </entry>
       <entry>
        <link linkend="language.variables.scope">static</link>
       </entry>
       <entry>
        <link linkend="control-structures.switch">switch</link>
       </entry>
       <entry>
        <function>unset</function>
       </entry>
       <entry>
        use
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="keyword.class">var</link>
       </entry>
       <entry>
        <link linkend="control-structures.while">while</link>
       </entry>
       <entry>
        <constant>__FUNCTION__</constant>
       </entry>
       <entry>
        <constant>__CLASS__</constant>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </sect1>

  <sect1 id="reserved.variables">
   <title>Variáveis predefinidas</title>

   <sect2 id="reserved.variables.server">
    <title>Vari&aacute;veis do servidor: <varname>$_SERVER</varname></title>
    <note>
     <simpara>
      Introduzida na vers&atilde;o 4.1.0. Em vers&otilde;es anteriores, use
      <varname>$HTTP_SERVER_VARS</varname>.
     </simpara>
    </note>

    <simpara>
     <varname>$_SERVER</varname> &eacute; um array contendo informa&ccedil;&otilde;es
     como headers, caminhos e localiza&ccedil;&otilde;es do script. Os itens deste
     array s&atilde;o criados pelo servidor web. N&atilde;o h&aacute; garantias que 
     todos os servidores web geram todas elas: alguns servidores talvez omitam algumas ou
     geram outras que n&atilde;o est&atilde;o listadas aqui. Mesmo assim, um grande n&uacute;mero
     dessas vari&aacute;veis est&atilde;o de acordo com a <ulink
     url="&url.cgispec;">especifica&ccedil;&atilde;o CGI 1.1</ulink>, ent&atilde;o voc&ecirc; pode
     esperar encontr&aacute;-las nesse array.
    </simpara>

    <simpara>
     Esta &eacute; uma vari&aacute;vel 'superglobal', ou automaticamente global. Isto
     significa que ela &eacute; dispon&iacute;vel em todos os escopos (n&iacute;veis) de um
     script. Voc&ecirc; n&atilde;o precisa fazer um <command>global
     $_SERVER;</command> para pode acess&aacute;-la dentro de fun&ccedil;&otilde;es ou m&eacute;todos, como
     era necess&aacute;rio com <varname>$HTTP_SERVER_VARS</varname>.
    </simpara>

    <simpara>
     <varname>$HTTP_SERVER_VARS</varname> cont&eacute;m a mesmas
     informa&ccedil;&otilde;es, mas ela n&atilde;o &eacute; uma superglobal.(Note que
     <varname>$HTTP_SERVER_VARS</varname> e <varname>$_SERVER</varname>
     s&atilde;o vari&aacute;veis diferentes como tamb&eacute;m o PHP as manipula diferentemente)
    </simpara>

    <simpara>
     Se a diretiva <link
     linkend="ini.register-globals">register_globals</link>
     est&aacute; ativa, ent&atilde;o essas vari&aacute;veis tornam-se dispon&iacute;veis no
     escopo global do script (por exemplo, separados dos arrays
     <varname>$_SERVER</varname> e <varname>$HTTP_SERVER_VARS</varname>.
     Para maiores informa&ccedil;&otilde;es, veja o cap&iacute;tulo de seguran&ccedil;a entitulado
     <link linkend="security.registerglobals">Utilizando registradores
     globais</link>. Estas vari&aacute;veis globais individuais n&atilde;o s&atilde;o superglobais.
    </simpara>

    <simpara>
     Voc&ecirc; poder&aacute; ou n&atilde;o encontrar qualquer um dos seguintes elementos dentro de
     $_SERVER. Note que poucos (ou nenhum) deles est&atilde;o dispon&iacute;veis (ou
     n&atilde;o ter&atilde;o qualquer sentido) se voc&ecirc; estiver rodando o PHP na linha de comando.
    </simpara>

    <para>
     <variablelist>
      <varlistentry>
       <term>'<varname>PHP_SELF</varname>'</term>
       <listitem>
        <simpara>
         O nome do arquivo do script atualmente em uso, relativo ao
         document root. Por exemplo,
         <varname>$_SERVER['PHP_SELF']</varname> em um script com o
         endere&ccedil;o <filename>http://example.com/test.php/foo.bar</filename>
         pode ser <filename>/test.php/foo.bar</filename>.
        </simpara>
        <simpara>
         Se estiver rodando o PHP em linha de comando, esta vari&aacute;vel
         n&atilde;o est&aacute; dispon&iacute;vel.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term>'<varname>argv</varname>'</term>
       <listitem>
        <simpara>
         Array de argumentos passado para o script. Quando o script
         &eacute; executado na linha de comando, isto permite um acesso aos par&acirc;metros
         de linha de comando no estilo do C. Quando chamado via m&eacute;todo GET, ele
         conter&aacute; a query string.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term>'<varname>argc</varname>'</term>
       <listitem>
        <simpara>
         Cont&eacute;m o n&uacute;mero de par&acirc;metros da linha de comando passados para o
         script (se executando da linha de comando).
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term>'<varname>GATEWAY_INTERFACE</varname>'</term>
       <listitem>
        <simpara>
         O n&uacute;mero de revis&atilde;o da especifica&ccedil;&atilde;o CGI que o servidor est&aacute; utilizando,
         por exemplo : '<literal>CGI/1.1</literal>'.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term>'<varname>SERVER_NAME</varname>'</term>
       <listitem>
        <simpara>
         O nome host do servidor onde o script atual &eacute;
         executado. Se o script est&aacute; rodando em um host virtual, este
         ser&aacute; o valor definido para aquele host virtual.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term>'<varname>SERVER_SOFTWARE</varname>'</term>
       <listitem>
        <simpara>
         A string de identifica&ccedil;&atilde;o do servidor, fornecida nos headers quando
         respondendo a requests.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term>'<varname>SERVER_PROTOCOL</varname>'</term>
       <listitem>
        <simpara>
         Nome e n&uacute;mero de revis&atilde;o do protocolo de informa&ccedil;&atilde;o pelo qual a
         p&aacute;gina foi requerida, por exemplo '<literal>HTTP/1.0</literal>';
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term>'<varname>REQUEST_METHOD</varname>'</term>
       <listitem>
        <simpara>
         Cont&eacute;m o m&eacute;todo de request utilizando para acessar a p&aacute;gina. Geralmente '<literal>GET</literal>',
         '<literal>HEAD</literal>', '<literal>POST</literal>' ou '<literal>PUT</literal>'.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term>'<varname>QUERY_STRING</varname>'</term>
       <listitem>
        <simpara>
         A query string (string de solicita&ccedil;&atilde;o), se houver, pela qual a p&aacute;gina foi acessada.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term>'<varname>DOCUMENT_ROOT</varname>'</term>
       <listitem>
        <simpara>
         O diret&oacute;rio raiz sob onde o script atual &eacute;
         executado, como definido no arquivos de configura&ccedil;&atilde;o do servidor.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term>'<varname>HTTP_ACCEPT</varname>'</term>
       <listitem>
        <simpara>
         O conte&uacute;do do header <literal>Accept:</literal> da
         requisi&ccedil;&atilde;o atual, se houver.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term>'<varname>HTTP_ACCEPT_CHARSET</varname>'</term>
       <listitem>
        <simpara>
         O conte&uacute;do do header <literal>Accept-Charset:</literal>
         da requisi&ccedil;&atilde;o atual, se houver. Exemplo:
         '<literal>iso-8859-1,*,utf-8</literal>'.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term>'<varname>HTTP_ACCEPT_ENCODING</varname>'</term>
       <listitem>
        <simpara>
         O conte&uacute;do do header <literal>Accept-Encoding:</literal>
         da requisi&ccedil;&atilde;o atual, se houver. Exemplo: '<literal>gzip</literal>'.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term>'<varname>HTTP_ACCEPT_LANGUAGE</varname>'</term>
       <listitem>
        <simpara>
         O conte&uacute;do do header <literal>Accept-Language:</literal>
         da requisi&ccedil;&atilde;o atual, se houver. Exemplo '<literal>en</literal>'.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term>'<varname>HTTP_CONNECTION</varname>'</term>
       <listitem>
        <simpara>
         O conte&uacute;do do header <literal>Connection:</literal> da
         requisi&ccedil;&atilde;o atual, se houver. Exemplo: '<literal>Keep-Alive</literal>'.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term>'<varname>HTTP_HOST</varname>'</term>
       <listitem>
        <simpara>
         O conte&uacute;do do header <literal>Host:</literal> da
         requisi&ccedil;&atilde;o atual, se houver.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term>'<varname>HTTP_REFERER</varname>'</term>
       <listitem>
        <simpara>
         O endere&ccedil;o da p&aacute;gina (se houver) atrav&eacute;s da qual o agente do
         usu&aacute;rio acessou a p&aacute;gina atual. Essa diretiva &eacute; informada pelo agente do usu&aacute;rio. Nem
         todos os browsers geram esse header, e alguns ainda possuem a habilidade
         de modificar o conte&uacute;do do <varname>HTTP_REFERER</varname> como recurso. Em
         poucas palavras, n&atilde;o &eacute; confi&aacute;vel.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term>'<varname>HTTP_USER_AGENT</varname>'</term>
       <listitem>
        <simpara>
         O conte&uacute;do do header <literal>User_Agent:</literal> da
         requisi&ccedil;&atilde;o atual, se houver. &Eacute; uma string
         denotando o agente de usu&aacute;rio pelo qual a p&aacute;gina &eacute; acessada. Um
         exemplo t&iacute;pico &eacute;: <computeroutput>Mozilla/4.5 [en] (X11; U;
         Linux 2.2.9 i586)</computeroutput>. Al&eacute;m de outras coisas, voc&ecirc;
         pode utilizar este valor com <function>get_browser</function> para
         personalizar a gera&ccedil;&atilde;o de suas p&aacute;ginas para as capacidades do agente do
         usu&aacute;rio.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term>'<varname>REMOTE_ADDR</varname>'</term>
       <listitem>
        <simpara>
         O endere&ccedil;o IP de onde o usu&aacute;rio est&aacute; visualizado a p&aacute;gina
         atual.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term>'<varname>REMOTE_PORT</varname>'</term>
       <listitem>
        <simpara>
         A porta TCP na m&aacute;quina do usu&aacute;rio utilizada para comunica&ccedil;&atilde;o com
         o servidor web.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term>'<varname>SCRIPT_FILENAME</varname>'</term>
       <listitem>
        <simpara>
         O caminho absoluto o script atualmente em execu&ccedil;&atilde;o.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term>'<varname>SERVER_ADMIN</varname>'</term>
       <listitem>
        <simpara>
         O valor fornecido pela diretiva SERVER_ADMIN (do Apache) no
         arquivo de configura&ccedil;&atilde;o do servidor. Se o script est&aacute; sendo executado
         em um host virtual, este ser&aacute; os valores definidos para aquele 
         host virtual.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term>'<varname>SERVER_PORT</varname>'</term>
       <listitem>
        <simpara>
         A porta na m&aacute;quina servidora utilizada pelo servidor web
         para comunica&ccedil;&atilde;o. Como default, este valor &eacute; '<literal>80</literal>'.
         Utilizando SSL, entretanto, mudar&aacute; esse valor para a porta de comunica&ccedil;&atilde;o
         segura HTTP.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term>'<varname>SERVER_SIGNATURE</varname>'</term>
       <listitem>
        <simpara>
         String contendo a vers&atilde;o do servidor e nome do host virtual
         que &eacute; adicionado &agrave;s p&aacute;ginas geradas no servidor, se ativo.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term>'<varname>PATH_TRANSLATED</varname>'</term>
       <listitem>
        <simpara>
         O caminho real do script relativo ao sistema de arquivos
         (n&atilde;o o document root), depois realizou todos os mapeamentos
         de caminhos (virtual-to-real).
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term>'<varname>SCRIPT_NAME</varname>'</term>
       <listitem>
        <simpara>
         Cont&eacute;m o caminho completo do script atual. &Uacute;til para p&aacute;ginas
         que precisam apontar para elas mesmas (dinamicamente).
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term>'<varname>REQUEST_URI</varname>'</term>
       <listitem>
        <simpara>
         O URI fornecido para acessar a p&aacute;gina atual, por
         exemplo, '<literal>/index.html</literal>'.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term>'<varname>PHP_AUTH_USER</varname>'</term>
       <listitem>
        <simpara>
         Quando executando sob o Apache como m&oacute;dulo e fazendo autentica&ccedil;&agrave;o HTTP, esta
         vari&aacute;vel estar&aacute; definida com o username fornecido pelo usu&aacute;rio.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term>'<varname>PHP_AUTH_PW</varname>'</term>
       <listitem>
        <simpara>
         Quando executando sob o Apache como m&oacute;dulo e fazendo autentica&ccedil;&agrave;o HTTP, esta
         vari&aacute;vel estar&aacute; definida com a senha fornecida pelo usu&aacute;rio.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term>'<varname>PHP_AUTH_TYPE</varname>'</term>
       <listitem>
        <simpara>
         Quando executando sob o Apache como m&oacute;dulo e fazendo autentica&ccedil;&agrave;o HTTP, esta
         vari&aacute;vel estar&aacute; definida com o tipo de autentica&ccedil;&atilde;o utilizado.
        </simpara>
       </listitem>
      </varlistentry>

     </variablelist>
    </para>

   </sect2>

   <sect2 id="reserved.variables.environment">
    <title>Vari&aacute;veis de ambiente: <varname>$_ENV</varname></title>

    <note>
     <simpara>
      Introduzida na vers&atilde;o 4.1.0. Em vers&otilde;es anteriores, utilize
      <varname>$HTTP_ENV_VARS</varname>.
     </simpara>
    </note>

    <simpara>
     Estas vari&aacute;veis s&atilde;o importadas dentro no espa&ccedil;o global do PHP do
     ambiente sob qual o interpretador do PHP est&aacute; rodando. Muitos s&atilde;o
     s&atilde;o criados no shell (terminal) sob o qual o PHP &eacute; executado e sistemas
     diferentes normalmente utilizam v&aacute;rios sabores de shells, e
     uma lista definitiva &eacute; imposs&iacute;vel. Verifique a documenta&ccedil;&atilde;o
     de sua shell para a lista de vari&aacute;veis ambiente definidas.
    </simpara>

    <simpara>
     Outras vari&aacute;veis ambiente incluem as vari&aacute;veis CGI, informadas
     aqui independente do PHP estar rodando como um m&oacute;dulo do servidor ou
     como processador CGI.
    </simpara>

    <simpara>
     Esta &eacute; uma vari&aacute;vel 'superglobal', ou automaticamente global. Isto
     significa que ela &eacute; dispon&iacute;vel em todos os escopos (n&iacute;veis) de um
     script. Voc&ecirc; n&atilde;o precisa fazer um <command>global
     $_ENV;</command> para pode acess&aacute;-la dentro de fun&ccedil;&otilde;es ou m&eacute;todos, como
     era necess&aacute;rio com <varname>$HTTP_ENV_VARS</varname>.
    </simpara>

    <simpara>
     <varname>$HTTP_ENV_VARS</varname> cont&eacute;m a mesma
     informa&ccedil;&atilde;o, mas n&atilde;o &eacute; uma superglobal. (Note que
     <varname>HTTP_ENV_VARS</varname> e <varname>$_ENV</varname>
     s&atilde;o vari&aacute;veis diferentes como tamb&eacute;m o PHP as manipula diferentemente)
    </simpara>

    <simpara>
     Se a diretiva <link
     linkend="ini.register-globals">register_globals</link>
     est&aacute; ativa, ent&atilde;o essas vari&aacute;veis tornam-se dispon&iacute;veis no
     escopo global do script (por exemplo, separados dos arrays
     <varname>$_ENV</varname> e <varname>$HTTP_ENV_VARS</varname>.
     Para maiores informa&ccedil;&otilde;es, veja o cap&iacute;tulo de seguran&ccedil;a entitulado
     <link linkend="security.registerglobals">Utilizando registradores
     globais</link>. Estas vari&aacute;veis globais individuais n&atilde;o s&atilde;o superglobais.
    </simpara>
   </sect2>

   <sect2 id="reserved.variables.cookies">
    <title>Cookies HTTP: <varname>$_COOKIE</varname></title>

    <note>
     <simpara>
     Introduzida na vers&atilde;o 4.1.0. Em vers&otilde;es anteriores, utilize
      <varname>$HTTP_COOKIE_VARS</varname>.
     </simpara>
    </note>

    <simpara>
     Cont&eacute;m um array associativo de vari&aacute;veis passas para o script atual
     atrav&eacute;s de cookies HTTP.
    </simpara>

    <simpara>
     Esta &eacute; uma vari&aacute;vel 'superglobal', ou automaticamente global. Isto
     significa que ela &eacute; dispon&iacute;vel em todos os escopos (n&iacute;veis) de um
     script. Voc&ecirc; n&atilde;o precisa fazer um <command>global
     $_COOKIE;</command> para pode acess&aacute;-la dentro de fun&ccedil;&otilde;es ou m&eacute;todos, como
     era necess&aacute;rio com <varname>$HTTP_COOKIE_VARS</varname>.
    </simpara>

    <simpara>
     <varname>$HTTP_COOKIE_VARS</varname> cont&eacute;m as mesmas
     informa&ccedil;&otilde;es, mas n&atilde;o &eacute; uma superglobal. (Note que
     <varname>HTTP_COOKIE_VARS</varname> e <varname>$_COOKIE</varname>
     s&atilde;o vari&aacute;veis diferentes como tamb&eacute;m o PHP as manipula diferentemente)
    </simpara>

    <simpara>
     Se a diretiva <link
     linkend="ini.register-globals">register_globals</link>
     est&aacute; ativa, ent&atilde;o essas vari&aacute;veis tornam-se dispon&iacute;veis no
     escopo global do script (por exemplo, separados dos arrays
     <varname>$_COOKIE</varname> e <varname>$HTTP_COOKIE_VARS</varname>.
     Para maiores informa&ccedil;&otilde;es, veja o cap&iacute;tulo de seguran&ccedil;a entitulado
     <link linkend="security.registerglobals">Utilizando registradores
     globais</link>. Estas vari&aacute;veis globais individuais n&atilde;o s&atilde;o superglobais.
    </simpara>
   </sect2>

   <sect2 id="reserved.variables.get">
    <title>Vari&aacute;veis HTTP GET: <varname>$_GET</varname></title>

    <note>
     <simpara>
      Introduzida na vers&atilde;o 4.1.0. Em vers&otilde;es anteriores, use
      <varname>$HTTP_GET_VARS</varname>.
     </simpara>
    </note>

    <simpara>
     Cont&eacute;m um array associativo de vari&aacute;veis passadas para o script atual
     atrav&eacute;s do m&eacute;todo HTTP GET.
    </simpara>

    <simpara>
     Esta &eacute; uma vari&aacute;vel 'superglobal', ou automaticamente global. Isto
     significa que ela &eacute; dispon&iacute;vel em todos os escopos (n&iacute;veis) de um
     script. Voc&ecirc; n&atilde;o precisa fazer um <command>global
     $_GET;</command> para pode acess&aacute;-la dentro de fun&ccedil;&otilde;es ou m&eacute;todos, como
     era necess&aacute;rio com <varname>$HTTP_GET_VARS</varname>.
    </simpara>

    <simpara>
     <varname>$HTTP_GET_VARS</varname> cont&eacute;m as mesmas
     informa&ccedil;&otilde;es, mas n&atilde;o &eacute; uma superglobal. (Note que
     <varname>HTTP_GET_VARS</varname> e <varname>$_GET</varname>
     s&atilde;o vari&aacute;veis diferentes como tamb&eacute;m o PHP as manipula diferentemente)
    </simpara>

    <simpara>
     Se a diretiva <link
     linkend="ini.register-globals">register_globals</link>
     est&aacute; ativa, ent&atilde;o essas vari&aacute;veis tornam-se dispon&iacute;veis no
     escopo global do script (por exemplo, separados dos arrays
     <varname>$_GET</varname> e <varname>$HTTP_GET_VARS</varname>.
     Para maiores informa&ccedil;&otilde;es, veja o cap&iacute;tulo de seguran&ccedil;a entitulado
     <link linkend="security.registerglobals">Utilizando registradores
     globais</link>. Estas vari&aacute;veis globais individuais n&atilde;o s&atilde;o superglobais.
    </simpara>
   </sect2>

   <sect2 id="reserved.variables.post">
    <title>Variaveis HTTP POST: <varname>$_POST</varname></title>

    <note>
     <simpara>
      Introduzida na vers&atilde;o 4.1.0. Em vers&otilde;es anteriores, use
      <varname>$HTTP_POST_VARS</varname>.
     </simpara>
    </note>

    <simpara>
     Cont&eacute;m um array associativo de vari&aacute;veis passadas para o script atual
     atrav&eacute;s do m&eacute;todo HTTP POST.
    </simpara>

    <simpara>
     Esta &eacute; uma vari&aacute;vel 'superglobal', ou automaticamente global. Isto
     siginifica que ela &eacute; dispon&iacute;vel em todos os escopos (n&iacute;veis) de um
     script. Voc&ecirc; n&atilde;o precisa fazer um <command>global
     $_POST;</command> para pode acess&aacute;-la dentro de fun&ccedil;&otilde;es ou m&eacute;todos, como
     era necess&aacute;rio com <varname>$HTTP_POST_VARS</varname>.
    </simpara>

    <simpara>
     <varname>$HTTP_POST_VARS</varname> cont&eacute;m as mesmas
     informa&ccedil;&otilde;es, mas n&atilde;o &eacute; uma superglobal. (Note que
     <varname>HTTP_POST_VARS</varname> e <varname>$_POST</varname>
     s&atilde;o vari&aacute;veis diferentes como tamb&eacute;m o PHP as manipula diferentemente)
    </simpara>

    <simpara>
     Se a diretiva <link
     linkend="ini.register-globals">register_globals</link>
     est&aacute; ativa, ent&atilde;o essas vari&aacute;veis tornam-se dispon&iacute;veis no
     escopo global do script (por exemplo, separados dos arrays
     <varname>$_POST</varname> e <varname>$HTTP_POST_VARS</varname>.
     Para maiores informa&ccedil;&otilde;es, veja o cap&iacute;tulo de seguran&ccedil;a entitulado
     <link linkend="security.registerglobals">Utilizando registradores
     globais</link>. Estas vari&aacute;veis globais individuais n&atilde;o s&atilde;o superglobais.
    </simpara>
   </sect2>

   <sect2 id="reserved.variables.files">
    <title>Vari&aacute;veis de upload de arquivos HTTP: <varname>$_FILES</varname></title>

    <note>
     <simpara>
      Introduzida na vers&atilde;o 4.1.0. Em vers&otilde;es anteriores, use
      <varname>$HTTP_POST_FILES</varname>.
     </simpara>
    </note>

    <simpara>
     Cont&eacute;m um array associativo dos itens carregador no script atual
     atrav&eacute;s do m&eacute;todo HTTP POST.
    </simpara>

    <simpara>
     Esta &eacute; uma vari&aacute;vel 'superglobal', ou automaticamente global. Isto
     significa que ela &eacute; dispon&iacute;vel em todos os escopos (n&iacute;veis) de um
     script. Voc&ecirc; n&atilde;o precisa fazer um <command>global
     $_FILES;</command> para pode acess&aacute;-la dentro de fun&ccedil;&otilde;es ou m&eacute;todos, como
     era necess&aacute;rio com <varname>$HTTP_FILES_VARS</varname>.
    </simpara>

    <simpara>
     <varname>$HTTP_POST_FILES</varname> cont&eacute;m as mesmas
     informa&ccedil;&otilde;es, mas n&atilde;o &eacute; uma superglobal.
    </simpara>

    <simpara>
     Se a diretiva <link
     linkend="ini.register-globals">register_globals</link>
     est&aacute; ativa, ent&atilde;o essas vari&aacute;veis tornam-se dispon&iacute;veis no
     escopo global do script (por exemplo, separados dos arrays
     <varname>$_FILES</varname> e <varname>$HTTP_POST_FILES</varname>.
     Para maiores informa&ccedil;&otilde;es, veja o cap&iacute;tulo de seguran&ccedil;a entitulado
     <link linkend="security.registerglobals">Utilizando registradores
     globais</link>. Estas vari&aacute;veis globais individuais n&atilde;o s&atilde;o superglobais.
    </simpara>
   </sect2>

   <sect2 id="reserved.variables.request">
    <title>Vari&aacute;veis da requisi&ccedil;&atilde;o: <varname>$_REQUEST</varname></title>

    <note>
     <simpara>
      Introduzida na vers&atilde;o 4.1.0. N&atilde;o h&aacute; array equivalente em vers&otilde;es
      anteriores.
     </simpara>
    </note>

    <simpara>
     Cont&eacute;m um array associativo com os conte&uacute;dos de
     <varname>$_GET</varname>, <varname>$_POST</varname>,
     <varname>$_COOKIE</varname> e <varname>$_FILES</varname>.
    </simpara>

    <simpara>
     Esta &eacute; uma vari&aacute;vel 'superglobal', ou automaticamente global. Isto
     significa que ela &eacute; dispon&iacute;vel em todos os escopos (n&iacute;veis) de um
     script. Voc&ecirc; n&atilde;o precisa fazer um <command>global
     $_REQUEST;</command> para pode acess&aacute;-la dentro de fun&ccedil;&otilde;es ou m&eacute;todos.
    </simpara>

    <simpara>
     Se a diretiva <link
     linkend="ini.register-globals">register_globals</link>
     est&aacute; ativa, ent&atilde;o essas vari&aacute;veis tornam-se dispon&iacute;veis no
     escopo global do script (por exemplo, separados dos arrays
     <varname>$_REQUEST</varname>. Para maiores informa&ccedil;&otilde;es, veja
     o cap&iacute;tulo de seguran&ccedil;a entitulado <link
     linkend="security.registerglobals">Utilizando registradores
     globais</link>. Estas vari&aacute;veis globais individuais n&atilde;o s&atilde;o superglobais.
    </simpara>
   </sect2>

   <sect2 id="reserved.variables.session">
    <title>Vari&aacute;veis de sess&atilde;o: <varname>$_SESSION</varname></title>

    <note>
     <simpara>
      Introduzida na vers&atilde;o 4.1.0. Em vers&otilde;es anteriores, use
      <varname>$HTTP_SESSION_VARS</varname>.
     </simpara>
    </note>

    <simpara>
     Cont&eacute;m um array associativo das vari&aacute;veis de sess&atilde;o dispon&iacute;veis para
     o script atual. Veja a documenta&ccedil;&atilde;o das <link linkend="ref.session">fun&ccedil;&otilde;es de Sess&otilde;es
     </link> para maiores informa&ccedil;&otilde;es de como
     utiliz&aacute;-las.
    </simpara>

    <simpara>
     Esta &eacute; uma vari&aacute;vel 'superglobal', ou automaticamente global. Isto
     siginifica que ela &eacute; dispon&iacute;vel em todos os escopos (n&iacute;veis) de um
     script. Voc&ecirc; n&atilde;o precisa fazer um <command>global
     $_SESSION;</command> para pode acess&aacute;-la dentro de fun&ccedil;&otilde;es ou m&eacute;todos, como
     era necess&aacute;rio com <varname>$HTTP_SESSION_VARS</varname>.
    </simpara>

    <simpara>
     <varname>$HTTP_SESSION_VARS</varname> cont&eacute;m as mesmas
     informa&ccedil;&otilde;es, mas n&atilde;o &eacute; uma superglobal.
    </simpara>

    <simpara>
     Se a diretiva <link
     linkend="ini.register-globals">register_globals</link>
     est&aacute; ativa, ent&atilde;o essas vari&aacute;veis tornam-se dispon&iacute;veis no
     escopo global do script (por exemplo, separados dos arrays
     <varname>$_SESSION</varname> e <varname>$HTTP_SESSION_VARS</varname>
     Para maiores informa&ccedil;&otilde;es, veja o cap&iacute;tulo de seguran&ccedil;a entitulado
     <link linkend="security.registerglobals">Utilizando registradores
     globais</link>. Estas vari&aacute;veis globais individuais n&atilde;o s&atilde;o superglobais.
    </simpara>
   </sect2>

   <sect2 id="reserved.variables.globals">
    <title>Variaveis globais: <varname>$GLOBALS</varname></title>

    <note>
     <simpara>
      <varname>$GLOBALS</varname> foi disponibilizada desde a vers&atilde;o 3.0.0.
     </simpara>
    </note>

    <simpara>
     Um array associativo contendo refer&ecirc;ncias para todas as vari&aacute;veis
     atualmente definidas no escopo global do script. Os nomes
     das vari&aacute;veis s&atilde;o as chaves do array.
    </simpara>

    <simpara>
     Esta &eacute; uma vari&aacute;vel 'superglobal', ou automaticamente global. Isto
     significa que ela &eacute; dispon&iacute;vel em todos os escopos (n&iacute;veis) de um
     script. Voc&ecirc; n&atilde;o precisa fazer um <command>global
     $GLOBALS;</command> para pode acess&aacute;-la dentro de fun&ccedil;&otilde;es ou m&eacute;todos.
    </simpara>

   </sect2>

   <sect2 id="reserved.variables.phperrormsg">
    <title>A mensagem de erro anterior: <varname>$php_errormsg</varname></title>
    <simpara>
     <varname>$php_errormsg</varname> &eacute; uma vari&aacute;vel contendo o
     texto da &uacute;ltima mensagem de erro gerada pelo PHP. Esta vari&aacute;vel
     somente est&aacute; dispon&iacute;vel no escopo em que o erro
     ocorreu, e somente se a op&ccedil;&atilde;o de configura&ccedil;&atilde;o <link
     linkend="ini.track-errors">track_errors</link>
     est&aacute; ativa (seu default &eacute; off).
    </simpara>
   </sect2>
  </sect1>


  <sect1 id="reserved.classes">
   <title>Classes pre-definidas</title>

   <sect2 id="reserved.classes.standard">
    <title>Classes padr&atilde;o</title>

    <simpara>
     Estas classes s&atilde;o definidas dentro do conjunto padr&atilde;o de fun&ccedil;&otilde;es inclu&iacute;das
     na compila&ccedil;&atilde;o do PHP.
    </simpara>

    <variablelist>
     <varlistentry>
      <term><classname>Directory</classname></term>
      <listitem>
       <simpara>
        A classe de onde a fun&ccedil;&atilde;o <function>dir</function> &eacute; instanciada.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>stdClass</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect2>

   <sect2 id="reserved.classes.ming">
    <title><link linkend="ref.ming">Classes definidas pelo Ming</link></title>

    <simpara>
     Estas classes s&atilde;o definidas na extens&atilde;o
     <link linkend="ref.ming">Ming</link>,
     e somente estar&atilde;o dispon&iacute;veis quando esta extens&atilde;o for
     compilada dento do PHP ou carregada em tempo de execu&ccedil;&atilde;o.
    </simpara>

    <variablelist>
     <varlistentry>
      <term><classname>swfshape</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>swffill</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>swfgradient</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>swfbitmap</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>swftext</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>swftextfield</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>swffont</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>swfdisplayitem</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>swfmovie</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>swfbutton</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>swfaction</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>swfmorph</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>swfsprite</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect2>

   <sect2 id="reserved.classes.oci8">
    <title><link linkend="ref.oci8">Classes definidas pelo Oracle 8</link></title>

    <simpara>
     Estas classes s&atilde;o definidas na extens&atilde;o
     <link linkend="ref.oci8">Oracle 8</link>,
     e somente estar&atilde;o dispon&iacute;veis quando esta extens&atilde;o for
     compilada dento do PHP ou carregada em tempo de execu&ccedil;&atilde;o.
    </simpara>

    <variablelist>
     <varlistentry>
      <term><classname>OCI-Lob</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>OCI-Collection</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect2>

   <sect2 id="reserved.classes.qtdom">
    <title><link linkend="ref.qtdom">Classes definidas pelo qtdom</link></title>

    <simpara>
     Estas classes s&atilde;o definidas na extens&atilde;o
     <link linkend="ref.qtdom">qtdom</link>
     e somente estar&atilde;o dispon&iacute;veis quando esta extens&atilde;o for
     compilada dento do PHP ou carregada em tempo de execu&ccedil;&atilde;o.
    </simpara>

    <variablelist>
     <varlistentry>
      <term><classname>QDomDocument</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>QDomNode</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect2>

  </sect1>

  &appendices.reserved.constants;

</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

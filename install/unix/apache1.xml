<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 288721 Maintainer: narigone Status: ready -->
<!-- CREDITS: ernani -->
   <sect1 xml:id="install.unix.apache" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
    <title>Apache 1.3.x em sistemas Unix</title>
    <para>
     Essa seção contem notas e dicas específicas para a instação do Apache
     e do PHP em plataformas Unix. Também temos <link
     linkend="install.unix.apache2">instruções e notas para o Apache 2
     em uma página separada</link>.
    </para>
    <para>
     Você pode selecionar argumentos para adicionar ao
     <command>configure</command> na linha 10 abaixo através da <link
     linkend="configure">Lista completa de opções do configure
     </link> e das opções específicas das extensões em seus respectivos
     lugares no manual. Os números de versões foram omitidos aqui, para assegurar
     que as instruções não estejam incorretas. Você deverá trocar o
     'xxx' aqui com os valores corretos dos seus arquivos.
    </para>

    <example xml:id="install.unix.apache.example">
     <title>
      Instruções de Instalação (Apache Versão de Módulo Compartilhado) para PHP
     </title>
     <screen>
<![CDATA[
1.  gunzip apache_xxx.tar.gz
2.  tar -xvf apache_xxx.tar
3.  gunzip php-xxx.tar.gz
4.  tar -xvf php-xxx.tar
5.  cd apache_xxx
6.  ./configure --prefix=/www --enable-module=so
7.  make
8.  make install
9.  cd ../php-xxx

10. Agora, configure o seu PHP. É aqui que você personaliza seu PHP
    com várias opções, como quais extensões serão habilitadas. Execute o
    comando ./configure --help para uma lista das opções disponíveis. No nosso exemplo
    nós faremos uma simples configuração com Apache 1 e suporte ao MySQL. Seu caminho
    para o arquivo apxs pode ser diferente do exemplo.

      ./configure --with-mysql --with-apxs=/www/bin/apxs

11. make
12. make install

    Se você decidir mudar as opções de seu configure depois da instalação
    você precisará somente repetir os últimos 3 passos. Você somente precisará
    reiniciar o Apache para o novo módulo funcionar. Não será necessário recompilar
    o Apache.

    Note que, por padrão, 'make install' também instalará PEAR, além
    de várias ferramentas do PHP como phpize, instalar o CLI do PHP e mais.

13. Configurando seu arquivo php.ini:

      cp php.ini-dist /usr/local/lib/php.ini

    Você pode editar o seu arquivo .ini para configurar as opções do PHP.  Se
    você preferir que este arquivo fique em outro lugar, use a opção
    --with-config-file-path=/caminho no passo 10.

    Se ao invés de escolher o arquivo php.ini-dist, você escolher o arquivo php.ini-recommended,
    leia a lista de mudanças dentro do mesmo, uma vez que elas afetam a maneira como o PHP se comporta.

14. Edite o seu arquivo httpd.conf para carregar o módulo do PHP. O caminho no lado direito
    do comando LoadModule deve apontar para para o caminho do módulo PHP no seu sistema.
    O comando make install acima já deve ter adicionado estas linhas, mas tenha certeza
    de que as linhas abaixo foram adicionadas ao arquivo.

    Para o PHP 4:

      LoadModule php4_module libexec/libphp4.so

    Para o PHP 5:

      LoadModule php5_module libexec/libphp5.so

15. Em seguida, na seção AddModule do arquivo httpd.conf, em algum lugar
    abaixo de ClearModuleList, adicione isto:

    Para o PHP 4:

      AddModule mod_php4.c

    Para o PHP 5:

      AddModule mod_php5.c

16. Diga ao Apache para avaliar certas extensões como PHP. Por exemplo,
    vamos fazer o Apache interpretar a extensão .php como um script PHP. Você poderia
    ter qualquer extensão(ões) avaliadas como PHP simplesmente adicionando-as, com
    cada uma separada por um espaço. Vamos adicionar .phtml para demonstrar.

      AddType application/x-httpd-php .php .phtml

    Também é comum configurar a extensão .phps para mostrar o código-fonte
    do script PHP com highlight, isso pode ser feito com:

      AddType application/x-httpd-php-source .phps

17. Use seu procedimento normal para iniciar o servidor Apache. (Você deve
    parar e reiniciar o servidor, não somente fazer um reinício enviando
    um sinal HUP ou USR1.)
]]>
     </screen>
    </example>

    <para>
     Outra maneira é instalar o PHP como um objeto estático:
    </para>

    <example xml:id="install.unix.apache.example-static">
     <title>
      Instruções de Instalação (Instalação como módulo estático do Apache) para o PHP
     </title>
     <screen>
<![CDATA[
1.  gunzip -c apache_1.3.x.tar.gz | tar xf -
2.  cd apache_1.3.x
3.  ./configure
4.  cd ..

5.  gunzip -c php-5.x.y.tar.gz | tar xf -
6.  cd php-5.x.y
7.  ./configure --with-mysql --with-apache=../apache_1.3.x
8.  make
9.  make install

10. cd ../apache_1.3.x

11. ./configure --prefix=/www --activate-module=src/modules/php5/libphp5.a
    (A linha acima está correta! Sim, sabemos que libphp4.a não existe nesse
    estágio. E nem deveria. Ele será criado.)

12. make
    (você deve agora ter um binário httpd que você pode copiar para o diretório bin do Apache. Se
    for sua primeira instalação então você precisa executar "make install" também)

13. cd ../php-5.x.y
14. cp php.ini-dist /usr/local/lib/php.ini

15. Você pode editar o arquivo /usr/local/lib/php.ini para editar as opçso do PHP.
    Edite o seu arquivo httpd.conf ou srm.conf e adicione:
    AddType application/x-httpd-php .php
]]>
      </screen>
     </example>
     <note>
      <para>
       Substitua <literal>php-5</literal> por <literal>php-4</literal> e
       <literal>php5</literal> por <literal>php4</literal> no PHP 4.
      </para>
     </note>

     <para>
      Dependendo da sua instalação do Apache e das variações Unix, existem inúmeras
      maneiras possíveis de parar e reiniciar o servidor. Abaixo estão algumas linhas típicas
      usadas para reiniciar e o servidor, para instalações de versões de apache/unix.
      Você deve trocar <literal>/caminho/para/</literal> pelo
      caminho destas aplicações nos seus sistemas.
     </para>
     <para>
      <example>
       <title>Exemplo de comandos para reinicialização do Servidor Apache</title>
       <programlisting role="shell">
<![CDATA[
1. Várias distribuições Linux e variantes do SysV:
/etc/rc.d/init.d/httpd restart

2. Usando os scripts apachectl:
/path/to/apachectl stop
/path/to/apachectl start

3. httpdctl and httpsdctl (Usando OpenSSL), igual ao apachectl:
/path/to/httpsdctl stop
/path/to/httpsdctl start

4. Usando mod_ssl, ou outro servidor SSL, você pode querer iniciar
ou reiniciar manualmente:
/path/to/apachectl stop
/path/to/apachectl startssl
]]>
       </programlisting>
      </example>
     </para>
     <para>
      As localizações dos binários apachectl e http(s)dctl geralmente
      variam. Se o seu sistema tem os comandos <literal>locate</literal> ou
      <literal>whereis</literal> ou <literal>which</literal>,
      estem podem lhe ajudar a encontrar os programas de controle do servidor.
     </para>

     <para>
      Exemplos diferentes de compilação do PHP para apache estão a seguir:
      <informalexample>
       <programlisting role="shell">
<![CDATA[
./configure --with-apxs --with-pgsql
]]>
       </programlisting>
      </informalexample>
     </para>
     <para>
      Isso criará uma biblioteca compartilhada <filename>libphp5.so</filename> (ou
      <filename>libphp4.so</filename> no PHP 4) que é carregada pelo
      Apache ao adicionar uma linha LoadModule no arquivo &httpd.conf; do Apache. O
      suporte ao PostgreSQL é embutido nessa biblioteca.
     </para>
     <para>
      <informalexample>
       <programlisting role="shell">
<![CDATA[
./configure --with-apxs --with-pgsql=shared
]]>
       </programlisting>
      </informalexample>
     </para>
     <para>
      Isto irá criar uma biblioteca compartilhada <filename>libphp4.so</filename>
      para o Apache, mas isto também criará uma biblioteca compartilhada
      <filename>pgsql.so</filename> que é carregada com o PHP
      tanto ao usar a diretiva de extensão no arquivo
      &php.ini; ou então carregando ela explícitamente no script
      usando a função <function>dl</function>.
     </para>
     <para>
      <informalexample>
       <programlisting role="shell">
<![CDATA[
./configure --with-apache=/path/to/apache_source --with-pgsql
]]>
       </programlisting>
      </informalexample>
     </para>
     <para>
      Isto irá criar uma biblioteca <filename>libmodphp5.a</filename>, o arquivo
      <filename>mod_php5.c</filename> e vários arquivos dependentes e copiará
      eles para o diretório <literal>src/modules/php5</literal> na árvore de diretório
      do código fonte do Apache. Então você compilará o Apache usando a opção
      <literal>--activate-module=src/modules/php5/libphp5.a</literal>
      e o sistema de compilação do Apache irá criar o arquivo
      <filename>libphp5.a</filename> e fará um link estático dentro do binário
      <filename>httpd</filename> (substitua <literal>php5</literal> por
      <literal>php4</literal> no PHP 4). O suporte ao PostgreSQL estará incluído
      diretamente neste binário <filename>httpd</filename>,
      então o resultado final aqui será um único arquivo binário <filename>httpd</filename>
      que incluirá tudo do Apache e tudo do PHP.
     </para>
     <para>
      <informalexample>
       <programlisting role="shell">
<![CDATA[
./configure --with-apache=/path/to/apache_source --with-pgsql=shared
]]>
       </programlisting>
      </informalexample>
     </para>
     <para>
      Mesmo que o anterior, exceto em vez de incluir o suporte ao PostgreSQL
      diretamente no binário <filename>httpd</filename> você terá
      uma biblioteca compartilhada <filename>pgsql.so</filename> que você poderá carregar
      com o PHP tanto do arquivo &php.ini; ou
      diretamente usando a função <function>dl</function>.
     </para>
     <para>
      Quanto estiver decidindo compilar o PHP com maneiras diferentes, você deverá considerar
      as vantages e disvantagens de cada método. Complilando como uma biblioteca compartilhada
      significará que você poderá compilar o apache separadamente, e não
      terá que recompilar tudo quando quiser adicionar ou mudar o seu PHP.
      compilando o PHP dentro do apache (método estático) significará que o PHP irá carregar e
      rodar rapidamente. Para maiores informações, veja a página web do Apache que fala sobre
      <link xlink:href="&url.apachedso;">Suporte a Objetos Dinâmicos Compartilhados</link>.
     </para>
    <note>
     <para>
      O arquivo &httpd.conf; padrão do Apache atualmente já contém uma seção que se parece
      com isso:
      <informalexample>
       <programlisting role="apache-conf">
<![CDATA[
User nobody
Group "#-1"
]]>
       </programlisting>
      </informalexample>
      A menos que você mude isto para "Group nogroup" ou algo assim ("Group daemon" é
      também muito comum) o PHP não estará apto a abrir arquivos.
     </para>
    </note>
    <note>
     <para>
     Tenha certeza de especificar a versão instalada do apxs quando usar a opção
     <option role="configure">--with-apxs=/caminho/para/apxs</option>.
     Você NÂO deverá usar a versão do apxs que está nos fontes do apache e sim a
     que está atualmente instalada no seu sistema.
     </para>
    </note>
   </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.4 Maintainer: narigone Status: ready -->
   <sect1 id="install.windows.building">
    <title>Compilando a partir dos fontes</title>
    <para>
     Antes de começar, vale a pena responder a pergunta:
     "Por que é tão difícil compilar no Windows?" Duas razões principais:
    </para>
    <orderedlist>
     <listitem>
      <simpara>
       Windows não disfruta (ainda) de uma grande comunidade de desenvolvedores
       que estão dispostos de compartilhar livremente os seus fontes. Como resultado
       direto disso, o investimento necessário em infra-estrutura requerida
       para suportar tal desenvolvimento não foi feito. A maioria do que
       está disponível foi possível pela alteração das
       ferramentas necessárias do Unix. Não se surpreenda se algo
       dessa herança se mostre de tempo em tempo.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Quase todas as instruções a seguir são do tipo
       "configurar e esquecer". Então se acomode e tente seguir as
       instruções abaixo o quão fielmente você conseguir.
      </simpara>
     </listitem>
    </orderedlist>

    <sect2 id="install.windows.building.requirement">
     &reftitle.required;
     <para>
      Para compilar e montar o PHP, você precisa de um Microsoft
      Development Environment. Microsoft Visual C++ 6.0 é recomendado.
      Para extrair os arquivos baixados, você precisa de uma ferramenta de extração
      (ex.: Winzip). Se você não tiver uma ferramente unzip, você
      pode pegar uma versão grátis de <ulink url="&url.infozip;">InfoZip</ulink>.
     </para>
     <para>
      Antes de você começar, você tem que baixar...
     </para>
      <itemizedlist>
       <listitem>
        <simpara>
        .. win32 buildtoolsdo site do PHP 
        em <ulink url="&url.win32.buildtools;">&url.win32.buildtools;</ulink>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        ..o código-fonte para o DNS name resolver usado pelo PHP em
        <ulink url="&url.win32.dnsresolver;">
        &url.win32.dnsresolver;</ulink>. Esse é um substituto para a biblioteca
        <filename>resolv.lib</filename> inclusa no arquivo <filename>
        win32build.zip</filename>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Se você planeja compilar o PHP como um módulo do 
        Apache você também precisará dos <ulink url="&url.apache.source;">fontes do
        Apache</ulink>.
       </simpara>
      </listitem>
     </itemizedlist>
     <simpara>
      Finalmente, você precisará dos fontes do PHP. Você pode pegar a
      verão mais recente de desenvolvimento usando <ulink url="&url.php.anoncvs;">
      login anônimo ao CVS</ulink>, um <ulink url="&url.php.snapshots;">
      snapshot</ulink> ou o release mais novo dos <ulink url="&url.php.downloads;">
      fontes</ulink>.
     </simpara>
    </sect2>

    <sect2 id="install.windows.building.install">
     <title>Juntanto tudo</title>
     <para>
      Depois de baixar os pacotes necessários, você tem que extrair eles em
      um lugar apropriado.
      <itemizedlist>
       <listitem>
        <simpara>
         Crie um diretório de trabalho onde todos os arquivos serão extraídos, ex.:
         <filename class="directory">C:\work</filename>.
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         Crie o diretório <filename>win32build</filename> nesse
         diretório de trabalho (<filename class="directory">C:\work</filename>) e descompate o arquivo <filename>
         win32build.zip</filename> nele.
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         Crie o diretório <filename>bindlib_w32</filename> nesse
         diretório de trabalho (<filename class="directory">C:\work</filename>)  e descompate o arquivo <filename>
         bindlib_w32.zip</filename> nele.
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         Extraia o código fonte do PHP no diretório de trabalho
         (<filename class="directory">C:\work</filename>).
        </simpara>
       </listitem>
      </itemizedlist>
      Seguindo esses passos a sua estrutura de diretório parecerá com isso:
      <informalexample>
       <programlisting>
<![CDATA[

+--c:\work
|  |
|  +--bindlib_w32
|  |  |
|  |  +--arpa
|  |  |
|  |  +--conf
|  |  |
|  |  +--...
|  |
|  +--php-4.x.x
|  |  |
|  |  +--build
|  |  |
|  |  +--...
|  |  |
|  |  +--win32
|  |  |
|  |  +--...
|  |
|  +--win32build
|  |  |
|  |  +--bin
|  |  |
|  |  +--include
|  |  |
|  |  +--lib

]]>
       </programlisting>
      </informalexample>
      Cria os diretórios <filename class="directory">c:\usr\local\lib</filename>. Copie
      <filename>bison.simple</filename> de <filename class="directory">c:\work\win32build\bin
      </filename> para <filename class="directory">c:\usr\local\lib</filename>.
     </para>
     <note>
      <simpara>
       Usuários do <ulink url="&url.cygwin;">Cygwin</ulink> podem pular o passo
       anterior. Um ambiente Cygwin devidamente instalado provê os 
       arquivos <filename>bison.simple</filename> e
       <filename>bison.exe</filename>.
      </simpara>
     </note>
    </sect2>

    <sect2 id="install.windows.building.configure">
     <title>Configure o MVC ++</title>
      <para>
       O próximo passo é configura o MVC ++ para prepará-lo para compilar.
       Rode o Microsoft Visual C++, e do menu selecione
       Tools =&gt; Options. No diálogo que aparecerá, selecione o
       tab de diretórios. Depois, mude o dropdown
       para arquivos Executables, Includes, e Library. Suas configurações devem parecer
       com isso:
       <itemizedlist>
        <listitem>
         <simpara>
          Executable files: <filename class="directory">c:\work\win32build\bin</filename>,
          Cygwin users: <filename>cygwin\bin</filename>
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          Include files: <filename class="directory">c:\work\win32build\include</filename>
         </simpara>
        </listitem>
         <listitem>
          <simpara>
          Library files: <filename class="directory">c:\work\win32build\lib</filename>
         </simpara>
        </listitem>
       </itemizedlist>
      </para>
    </sect2>

    <sect2 id="install.windows.building.resolvlib">
     <title>Montando resolv.lib</title>
      <para>
       Você deve montar a biblioteca <filename>resolv.lib</filename>.
       Decida se você quer ter símbolos de depuração disponíveis
       (bindlib - Win32 Debug) ou não (bindlib - Win32 Release).
       Monte a configuração apropriada:
       <itemizedlist>
        <listitem>
         <simpara>
          Para usuários de GUI, rode o VC++, e selecione  File =&gt; Open
          Workspace, vá até <filename class="directory">c:\work\bindlib_w32</filename> e
          selecione <filename>bindlib.dsw</filename>. Depois selecione Build=&gt;Set
          Active Configuration e selecione a configuração desejada.
          Finalmente, selecione Build=&gt;Rebuild All.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          Para usuários de linha de comando, assegure-se que você ou registrou
          as variáveis de ambiente do C++, ou executou
          <command>vcvars.bat</command>, e então execute um dos comandos
          a seguir:
         </simpara>
         <itemizedlist>
          <listitem>
           <simpara>
            <userinput>msdev bindlib.dsp /MAKE "bindlib - Win32 Debug"</userinput>
           </simpara>
          </listitem>
          <listitem>
           <simpara>
            <userinput>msdev bindlib.dsp /MAKE "bindlib - Win32 Release"</userinput>
           </simpara>
          </listitem>
         </itemizedlist>
        </listitem>
       </itemizedlist>
       Nesse ponto, você deve ter a biblioteca <filename>resolv.lib</filename> pronta para ser usada
       ou no subdiretório <filename class="directory">c:\work\bindlib_w32\Debug</filename> ou em
       <filename>Release</filename>. Copie esse arquivo para o seu diretório 
       <filename class="directory">c:\work\win32build\lib</filename> e sobrescreva o arquivo
       com o mesmo nome que está aqui.
      </para>
    </sect2>

    <sect2 id="install.windows.building.compile">
     <title>Compilando</title>
     <simpara>
      A melhor maneira de começar é compilando a versão CGI.
     </simpara>
     <itemizedlist>
      <listitem>
       <simpara>
        Para usuários de GUI, execute VC++, e selecione File =&gt; Open
        Workspace e selecione <filename>c:\work\php-4.x.x\win32\php4ts.dsw
        </filename>. Depois vá em Build=&gt;Set Active
        Configuration e selecione a configuração desejada, ou 
        <literal>php4ts - Win32 Debug_TS</literal> ou
        <literal>php4ts - Win32 Release_TS</literal>. Finalmente, selecione
        Build=&gt;Rebuild All.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Para usuários de linha de comenado, assegure-se que você ou 
        registrou as variáveis de ambiente do C++, ou executou
        <command>vcvars.bat</command>, e então execute um dos 
        seguintes comando no diretório
        <filename class="directory">c:\work\php-4.x.x\win32</filename>:
       </simpara>
       <itemizedlist>
        <listitem>
         <simpara>
          <userinput>msdev php4ts.dsp /MAKE "php4ts - Win32 Debug_TS"</userinput>
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <userinput>msdev php4ts.dsp /MAKE "php4ts - Win32 Release_TS"</userinput>
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          Nesse ponto, você deve ter um arquivo <filename>php.exe</filename> usável
          ou no subdiretório <filename class="directory">c:\work\php-4.x.x.\Debug_TS</filename> ou
          <filename>Release_TS</filename>.
         </simpara>
        </listitem>
       </itemizedlist>
      </listitem>
     </itemizedlist>
     <simpara>
      É possível fazer algumas personalizações mínimas para o processo de compilação editando
      o arquivo <filename>main/config.win32.h</filename>. Por exemplo, você pode
      muda a localização padrão do arquivo &php.ini;, as extensões integradas, e a
      localização padrão para suas extensões.
     </simpara>
     <simpara>
      Depois, você pode querer montar a versão CLI que é feita para usar o
      <link linkend="features.commandline">PHP da linha de comando</link>.
      Os passos são o mesmos para compilar a versão CGI, exceto que você tem que
      selecionar o arquivo de projeto <literal>php4ts_cli - Win32 Debug_TS</literal> ou
      <literal>php4ts_cli - Win32 Release_TS</literal>. Depois de uma compilação
      sucedida você encontrará o arquivo <filename>php.exe</filename>
      ou no diretório <filename class="directory">Release_TS\cli\</filename> ou
      <filename class="directory">Debug_TS\cli\</filename>.
     </simpara>
     <note>
      <simpara>
       Se você quiser usar PEAR e o confortável instalador de linha de comando,
       CLI-SAPI é obrigatório. Para mais informações sobre PEAR e o 
       instalador leia a documentação no website do <ulink url="&url.php.pear;manual/">
       PEAR</ulink>.
      </simpara>
     </note>
     <simpara>
      Para montar o módulo SAPI (<filename>php4isapi.dll</filename>)
      para integrar o PHP com o Microsoft IIS, modifique o seu arquivo de configuração
      para <filename>php4isapi-whatever-config</filename> e construa a dll desejada.
     </simpara>
    </sect2>
   </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

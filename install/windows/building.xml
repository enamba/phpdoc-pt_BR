<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.18 Maintainer: thiago Status: ready -->
<sect1 xml:id="install.windows.building" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Compilando a partir dos fontes</title>
 <para>
  Esse capítulo ensina como compilar PHP a partir dos fontes no Windows, usando
  as ferramentas da Microsoft. Para compilar o PHP com cygwin, veja o <xref
  linkend="install.unix"/>.
 </para>
 
 <sect2 xml:id="install.windows.building.quick-guide">
  <title>Quick Guide to Building On Windows</title>
  
  <para>
   Este rápido guia passo-a-passo foi escrito em Março de 2008, executado no
   Windows XP Service Pack 2 com todos as últimas atualizações e compilando o 
   PHP versões 5.2.5 e 5.3. Sua experiência pode ser diferente se utilizar outras ferramentas
  </para>
  
  <orderedlist>
   <listitem>
    <para>
     Baixar e instalar:
    </para>
    <itemizedlist>
     <listitem>
      <simpara>
       <link xlink:href="&url.vc2k8ee;">Microsoft
       Visual C++ 2008 Express Edition</link>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <link xlink:href="&url.win32.sdk;">
       Windows SDK for Windows Server 2008 and .NET Framework 3.5</link>
      </simpara>
     </listitem>
    </itemizedlist>
   </listitem>
    
   <listitem>
    <simpara>
     Copie <filename>C:\Arquivos de Programas\Microsoft SDKs\Windows\v6.1\Include\WinResrc.h</filename>
     para <filename>C:\Arquivos de Programas\Microsoft SDKs\Windows\v6.1\Include\winres.h</filename>.
    </simpara>
   </listitem>
    
   <listitem>
    <simpara>
     Crie o diretório <filename>C:\work</filename>.
    </simpara>
   </listitem>
    
   <listitem>
    <simpara>
     Baixe <link xlink:href="&url.win32.buildtools;">as ferramentas de
      compilação do Windows</link> e descompacte o conteúdo em <filename>C:\work</filename>.
    </simpara>
   </listitem>
    
   <listitem>
    <simpara>
     Crie o diretório <filename>C:\usr\local\lib</filename>. Copie
     <filename>C:\work\win32build\bin\bison.simple</filename> para o novo
     diretório.
    </simpara>
   </listitem>
    
   <listitem>
    <simpara>
     Baixe <link xlink:href="&url.win32.dnsresolver;">a biblioteca de
      resolução de DNS do Windows</link> e descompacte o conteúdo em <filename>C:\work</filename>.
    </simpara>
   </listitem>
    
   <listitem>
    <simpara>
     Abra o arquivo <filename>C:\work\bindlib_w32\bindlib.dsw</filename>. Se e
     quando perguntao se deseja atualizar o projeto, escolha Sim (Yes).
     Escolha a configuração Release ou Debug na barra superior, então escolha
     Compilar (Build) =&gt; Compilar Solução (Build Solution).
    </simpara>
   </listitem>
   
   <listitem>
    <simpara>
     Obtenha uma cópia dos fontes do PHP e extraia para o diretório
     <filename>C:\work</filename>. A essa altura, o diretório deverá estar
     parecido com isso:
    </simpara>
    <screen>
<![CDATA[
+-C:\work
| +-bindlib_w32
| | +-Debug
| | | +-resolv.lib
| | | +-...
| | +-...
| +-win32build
| | +-bin
| | +-include
| | +-lib
| +-php-5.2.5
| | +-build
| | +-win32
| | +-...]]></screen>
   </listitem>
    
   <listitem>
    <simpara>
     Abra um shell utilizando o atalho no menu iniciar para o Visual Studio
     2008 Command Prompt.
    </simpara>
   </listitem>
   
   <listitem>
    <simpara>
     Execute o comando:
    </simpara>
    <screen>
<![CDATA[
C:\Arquivos de Programas\Microsoft Visual Studio 9.0\VC> set "PATH=C:\work\win32build\bin;%PATH%"
C:\Arquivos de Programas\Microsoft Visual Studio 9.0\VC>]]></screen>
   </listitem>
   
   <listitem>
    <simpara>
     Entre no diretório <filename>C:\work\php-5.2.5</filename>.
    </simpara>
   </listitem>
   
   <listitem>
    <simpara>
     Execute <command>cscript /nologo win32\build\buildconf.js</command>.
    </simpara>
   </listitem>
   
   <listitem>
    <simpara>
     Execute <command>cscript /nologo configure.js --disable-all --enable-cli
     --enable-cgi --enable-object-out-dir=.. --disable-ipv6</command>. Para
    habilitar depuração (debug), adicione <command>--enable-debug</command> no
    final do comando.
    </simpara>
   </listitem>
   
   <listitem>
    <simpara>
     Execute <command>nmake</command>.
    </simpara>
   </listitem>
   
   <listitem>
    <simpara>
     Se tudo ocorreu bem, deverá existir um executável CLI do PHP em
     <filename>C:\work\Debug_TS\php.exe</filename>, ou
     <filename>C:\work\Release_TS\php.exe</filename>.
    </simpara>
   </listitem>

  </orderedlist>
 </sect2>

 <sect2 xml:id="install.windows.building.environment">
  <title>Ambiente de compilação</title>
  <para>
   Para compilar e montar o PHP, você precisa de um Microsoft Development Environment.
   Os seguintes ambientes são suportados:
  </para>
  <itemizedlist>
   <listitem>
    <simpara>
     Microsoft Visual C++ 6.0 (official)
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Microsoft Visual C++ .NET
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Microsoft Visual C++ 2005, Windows Platform SDK e .NET Framework SDK (atual)
    </simpara>
   </listitem>
  </itemizedlist>
  <para>
   Embora VC6 (Microsoft Visual C++ 6.0) seja usado para executar oficiais compilações
   do Windows, ele não pode ser obtido do site da Microsoft. Novos usuários
   procurando compilar o PHP precisa usar Microsoft Visual C++ 2005 Express
   Edition e seus componentes auxiliares.
  </para>
  
  <sect3 xml:id="install.windows.building.environment.express2005">
   <title>Configurando o Microsoft Visual C++ 2005 Express</title>
   <note>
    <simpara>
     Combinado, estes componentes são muito extenso e requisitará um
     gigabyte de espaço de disco.
    </simpara>
   </note>
   <para>
    Configurando o Microsoft Visual C++ 2005 Express é melhor contido,
    e requer a instalação de três pacotes separados e várias mudanças de
    compatibilidades. Mantenha uma lista de caminhos no qual
    estes programas estão sendo instalados. Faça download e instale 
    os seguintes programas:
   </para>
   <itemizedlist>
    <listitem>
     <simpara>
      <link xlink:href="&url.win32.msvc2005express;">Microsoft Visual C++ 2005 Express</link>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <link xlink:href="&url.win32.platform-sdk;">Microsoft Windows Server 2005 Platform SDK</link>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <link xlink:href="&url.win32.net2.0-sdk;">.NET Framework 2.0 Software Development Kit</link>
     </simpara>
    </listitem>
   </itemizedlist>
   <para>
    Há vários passos pós-instalação:
   </para>
   <itemizedlist>
    <listitem>
     <simpara>
      <link xlink:href="&url.win32.express-and-sdk;">MSVC 2005 Express precisa
      ser configurado para usar Windows Platform SDK</link>. Ele não é necessário
      para executar o segundo passo, como PHP não usa interface gráfica de usuário.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Windows Platform SDK contém um arquivo chamado <filename>WinResrc.h</filename>
      normalmente na pasta <filename>Include</filename> dentro do diretório de
      instalação do SDK. Este necessita ser copiado e renomeado para 
      <filename>winres.h</filename>, o nome que o PHP usa para o arquivo.
     </simpara>
    </listitem>
   </itemizedlist>
   <para>
    Finalmente, quando usando MSVC 2005 Express na linha de comando, várias
    variáveis de ambiente precisam ser definidas. <filename>vsvars32.bat</filename>
    normalmente encontradas em <filename>C:\Program Files\Microsoft Visual Studio 8\Common7\Tools</filename>
    (pesquise pelo arquivo caso contrário) contém estas declarações. As variáveis
    de ambiente <varname>PATH</varname>, <varname>INCLUDE</varname> e <varname>LIB</varname>
    precisam corresponder aos diretórios <filename>bin</filename>, <filename>include</filename> e
    <filename>lib</filename> dos dois recentes instalados SDK adicionado para eles.
   </para>
   <note>
    <simpara>
     O caminho do .NET SDK pode já estar presente no arquivo <filename>vsvars32.bat</filename>,
     como esta instalação do próprio SDK no mesmo diretório que o Microsoft Visual C++ 2005 Express.
    </simpara>
   </note>
  </sect3>
 </sect2>
 
 <sect2 xml:id="install.windows.building.libraries">
  <title>Bibliotecas</title>
  <para>
   Para extrair os arquivos baixados, você precisará de uma ferramenta que descompacte
   arquivos ZIP. O Windows XP e os mais novos já incluem essa funcionalidade embutida.
  </para>
  <para>
   Antes de você começar, você tem que baixar:
  </para>
  <itemizedlist>
   <listitem>
    <simpara>
     win32 buildtools do site do PHP
     em <link xlink:href="&url.win32.buildtools;">&url.win32.buildtools;</link>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     o código-fonte para o DNS name resolver usado pelo PHP em
     <link xlink:href="&url.win32.dnsresolver;">&url.win32.dnsresolver;</link>.
     Esse é um substituto para a biblioteca <filename>resolv.lib</filename>
     inclusa no arquivo <filename> win32build.zip</filename>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Se você planeja compilar o PHP como um módulo do Apache você também precisará dos
     <link xlink:href="&url.apache.source;">fontes do Apache</link>.
    </simpara>
   </listitem>
  </itemizedlist>
  <simpara>
   Finalmente, você precisará dos fontes do PHP. Você pode pegar a
   verão mais recente de desenvolvimento usando <link xlink:href="&url.php.anoncvs;">
   login anônimo ao CVS</link>, um <link xlink:href="&url.php.snapshots;">
   snapshot</link> ou o release mais novo dos <link xlink:href="&url.php.downloads;">
   fontes</link>.
  </simpara>
 </sect2>

 <sect2 xml:id="install.windows.building.install">
  <title>Juntanto tudo</title>
   <para>
    Depois de baixar os pacotes necessários, você tem que extrair eles em
    um lugar apropriado.
    <itemizedlist>
     <listitem>
      <simpara>
       Crie um diretório de trabalho onde todos os arquivos serão extraídos, ex.:
       <filename class="directory">C:\work</filename>.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Crie o diretório <filename>win32build</filename> nesse
       diretório de trabalho (<filename class="directory">C:\work</filename>) e descompate o arquivo <filename>
       win32build.zip</filename> nele.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Crie o diretório <filename>bindlib_w32</filename> nesse
       diretório de trabalho (<filename class="directory">C:\work</filename>)  e descompate o arquivo <filename>
       bindlib_w32.zip</filename> nele.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Extraia o código fonte do PHP no diretório de trabalho
       (<filename class="directory">C:\work</filename>).
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Compile as biblioteca que você precisará (ou baixe os binários se
       estiverem disponíveis) e coloque os cabeçalhos e bibliotecas no diretório <filename
       class="directory">C:\work\win32build\include</filename> e <filename
       class="directory">C:\work\win32build\lib</filename>,
       respectivamente.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Se você não tem o cygwin instalado com o bison e flex, você precisará também
       fazer o diretório <filename class="directory">C:\work\win32build\bin</filename>
       disponível no PATH, assim estas ferramentas podem ser encontradas
       pelo script configure.
      </simpara>
      </listitem>
    </itemizedlist>
    Seguindo esses passos a sua estrutura de diretório parecerá com isso:
   <screen>
<![CDATA[
+--C:\work
|  |
|  +--bindlib_w32
|  |  |
|  |  +--arpa
|  |  |
|  |  +--conf
|  |  |
|  |  +--...
|  |
|  +--php-5.x.x
|  |  |
|  |  +--build
|  |  |
|  |  +--...
|  |  |
|  |  +--win32
|  |  |
|  |  +--...
|  |
|  +--win32build
|  |  |
|  |  +--bin
|  |  |
|  |  +--include
|  |  |
|  |  +--lib
]]>
   </screen>
  </para>
  <para>
   Se você não estiver usando o <link xlink:href="&url.cygwin;">Cygwin</link>, você também deve
   criar os diretórios <filename
   class="directory">C:\usr\local\lib</filename> e então copie o arquivo
   <filename>bison.simple</filename> de <filename
   class="directory">C:\work\win32build\bin </filename> para <filename
   class="directory">C:\usr\local\lib</filename>.
  </para>
  <note>
   <simpara>
    Se você quiser usar o PEAR e o conviniente instalador em linha de comando, o
    CLI-SAPI é necessário. Para mais informação sobre PEAR e o instalador
    leia a documentação no web site do <link
    xlink:href="&url.php.pear.manual;">PEAR</link>.
   </simpara>
  </note>
 </sect2>

 <sect2 xml:id="install.windows.building.resolvlib">
  <title>Compilando resolv.lib</title>
   <para>
    Você deve compilar a biblioteca <filename>resolv.lib</filename>. Decida se você
    quer ter símbolos de depuração disponíveis (bindlib - Win32 Debug) ou não
    (bindlib - Win32 Release), mas por favor, lembre-se da escolha que você fará, por
    que a biblioteca com os símbolos só montará com o PHP se o mesmo for montado em modo
    de depuração. Monte a configuração apropriada:
    <itemizedlist>
     <listitem>
      <simpara>
       Para usuários de GUI, execute VC++, clicando duas-vezes em
       <filename>C:\work\bindlib_w32\bindlib.dsw</filename>. Então selecione
       Build=&gt;Rebuild All.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Para usuários de linha de comando, assegure-se que as variáveis de ambiente
       do C++ estão registradas, ou execute
       <command>vcvars.bat</command>, e então execute um dos seguintes
       comandos:
      </simpara>
      <itemizedlist>
       <listitem>
        <simpara>
         <command>msdev bindlib.dsp /MAKE "bindlib - Win32 Debug"</command>
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         <command>msdev bindlib.dsp /MAKE "bindlib - Win32 Release"</command>
        </simpara>
       </listitem>
      </itemizedlist>
     </listitem>
    </itemizedlist>
    Nesse ponto, você deve ter uma <filename>resolv.lib</filename> utilizável ou
    nos sub-diretórios <filename
    class="directory">C:\work\bindlib_w32\Debug</filename> ou
    <filename>Release</filename>. Copie esse arquivo para o diretório
    <filename class="directory">C:\work\win32build\lib</filename>,
    sobrescrevendo o arquivo de mesmo nome nesse diretório.
   </para>
  </sect2>

  <sect2 xml:id="install.windows.building.new">
   <title>Montando o PHP usando no novo sistema de montagem [Apenas PHP &gt;=5]</title>
   <para>
    Esse capítulo explica como compilar o PHP &gt;=5 usando o novo sistema de montagem,
    que é baseado em CLI e muito similar com o sistema de montagem principal do PHP no Unix.
   </para>
   <note>
    <para>
     Esse sistema de montagem não está disponível no PHP 4. Favor, ler <xref
     linkend="install.windows.building.dsw"/> se for o seu caso.
    </para>
   </note>
   <para>
    Antes de começar, assegure-se de let <xref linkend="install.windows.building.install"/>
    e que você compilou todas as bibliotecas
    necessárias, como <link xlink:href="&url.libxml;">Libxml</link> ou <link
    xlink:href="&url.icu;">ICU</link> (necessária para o PHP &gt;= 6).
   </para>
   <para>
    Primeiro, você deve abrir um Prompt de Comando do Visual Strudio, que pode estar
    disponível no Menu Iniciar (Start Menu). Um Prompt de Comando comum não
    deve funcionar, uma vez que provavelmente as variáveis de ambiente necessárias
    não estão configuradas. Então digite algo como <command>cd C:\work\php-5.x.x</command>
    para entrar no diretório dos fontes do PHP. Agora se prepare para começar a configurar o PHP.
   </para>
   <para>
    O segundo passo é executar o arquivo de lote <command>buildconf</command>
    para criar o script configure, procurando o diretório por
    arquivos <filename>config.w32</filename>. Via de regra, esse comando também
    procurará nos seguintes diretórios:  <filename class="directory">pecl;
    ..\pecl; pecl\rpc; ..\pecl\rpc</filename>. A partir do PHP 5.1.0, vodê pode alterar
    esse comportamento usando o argumento <literal>--add-modules-dir</literal>
    (ex.: <command>cscript /nologo win32/build/buildconf.js
    --add-modules-dir=../php-gtk2 --add-modules-dir=../pecl</command>).
   </para>
   <para>
    O terceiro passo é configurar. Para ver a lista de opções de configuração
    disponíveis, digite <command>cscript /nologo configure.js
    --help</command>. Depois de escolher as opções que você irá habilitar/desabilitar,
    digite algo como <command>cscript /nologo configure.js --disable-foo
    --enable-fun-ext</command>. Usar <literal>--enable-foo=shared</literal>
    tentará construir a extensão 'foo' como um módulo compartilhado, carregado
    dinâmicamente.
   </para>
   <para>
    O último passo é compilar. Para isso, basta executar o comandocommand
    <command>nmake</command>. Os arquivos gerados (e.g. .exe e .dll) serão
    colocado ou nos diretórios <filename class="directory">Release_TS</filename> our
    <filename class="directory">Debug_TS</filename> (se compilado com
    Thread safety), ou no diretórios <filename class="directory">Release</filename> ou
    <filename class="directory">Debug</filename> caso contrário.
   </para>
   <para>
    É opcional, mas você também pode executar os aplicativos de teste do PHP, executando
    <command>nmake test</command>. Se você quiser rodar apenas um teste específico, você
    pode user a variável 'TESTS' (ex.: <command>nmake /D TESTS=ext/sqlite/tests
    test</command> - só executará testes no sqlite). Para apagar esses arquivos que
    foram criados durante a compilação, você pode usar o comando <command>nmake
    clean</command>.
   </para>
   <para>
    Uma opção de configuração muito útil para montar snapshots é
    <literal>--enable-snapshot-build</literal>, que adiciona un novo modo de compilação
    (<command>nmake build-snap</command>). Isso tenta montar cada extensão
    disponível (como compartilhada, por padrão), mas ignorará erros de montagem em
    extensões individuais ou SAPI.
   </para>
  </sect2>

  <sect2 xml:id="install.windows.building.dsw">
   <title>Building PHP using DSW files [PHP 4]</title>
   <para>
    Compilar o PHP usando os arquivos DSW não é suportado a partir do PHP5, já que um
    <link linkend="install.windows.building.new">sistema mais flexível está
    disponível</link>. De qualquer forma, você ainda pode usá-los, mas tenha em mente que
    ele não são testados freqüentemente, então você pode ter problemas de compilação. Para
    compilar o PHP 4 para Windows, no entanto, essa é a única opção disponível.
   </para>

   <sect3 xml:id="install.windows.building.dsw.configure">
    <title>Configure MVC ++</title>
    <para>
     O próximo passo é configurar o MVC ++ para prepará-lo para compilar.
     Rode o Microsoft Visual C++, e do menu selecione
     Tools =&gt; Options. No diálogo que aparecerá, selecione o
     tab de diretórios. Depois, mude o dropdown
     para arquivos Executables, Includes, e Library. Suas configurações devem parecer
     com isso:
     <itemizedlist>
      <listitem>
       <simpara>
        Arquivos executáveis: <filename
        class="directory">C:\work\win32build\bin</filename>, Usuários do Cygwin:
        <filename>C:\cygwin\bin</filename>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Arquivos inclusos: <filename
        class="directory">C:\work\win32build\include</filename>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Arquivos de Bibliotecas: <filename
        class="directory">C:\work\win32build\lib</filename>
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
   </sect3>

  <sect3 xml:id="install.windows.building.dsw.compile">
   <title>Compilando</title>
   <simpara>
    A melhor maneira de começar é compilando a versão CGI:
   </simpara>
   <itemizedlist>
    <listitem>
     <simpara>
      Para usuários de GUI, execute VC++, e selecione File =&gt; Open Workspace
      e selecione <filename>c:\work\php-4.x.x\win32\php4ts.dsw</filename>.
      Depois vá em Build=&gt;Set Active Configuration e selecione a configuração
      desejada, ou <literal>php4ts - Win32 Debug_TS</literal> ou
      <literal>php4ts - Win32 Release_TS</literal>. Finalmente, selecione
      Build=&gt;Rebuild All.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Para usuários de linha de comenado, assegure-se que você ou
      registrou as variáveis de ambiente do C++, ou executou
      <command>vcvars.bat</command>, e então execute um dos
      seguintes comando no diretório
      <filename class="directory">c:\work\php-4.x.x\win32</filename>:
     </simpara>
     <itemizedlist>
      <listitem>
       <simpara>
        <command>msdev php4ts.dsp /MAKE "php4ts - Win32 Debug_TS"</command>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <command>msdev php4ts.dsp /MAKE "php4ts - Win32 Release_TS"</command>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Nesse ponto, você deve ter um arquivo <filename>php.exe</filename> usável
        ou no subdiretório <filename
        class="directory">c:\work\php-4.x.x.\Debug_TS</filename> ou em
        <filename>Release_TS</filename>.
       </simpara>
      </listitem>
     </itemizedlist>
    </listitem>
   </itemizedlist>
   <simpara>
    É possível fazer algumas personalizações mínimas para o processo de compilação editando
    o arquivo <filename>main/config.win32.h</filename>. Por exemplo, você pode
    muda a localização padrão do arquivo &php.ini;, as extensões integradas, e a
    localização padrão para suas extensões.
   </simpara>
   <simpara>
    Depois, você pode querer montar a versão CLI que é feita para usar o
    <link linkend="features.commandline">PHP da linha de comando</link>.
    Os passos são o mesmos para compilar a versão CGI, exceto que você tem que
    selecionar o arquivo de projeto <literal>php4ts_cli - Win32 Debug_TS</literal> ou
    <literal>php4ts_cli - Win32 Release_TS</literal>. Depois de uma compilação
    sucedida você encontrará o arquivo <filename>php.exe</filename>
    ou no diretório <filename class="directory">Release_TS\cli\</filename> ou
    <filename class="directory">Debug_TS\cli\</filename>.
   </simpara>
   <simpara>
    Para montar o módulo SAPI (<filename>php4isapi.dll</filename>)
    para integrar o PHP com o Microsoft IIS, modifique o seu arquivo de configuração
    para <filename>php4isapi-whatever-config</filename> e construa a dll desejada.
   </simpara>
  </sect3>
 </sect2>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

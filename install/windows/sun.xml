<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.3 Maintainer: narigone Status: ready -->
  <sect1 id="install.windows.sun">
   <title>Servidores Sun, iPlanet e Netscape no Microsoft Windows</title>
   <para>
    Essa seção contem notas e dicas específicas para instalação do PHP em servidores 
    Sun Java System Web Server, Sun ONE Web Server, iPlanet e Netscape no Windows.
   </para>
   <para>
    A partir do PHP 4.3.3 você pode usar seus scripts PHP com o
    <link linkend="ref.nsapi">módulo NSAPI</link> para
    <link linkend="install.windows.sun.specialpages">gerar listagens
    personalizadas de diretórios e páginas de erro</link>. Funções adicionais para
    compatibilidade com o Apache também estão disponíveis. Para suporte nos servidores web atuais
    leia a <link linkend="install.windows.sun.notes">nota sobre
    subrequests</link>.
   </para>
   
   <sect2 id="install.windows.sun.cgi">
    <title>Configurando como CGI em servidores Sun, iPlanet e Netscape</title> 
    <para>
     Para instalar o PHP como um tratador de CGI, faça o seguinte:
    </para>
    <itemizedlist>
     <listitem>
      <simpara>
       Copie o arquivo <filename>php4ts.dll</filename> para a pasta raiz do seu sistema
       (o diretório onde você instalou o Windows)
      </simpara>
     </listitem>
     <listitem>
      <para>
       Faça uma associação de arquivo a partir da linha de comando.
       Digite as duas linhas a seguir:
       <programlisting role="shell">
<![CDATA[
assoc .php=PHPScript
ftype PHPScript=c:\php\php.exe %1 %*
]]>
       </programlisting>
      </para>
     </listitem>
     <listitem>
      <simpara>
       No Netscape Enterprise Administration Server crie
       um diretório dummy para o shellcgi e remova-o em seguida (esse
       passo cria 5 linhas importantes no obj.conf e permite que
       o servidor web trate scripts shellcgi).
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       No Netscape Enterprise Administration Server crie
       um novo tipo mime (Category: type,
       Content-Type: magnus-internal/shellcgi, File Suffix:php).
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Faça isso para cada instância do servidor web que você quiser que rode o PHP
      </simpara>
     </listitem>
    </itemizedlist>
    <para>
     Mais detalhes sobre configuração do 
     PHP como um executável CGI pode ser encontrado aqui:
     <ulink url="&url.netscape.cgi;">&url.netscape.cgi;</ulink>
    </para>
   </sect2>
    
   <sect2 id="install.windows.sun.nsapi">
    <title>Configurando como NSAPI em servidores Sun, iPlanet e Netscape</title> 
    <para>
     Para instalar o PHP com NSAPI, faça o seguinte:
    </para>
    <itemizedlist>
     <listitem>
      <simpara>
       Copie <filename>php4ts.dll</filename> para a pasta raiz do seu sistema
       (o diretório onde você instalou o Windows)
      </simpara>
     </listitem>
     <listitem>
      <para>
       Faça uma associação de arquivo a partir da linha de comando.
       Digite as duas linhas a seguir:
       <programlisting role="shell">
<![CDATA[
assoc .php=PHPScript
ftype PHPScript=c:\php\php.exe %1 %*
]]>
       </programlisting>
      </para>
     </listitem>
     <listitem>
      <simpara>
       No Netscape Enterprise Administration Server crie
       um novo tipo mime (Category: type,
       Content-Type: magnus-internal/x-httpd-php, File Suffix: php).
      </simpara>
     </listitem>
     <listitem>
      <para>
        Edite o arquivo <filename>magnus.conf</filename> (para servidores &gt;= 6) ou
        <filename>obj.conf</filename> (para servidores &lt; 6) e adicione o seguinte:
        Você deve 
        colocar as linhas depois de <literal>mime types init</literal>.
       <programlisting>
<![CDATA[
Init fn="load-modules" funcs="php4_init,php4_execute,php4_auth_trans" shlib="c:/php/sapi/php4nsapi.dll"
Init fn="php4_init" LateInit="yes" errorString="Failed to initialise PHP!" [php_ini="c:/path/to/php.ini"]
]]>
       </programlisting>
       (PHP &gt;= 4.3.3) O parâmetro <literal>php_ini</literal> é
       opcional, mas com ele você pode colocar seu arquivo
       &php.ini; no diretório de configuração do seu servidor web.
      </para>
     </listitem>
     <listitem>
      <para>
       Configure o objeto padrão no arquivo  <filename>obj.conf</filename>
       (para classes de servidor virtual [Sun Web Server 6.0+] no
       arquivo <filename>vserver.obj.conf</filename>):
       Na seção  <literal>&lt;Object name="default"&gt;</literal>,
       coloque essa linha necessariamente após todas as linhas do tipo 'ObjectType'
       e antes das do tipo 'AddLog':
       <programlisting>
<![CDATA[
Service fn="php4_execute" type="magnus-internal/x-httpd-php" [inikey=value inikey=value ...]
]]>
       </programlisting>
       (PHP &gt;= 4.3.3) Como parâmetros adicionais,você pode adicionar alguns valores
       especiais do arquivo &php.ini;, por exemplo, você pode
       atribuir um <literal>docroot=&quot;/path/to/docroot&quot;</literal>
       específico ao contexto no qual <literal>php4_execute</literal>
       é chamado. Para valores booleanos do &php.ini;, use 0/1 como valor,
       e não <literal>&quot;On&quot;,&quot;Off&quot;,...</literal>
       (Isso não funcionará), ex.:
       <literal>zlib.output_compression=1</literal> ao invés de
       <literal>zlib.output_compression=&quot;On&quot;</literal>
      </para>
     </listitem>
     <listitem>
      <para>
       Isso só é necessário se você quiser configurar um diretório que só consiste de
       scripts PHP (como em um diretório cgi-bin):
       <programlisting>
<![CDATA[
<Object name="x-httpd-php">
ObjectType fn="force-type" type="magnus-internal/x-httpd-php"
Service fn=php4_execute [inikey=value inikey=value ...]
</Object>
]]>
       </programlisting>
       Depois disso você pode configurar um diretório na ferramenta de Administração do servidor e atribuir a ele
       um estilo <literal>x-httpd-php</literal>. Todos os arquivos neles serão executados como PHP.
       Isso é bom para esconder o uso do PHP renomeando os arquivos como <filename>.html</filename>.
      </para>
     </listitem>
     <listitem>
      <simpara>
       Reinicie seu servidor web e aplique as mudanças
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Faça isso para cada instância do servidor web que você quiser que execute o PHP
      </simpara>
     </listitem>
    </itemizedlist>
    <note>
     <para>
      Mais detalhes sobre configurar o 
      PHP como um filtro NSAPI pode ser achado aqui:
      <ulink url="&url.netscape.nsapi;">&url.netscape.nsapi;</ulink>
     </para>
    </note>
    <note>
     <para>
      O tamanho de pilha que o PHP usa depende da configuração do servidor web. Se você tiver
      problemas com scripts muito grandes, é recomendado aumentar esse tamanho com o Administrador
      do Servidor (na seção &quot;MAGNUS EDITOR&quot;).
     </para>
    </note>
   </sect2>
   
   <sect2 id="install.windows.sun.phpini">
    <title>Ambiente CGI e modificações recomendadas ao arquivo php.ini</title>
    <para>
     É importante quando escrevendo scripts PHP levar em conta o fato que Sun JSWS/Sun ONE
     WS/iPlanet/Netscape são servidores multithreaded. Por isso, todas as 
     requisições estão sendo executadas no mesmo espaço de processo (o espaço do servidor
     web) e esse espaço só tem um ambiente. Se você quiser usar variáveis
     CGI como <literal>PATH_INFO</literal>, <literal>HTTP_HOST</literal>
     etc, não é correto tentar pegá-las da maneira do PHP 3.x, usando a função
     <function>getenv</function> ou uma maneira similar (registrar globais para o
     ambiente, <literal>$_ENV</literal>). Você só iria pegar o ambiente do
     servidor web sem quaisquer variáveis CGI válidas!
    </para>
    <note>
     <para>
      Porque existem variáveis CGI (inválidas) no ambiente?
     </para>
     <para>
      Resposta: Isso é porque você inicializou o processo do servidor a partir do administrador
      do servidor que executa o script de inicialização do servidor web, você queria iniciar, como um script
      CGI (um script CGI dentro do administrador do servidor!). Isso é porque o ambiente do
      servidor tem algumas variáveis CGI do ambiente nele. Você pode testar isso
      inicializando o servidor web de outra forma que não pelo administrador do servidor. Use
      a linha de comando como usuário root e inicialize-o manualmente - você verá
      que não há variáveis ambientes do tipo CGI.
     </para>
    </note>
    <para>
     Simplesmente mude seus scripts para pegar variáveis CGI da maneira correta para
     o PHP 4.x, usando o array superglobal <literal>$_SERVER</literal>. Se você tiver 
     scripts mais antigos que usem <literal>$HTTP_HOST</literal>, etc., você deve ligar a
     diretiva <literal>register_globals</literal> no arquivo &php.ini; e mudar a ordem das 
     variáveis também (importante: remova <literal>&quot;E&quot;</literal> da diretiva,
     porque você não precisa das variávies de ambiente aqui):
     <programlisting>
<![CDATA[
variables_order = "GPCS"
register_globals = On
]]>
     </programlisting>
    </para>
   </sect2>
   
   <sect2 id="install.windows.sun.specialpages">
    <title>Uso especial para páginas de erro ou listagens de conteúdo de diretório auto-geradas (PHP &gt;= 4.3.3)</title>
    <para>
     Você pode usar o PHP para gerar as páginas de erro para <literal>"404 Not Found"</literal>
     ou similar. Adicione a seguinte linha ao objeto no arquivo <filename>obj.conf</filename> para
     cada página de erro que você queira sobrescrever:
     <programlisting>
<![CDATA[
Error fn="php4_execute" code=XXX script="/path/to/script.php" [inikey=value inikey=value...]
]]>
     </programlisting>
     onde <literal>XXX</literal> é o código de erro HTTP. Por favor apague
     qualquer outra diretiva <literal>Error</literal> que podem interferir com as suas.
     Se você quiser colocar uma página para todos os erros que podem existir, não 
     informe o parâmetro <literal>code</literal>. Seu script pode determinar qual o erro
     pela variável <literal>$_SERVER['ERROR_TYPE']</literal>.
    </para>
    <para>
     Outra possibilidade é gerar listagens de conteúdo de diretório.
     Apenas crie um script PHP que mostre uma listagem do diretório e
     substitua o valor padrão da linha Service 
     <literal>type=&quot;magnus-internal/directory&quot;</literal>
     no arquivo <filename>obj.conf</filename> com a seguinte:
     <programlisting>
<![CDATA[
Service fn="php4_execute" type="magnus-internal/directory" script="/path/to/script.php" [inikey=value inikey=value...]
]]>
     </programlisting>
     Tanto para páginas de erro e de listagem de diretório a URI original e
     a URI traduzida estão nas variáveis <literal>$_SERVER['PATH_INFO']</literal> e
     <literal>$_SERVER['PATH_TRANSLATED']</literal>.
    </para>
   </sect2>
   
   <sect2 id="install.windows.sun.notes">
    <title>Nota sobre <function>nsapi_virtual</function> e subrequisições (subrequests) (PHP &gt;= 4.3.3)</title>
    <para>
     O módulo NSAPI agora suporta a função <function>nsapi_virtual</function>
     (sinônimo (alias): <function>virtual</function>)
     para fazer subrequisições no servidor web e inserir o resultado em uma página web.
     O problema é que essa função usa algumas características não documentadas da
     biblioteca NSAPI.
    </para>
    <para>
     No Unix, isso não é um problema, porque o módulo procura automaticamente
     pelas funções necessárias e usa elas se disponíveis.
     Se não, <function>nsapi_virtual</function> é desabilitada.
    </para>
    <para>
     Limitações de tratamento de DLLs no Windows precisam da detecção
     automática do arquivo <filename>ns-httpdXX.dll</filename> mais recente.
     Isso é testado pelos servidores até a versão 6.1. Se uma versão mais nova do
     servidor Sun é usado, a detecção falha e <function>nsapi_virtual</function>
     é desabilitada.
    </para>
    <para>
     Se esse for o caso, tente o seguinte:     
     Adicione o seguinte parâmetro para <literal>php4_init</literal> em
     <filename>magnus.conf</filename>/<filename>obj.conf</filename>:
     <programlisting>
<![CDATA[
Init fn=php4_init ... server_lib="ns-httpdXX.dll"
]]>
     </programlisting>
     onde <literal>XX</literal> é o número de versão correto da DLL.
     Para obter esse valor, procure na pasta raiz do servidor para o nome correto da DLL. A
     DLL com o maior tamanho é a certa.
    </para>
    <para>
     Você pode verificar o status usando a função <function>phpinfo</function>.
    </para>
    <note>
     <para>
      Mas esteja avisado: O suporte para <function>nsapi_virtual</function> é EXPERIMENTAL!!!
     </para>
    </note>
   </sect2>
  </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

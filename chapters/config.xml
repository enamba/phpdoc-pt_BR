<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.73 Maintainer: ae Status: ready -->
 <chapter id="configuration">
  <title>Configuração</title>

  <sect1 id="configuration.file">
   <title>O arquivo de configuração</title>

   <simpara>
    O arquivo de configuração (chamado <filename>php3.ini</filename> no
    PHP 3.0, e simplesmente &php.ini; no PHP 4.0)
    é lido quando o PHP inicia. Para as versões de módulos de servidor do PHP,
    isso só acontece uma vez quando o servidor é iniciado. Para as versões
    <acronym>CGI</acronym> e <acronym>CLI</acronym> acontece em
    cada execução.
   </simpara>
   <para>
    A localização padrão do &php.ini; é uma opção de compilação (veja a <link
    linkend="faq.installation.phpini">FAQ</link> correspondente), mas pode ser modificada
    para as versões <acronym>CGI</acronym> e <acronym>CLI</acronym> com o opcional
    <literal>-c</literal> (mais informações em
    <link linkend="features.commandline">utilizando
    o PHP na linha de comando</link>). Você também pode utilizar a
    variavável ambiente <literal>PHPRC</literal> para colocar caminhos adicionais
    para a procura do arquivo &php.ini;.
   </para>
   <para>
    Note que nem todas as diretivas do PHP estão documentadas a seguir. Para uma lista completa,
    leia o seu próprio e bem comentado arquivo &php.ini;. Você também pode ver a
    <ulink url="&url.php.cvs.phpini;">versão mais atualizada</ulink> diretamente do CVS.
   </para>
   <note>
    <para>
     O valor default da diretiva
     <link linkend="ini.register-globals">register_globals</link> mudou de
     <emphasis>on</emphasis> para <emphasis>off</emphasis> a partir do PHP
     <ulink url="&url.php.release4.2.0;">4.2.0</ulink>.
    </para>
   </note>
   <para>
    <example>
     <title>&php.ini; example</title>
     <programlisting role="ini">
<![CDATA[
; qualquer texto depois de um ponto e vírgula não delimitado (;) é ignorado
[php] ; marcadores de seção (texto entre colchetes) também são ignorados
; Valores booleanos podem ser:
;    true, on, yes
; ou false, off, no, none
register_globals = off
magic_quotes_gpc = yes

; você pode delimitar strings com aspas
include_path = ".:/usr/local/lib/php"

; barras invertidas são tratadas da mesma maneira que outros caracteres
include_path = ".;c:\php\lib"
]]>
</programlisting>
<!-- TODO: add more details about values and expressions -->
    </example>
   </para>

   <simpara>
    Quando usando o PHP como um módulo do Apache, você também pode mudar
    as definições de configuração usando diretivas na configuração dos arquivos
    Apache e dos arquivos .htaccess (Você irá precisar de privilégios
    "AllowOverride Options" ou "AllowOverride All")
   </simpara>

   <simpara>
    Com o PHP 3.0, existem diretivas Apache que correspondem a cada
    definição de configuração no nome <filename>php3.ini</filename>,
    exceto o nome predefinido por "php3_".
   </simpara>

   <para>
    Com o PHP 4.0, existem várias diretivas do Apache que lhe permitem
    mudar a configuração PHP dentro do arquivo de
    configuração do Apache.
    <variablelist>
     <varlistentry>
      <term>
       <systemitem role="directive">php_value</systemitem>
       <parameter>nome</parameter>
       <parameter>valor</parameter>
      </term>
      <listitem>
       <para>
        Isso define o valor da variável especificada.</para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       <systemitem role="directive">php_flag</systemitem>
       <parameter>nome</parameter>
       <parameter>on|off</parameter>
      </term>
      <listitem>
       <para>
        Isto é usado para definir uma opção de configuração Booleana.</para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       <systemitem role="directive">php_admin_value</systemitem>
       <parameter>nome</parameter>
       <parameter>valor</parameter>
      </term>
      <listitem>
       <para>
        Isto define o valor da variável especificada. Definições de
        configuração "Admin" só podem ser definidas a partir dos
        arquivos principais de configuração do Apache, e não
        dos arquivos .htaccess.</para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       <systemitem role="directive">php_admin_flag</systemitem>
       <parameter>nome</parameter>
       <parameter>on|off</parameter>
      </term>
      <listitem>
       <para>
        Isto é usado para definir uma opção de configuração Booleana.</para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
   <para>
    <example>
     <title>Exemplo de configuração do Apache</title>
     <programlisting role="ini">
<![CDATA[
<IfModule mod_php4.c>
  php_value include_path ".:/usr/local/lib/php"
  php_admin_flag safe_mode on
</IfModule>
<IfModule mod_php3.c>
  php3_include_path ".:/usr/local/lib/php"
  php3_safe_mode on
</IfModule>
]]>
</programlisting>
    </example>

    <note>
     <para>
      Constantes PHP não existem fora do PHP. Por exemplo, no
      <filename>httpd.conf</filename> não adianta utilizar-se de constantes PHP
      como <constant>E_ALL</constant> ou <constant>E_NOTICE</constant>
      para configurar a diretiva <link linkend="ini.error-reporting">error_reporting</link>,
      pois elas não tem nenhum sentido e serão avaliados como
      <emphasis>0</emphasis>. Nesses casos, utilize seus valores de bit.
      Essas constantes só podem ser utilizadas dentro do &php.ini;
     </para>
    </note>
   </para>

   <simpara>
    Você pode visualizar as definições dos valores de configuração na
    saída de <function>phpinfo</function>. Você também pode acessar
    os valores de definições de configuração originais usando
    <function>ini_get</function> ou <function>get_cfg_var</function>.
   </simpara>

   <sect2 id="ini.sect.general">
    <title>Diretivas Gerais de Configuração</title>
    <para>
     <variablelist>
      <varlistentry id="ini.allow-url-fopen">
       <term>
        <parameter>allow_url_fopen</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
         Esta opção habilita o URL-aware fopen wrappers que possibilitam
         o acesso a objetos URL como arquivos. Wrappers padrão são fornecidos para
         o acesso de <link linkend="features.remote-files">arquivos remotos</link>
         usando os protocolos FTP ou HTTP, algumas extensões como zlib podem
         registrar wrappers adicionais.
        </para>

        <note>
         <para>
          Esta opção foi introduzida imediatamente após o lançamento da versão
          4.0.3. Para versões superiores incluindo a 4.0.3, você só pode desabilitar essa
          função na compilação usando o argumento
          <link linkend="install.configure.disable-url-fopen-wrapper"><parameter>
          --disable-url-fopen-wrapper</parameter></link> na configuração (configure).
         </para>
        </note>
        <warning>
         <para>
          No Windows, as seguintes funções não suportam o acesso a arquivos
          remotos: <function>include</function>,
          <function>include_once</function>, <function>require</function> e
          <function>require_once</function>.
         </para>
        </warning>

       </listitem>
      </varlistentry>

      <varlistentry id="ini.asp-tags">
       <term>
        <parameter>asp_tags</parameter>
        <type>booleano</type>
       </term>
       <listitem>
        <simpara>
         Habilita o uso de tags no estilo ASP &lt;% %&gt; em adição às tags
         &lt;?php ?&gt; usuais. Isso inclui a impressão resumida
         de valor de variável &lt;%= $valor %&gt;. Para maiores informações
         veja <link
         linkend="language.basic-syntax.phpmode">Escapando do HTML</link>.
        </simpara>

        <note>
         <para>
          O suporte para tags no estilo ASP foi adicionado na versão 3.0.4.
         </para>
        </note>

       </listitem>
      </varlistentry>

      <varlistentry id="ini.auto-append-file">
       <term>
        <parameter>auto_append_file</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Especifica o nome do arquivo que é automaticamente interpretado
         após o arquivo principal. O arquivo é incluído como se tivesse sido
         chamado com a função <function>include</function>, logo
         <link linkend="ini.include-path">include_path</link> é usado.</para>
        <para>
         O valor especial <systemitem class="constant">none</systemitem>
         desabilita o auto-appending.
         <note>
          <simpara>
           Se o script é finalizado com <function>exit</function>,
           auto-append <emphasis>não</emphasis> ocorrerá.</simpara>
         </note>
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.auto-prepend-file">
       <term>
        <parameter>auto_prepend_file</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Especifica o nome do arquivo que é automaticamente interpretado
         antes do arquivo principal. O arquivo é incluído como se tivesse sido
         chamado com a função <function>include</function>, logo
         <link linkend="ini.include-path">include_path</link> é usado.</para>
        <para>
         O valor especial <systemitem class="constant">none</systemitem>
         desabilita o auto-prepending.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.disable-functions">
       <term>
        <parameter>disable_functions</parameter>
        <type>string</type>
       </term>
       <listitem>
        <simpara>
         Esta diretiva permite a você desabilitar certas funções por
         <link linkend="security">motivos de segurança</link>. Informe
         uma lista de nomes de funções separados por vírgula. disable_functions
         não é afetado pelo <link linkend="ini.safe-mode">Safe Mode</link>.
        </simpara>
        <simpara>
         Esta diretiva só pode ser configurada no &php.ini; Por exemplo, você
         não pode modificá-la no <filename>httpd.conf</filename>.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.display-errors">
       <term>
        <parameter>display_errors</parameter>
        <type>booleano</type>
       </term>
       <listitem>
        <para>
         Isso determina se os erros deve ser impressos na tela
         como parte da saída HTML ou não.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.doc-root">
       <term>
        <parameter>doc_root</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         O "root directory" do PHP no servidor. Só é usado se não
         estiver vazio. Se o PHP é configurado com <link
         linkend="ini.safe-mode">safe mode</link>, nenhum
         arquivo acima desse diretório é acessível.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.engine">
       <term>
        <parameter>engine</parameter>
        <type>booleano</type>
       </term>
       <listitem>
        <para>
         Essa diretiva só é realmente útil com a versão de módulo Apache
         do PHP. É usado por sites que queiram habilitar ou desabiliar
         a interpretação PHP num servidor por diretório ou
         por domínio virtual. Colocando <userinput>engine
         off</userinput> nos devidos lugares no arquivo
         <filename>httpd.conf</filename>, o PHP pode ser habilitado ou
         desabilitado.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.error-log">
       <term>
        <parameter>error_log</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Nome do arquivo onde erros de script devem ser guardados. Se o
         valor especial <literal>syslog</literal> for usado, os erros serão
         enviados para o logger do sistema. No UNIX, isto significa
         syslog(3) e no Windows NT isto significa o event log. O
         system logger não é suportado no Windows 95.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.error-reporting">
       <term>
        <parameter>error_reporting</parameter>
        <type>inteiro</type>
       </term>
       <listitem>
        <para>
         Define o nível de publicação de erros. O parâmetro é um inteiro
         representado um campo de bits ou constantes nomeadas. Os níveis e constantes
         do error_reporting estão descritos na seção
         <link linkend="features.error-handling">Manipulação de Erros</link>
         do manual e no &php.ini;. Para configurá-lo durante a execução, utilize a função
         <function>error_reporting</function>. Veja também a diretiva
         <link linkend="ini.display-errors">display_errors</link>.
        </para>
        <para>
         O valor default não mostra erros de nível <constant>E_NOTICE</constant>.
         Você pode querer mostrá-los durante o desenvolvimento de suas aplicações.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.file-uploads">
       <term>
        <parameter>file_uploads</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
         Permite ou não o
         <link linkend="features.file-upload">upload de arquivos via HTTP</link>.
         Veja também as diretivas 
         <link linkend="ini.upload-max-filesize">upload_max_filesize</link>,
         <link linkend="ini.upload-tmp-dir">upload_tmp_dir</link> e
         <link linkend="ini.post-max-size">post_max_size</link>.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.html-errors">
       <term>
        <parameter>html_errors</parameter>
        <type>booleano</type>
       </term>
       <listitem>
        <para>
         Desabilita tags HTML nas mensagens de erro. O novo formato de mensagens de erro HTML produzem
         links clicáveis que direcionam o usuário para a página descrevendo o erro ou
         a função que causou o erro. Essas referências são alteradas por
         <link linkend="ini.docref-root">docref_root</link> e
         <link linkend="ini.docref-ext">docref_ext</link>.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.docref-root">
       <term>
        <parameter>docref_root</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         O novo formato de mensagens de erro contém uma referência para a página descrevendo o erro ou
         a função onde o erro foi causado. Você pode baixar o
         manual em sua língua e alterar essa diretiva para a URL de sua cópia
         local. Por exemplo, se a cópia local do manual está em '/manual', você pode
         simplesmente utilizar <userinput>docref_root=/manual/</userinput>. Opcionalmente você pode
         configurar docref_ext para acertar as extensões dos arquivos:
         <userinput>docref_ext=.html</userinput>. Também é possível usar referências
         externas. Por exemplo, você pode fazer
         <userinput>docref_root=http://www.php.net/manual/pt_BR/</userinput>.
        </para>
        <note>
         <para>
          O valor de docref_root precisa terminar com uma barra '/'.
         </para>
        </note>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.docref-ext">
       <term>
        <parameter>docref_ext</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Veja <link linkend="ini.docref-root">docref_root</link>.
        </para>
        <note>
         <para>
          O valor de docref_ext precisa começar com um ponto '.'.
         </para>
        </note>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.open-basedir">
       <term>
        <parameter>open_basedir</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Limita os arquios que podem ser abertos pelo PHP à arvore de diretórios
         especificada.
        </para>
        <para>
         Quando um script tenta abrir um arquivo com,
         por exemplo, fopen or gzopen, a localização desse arquivo é
         checada. Quando o arquivo está fora da árvore de diretórios especificada,
         o PHP irá se recusar a abrí-lo. Todos os links simbólicos são resolvidos,
         logo não é possível evitar essa restrição com um symlink.
        </para>
        <para>
         O valor especial <systemitem class="constant">.</systemitem>
         indica que o diretório onde o script está armazenado será
         usado como o diretório base.
        </para>
        <para>
         No Windows, separe os diretórios com ponto-e-vírgula. Em todos os outros
         sistemas, separe os diretórios com dois pontos. Como um módulo Apache,
         os caminhos de open_basedir de diretórios pais agora são
         automaticamente herdados.
        </para>
        <para>
          A restrição imposta com open_basedir é na verdade um prefixo, e
          não um nome de diretório. Isso significa que "open_basedir =
          /dir/incl" também permite acesso a "/dir/include" e "/dir/incls"
          se eles existem. Quando você deseja restringir o acesso somente
          ao diretório específico, o termine com uma barra. Por exemplo:
          "open_basedir = /dir/incl/"
        </para>
        <note>
         <para>
          O supporte para múltiplos diretórios foi adicionado na versão 3.0.7.
         </para>
        </note>
        <para>
         O padrão é permitir que todos os arquivos sejam abertos.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.gpc-order">
       <term>
        <parameter>gpc_order</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Define a ordem de interpretação da variável GET/POST/COOKIE . A
         definição padrão para essa diretiva é "GPC". Definindo-a para
         "GP", por exemplo, fará com que o PHP ignore completamente cookies
         e irá sobescrever quaisquer variáveis enviadas com o método GET por variáveis
         do método POST com o mesmo nome.
        </para>
        <para>
         Note que esta opção não está disponível no PHP 4.
         Use <link linkend="ini.variables-order">variables_order</link>
         ao invez.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.variables-order">
       <term>
        <parameter>variables_order</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Define a ordem de prioridade das variáveis EGPCS (Environment,
         GET, POST, Cookie, Server). A definição padrão para essa
         diretiva é "EGPCS". Definindo como "GP", por exemplo,
         fará com que o PHP ignore completamente as variáveis de ambiente
         (environment) cookies e server, e sobrescrever qualquer
         variavel do metodo GET com variaveis do modo POST com o mesmo nome.
        </para>
        <para>
         Veja também <link linkend="ini.register-globals">register_globals</link>.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.ignore-user-abort">
       <term>
        <parameter>ignore_user_abort</parameter>
        <type>boleano</type>
       </term>
       <listitem>
        <para>
         &true; por default. Se alterado para &false;, os scripts serão termiandos
         tão logo quanto ele tentar imprimir algo e descobrir que o usuário cancelou
         a conexão.
        </para>
        <para>
         Veja também: <function>ignore_user_abort</function>.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.implicit-flush">
       <term>
        <parameter>implicit_flush</parameter>
        <type>booleano</type>
       </term>
       <listitem>
        <para>
         &false; por default. Alterando para &true, diz ao PHP para chamar as
         rotinas de impressão/output automaticamente depois de cada comando de saída.
         Isto é equivalente a chamar a função
         <function>flush</function> depois de cada chamada a
         <function>print</function> ,<function>echo</function> ou depois de qualquer outro
         bloco <literal>HTML</literal>.
        </para>
        <para>
         Quanto utilizando o <literal>PHP</literal> em um ambiente Web, ativar
         esta opção tem sérias implicações na performance e é geralmente
         recomendado para propósitos de debug. Este valor é &true; por
         default quando operando sobre a <literal>CLI SAPI</literal>.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.include-path">
       <term>
        <parameter>include_path</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Especifica uma lista de diretórios onde as funções
         <function>require</function>, <function>include</function>
         e <function>fopen_with_path</function> procuram por
         arquivos. O formato é o mesmo da variável de ambiente <envar>PATH</envar>
         do sistema: uma lista de diretórios separados por
         dois pontos no UNIX ou ponto-e-vírgula no Windows.
         <example>
          <title>include_path no UNIX</title>
          <programlisting role="php3.ini">
<![CDATA[
include_path=.:/home/httpd/php-lib
]]>
          </programlisting>
         </example>
         <example>
          <title>include_path no Windows</title>
          <programlisting role="php3.ini">
<![CDATA[
include_path=".;c:\www\phplib"
]]>
          </programlisting>
         </example>
         O valor padrão para essa diretiva é <literal>.</literal>
         (apenas o diretório atual).</para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.log-errors">
       <term>
        <parameter>log_errors</parameter>
        <type>booleano</type>
       </term>
       <listitem>
        <para>
         Diz se as mensagens de erro devem ser salvas no
         arquivo de log do servidor. Logo, esta opção é específica por servidor.</para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.magic-quotes-gpc">
       <term>
        <parameter>magic_quotes_gpc</parameter>
        <type>booleano</type>
       </term>
       <listitem>
        <para>
         Define o estado de magic_quotes para as operações
         GPC (Get/Post/Cookie). Quando os magic_quotes estão habilitados (on),
         todas ' (aspas simples), &quot; (aspas duplas), \ (barra invetida) e NULL's são
         automaticamente prefixadas (escaped) com a barra invertida. Se magic_quotes_sybase
         também está habilitado (on), uma aspa simples é escapada como aspa simples
         ao invés da barra invertida.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.magic-quotes-runtime">
       <term>
        <parameter>magic_quotes_runtime</parameter>
        <type>booleano</type>
       </term>
       <listitem>
        <para>
         Se <parameter>magic_quotes_runtime</parameter> é habilitado,
         a maioria das funções que retornam dados de qualquer tipo de fonte
         externa incluindo banco de dados e arquivos de texto terão aspas
         escapadas com barra invertida. Se
         <parameter>magic_quotes_sybase</parameter> também estiver habilitado (on),
         aspas simpes são escapadas com outra aspa simples ao invés de
         barra invertida.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.magic-quotes-sybase">
       <term>
        <parameter>magic_quotes_sybase</parameter>
        <type>booleano</type>
       </term>
       <listitem>
        <para>
         Se <parameter>magic_quotes_sybase</parameter> também estiver habilitado (on),
         aspas simples é escapada como aspa simples ao invés de barra invertida
         se <parameter>magic_quotes_gpc</parameter> ou
         <parameter>magic_quotes_runtime</parameter> estiverem habilitados.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.max-execution-time">
       <term>
        <parameter>max_execution_time</parameter>
        <type>inteiro</type>
       </term>
       <listitem>
        <para>
         Isto define a quantide máxima de tempo em segundos que um script é permitido
         rodar antes de ser finalizado pelo interpretador. Isto previne
         scripts mal escritos de travar o servidor. O 
         valor padrão é <literal>30</literal>.
        </para>
        <para>
         O tempo máximo de execução não é afetado por qualquer system calls,
         a função <function>sleep</function>, etc.  Veja a função
         <function>set_time_limit</function> para mais
         detalhes.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.memory-limit">
       <term>
        <parameter>memory_limit</parameter>
        <type>inteiro</type>
       </term>
       <listitem>
        <para>
         Isto define a quantidade máxima de memória em bytes que um script
         é capaz de alocar. Isto ajuda a prevenir scripts mal escritos de consumir
         toda a memória disponível no servidor.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.precision">
       <term>
        <parameter>precision</parameter>
        <type>inteiro</type>
       </term>
       <listitem>
        <simpara>
         O número de digitos significativos mostrado em números de ponto flutuante.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.register-argc-argv">
       <term>
        <parameter>register_argc_argv</parameter>
        <type>booleano</type>
       </term>
       <listitem>
        <simpara>
         Diz ao PHP se declara as variaveis argv &amp; argc
         (que conteriam a informação do GET).
        </simpara>
        <simpara>
          Veja também <link linkend="features.commandline">PHP em linha de comando</link>.
          Esta diretiva se tornou disponível no PHP 4.0.0 e
          estava sempre habilitanda antes desta versão.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.post-max-size">
       <term>
        <parameter>post_max_size</parameter>
        <type>integer</type>
       </term>
       <listitem>
        <simpara>
         Define o tamanho máximo dos dados informados via POST. Esse parâmetro afeta
         o upload de arquivos. Para poder receber arquivos grandes, este valor precisa ser maior
         que o <link
          linkend="ini.upload-max-filesize">upload_max_filesize</link>.
        </simpara>
        <simpara>
         Se o limite de memória foi informado no script de configuração,  <link
         linkend="ini.memory-limit">memory_limit</link> afetará o
         upload de arquivos. Ou seja, o <link
         linkend="ini.memory-limit">memory_limit</link> também precisa
         maior que <link
         linkend="ini.post-max-size">post_max_size</link>.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.register-globals">
       <term>
        <parameter>register_globals</parameter>
        <type>booleano</type>
       </term>
       <listitem>
        <para>
         Diz quando registrar as variáveis EGPCS (Environment, GET,
         POST, Cookie, Server) como globais ou não. Por exemplo,
         se register_globals = on, a URL
         <literal>http://www.example.com/test.php?id=3</literal> irá criar a veriável
         <varname>$id</varname>. Ou ainda <varname>$DOCUMENT_ROOT</varname> a partir
         <varname>$_SERVER['DOCUMENT_ROOT']</varname>. Você pode deixar desligá-la
         se não quiser encher o escopo global de seu script com
         dados de usuários. Desde o PHP <ulink url="&url.php.release4.2.0;">4.2.0</ulink>,
         esta diretiva vem com o default <emphasis>off</emphasis>. Essa preferência é consequência
         da alteração das <link linkend="reserved.variables">Variáveis Predefinidas
         </link> do PHP, principalmente as
         <link linkend="language.variables.superglobals">superglobals</link>:
         <varname>$_ENV</varname>, <varname>$_GET</varname>,
         <varname>$_POST</varname>, <varname>$_COOKIE</varname> e
         <varname>$_SERVER</varname>. Leia o capítulo sobre segurança em
         <link linkend="security.registerglobals">Usando register_globals</link>
         para mais informações.
        </para>
        <para>
         Observe que <systemitem role="directive">register_globals</systemitem>
         não pode ser modificada no tempo de execução (<function>ini_set</function>). Entretanto, você pode
         fazer isso no <filename>.htaccess</filename> se seu hospedador permitir, como descrito
         acima. Um exemplo de diretiva no arquivo <filename>.htaccess</filename>:
         <userinput>php_flag register_globals on</userinput>.
        </para>
        <note>
         <para>
          <systemitem role="directive">register_globals</systemitem> é afetada
          pela diretiva
          <link linkend="ini.variables-order">variables_order</link>.
         </para>
        </note>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.short-open-tag">
       <term>
        <parameter>short_open_tag</parameter>
        <type>booleano</type>
       </term>
       <listitem>
        <para>
         Diz quando a forma curta (<userinput>&lt;? ?&gt;</userinput>
         das tags do PHP deve ser permitida. Se você quer usar PHP em
         combinação com XML, você pode desabilita essa opção e
         usar <userinput>&lt;?xml ?&gt;</userinput> inline. De outra forma, você
         pode imprimir com o PHP assim: <userinput>&lt;?php echo '&lt;?xml
         version="1.0"'; ?&gt;</userinput>. Se desabilitada, você precisá utilizar a
         forma longa de abertura do PHP (<userinput>&lt;?php ?&gt;</userinput>).
        </para>
        <note>
         <para>
          Esta diretiva afeta o atalho <userinput>&lt;?=</userinput>,
          que é idêntico a <userinput>&lt;? echo</userinput>. A utilização deste
          atalho requer <systemitem role="directive">short_open_tag</systemitem>
          ativado.
         </para>
        </note>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.sql.safe-mode">
       <term>
        <parameter>sql.safe_mode</parameter>
        <type>booleano</type>
       </term>
       <listitem>
        <para>
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.track-errors">
       <term>
        <parameter>track_errors</parameter>
        <type>booleano</type>
       </term>
       <listitem>
        <para>
         Se habilitado, a última mensagem de erro sempre estará presente
         na variável global <symbol>$php_errormsg</symbol>.</para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.track-vars">
       <term>
        <parameter>track_vars</parameter>
        <type>booleano</type>
       </term>
       <listitem>
        <para>
         Se habilitado, então as variáveis Environment, GET, POST, Cookie,
         e Server poderão ser encontradas nas matrizes associativas globais
         <varname>$_ENV</varname>,
         <varname>$_GET</varname>,
         <varname>$_POST</varname>,
         <varname>$_COOKIE</varname> e
         <varname>$_SERVER</varname>.
        </para>
        <para>
         Note que no PHP 4.0.3, <systemitem
         role="directive">track_vars</systemitem> sempre está habilitada.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.upload-tmp-dir">
       <term>
        <parameter>upload_tmp_dir</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         O diretório temporário usado para armazenar arquivos
         durante o upload de arquivos. Deve ter permissão de escrita para qualquer usuário em
         que o PHP esteja sendo rodado.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.upload-max-filesize">
       <term>
        <parameter>upload_max_filesize</parameter>
        <type>inteiro</type>
       </term>
       <listitem>
        <para>
         O tamanho máximo de um upload de arquivo. O valor é
         expresso em bytes.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.user-dir">
       <term>
        <parameter>user_dir</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         O caminho base do usado como diretório home do usuário
         para arquivos PHP, por exemplo
         <literal>public_html</literal>.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.warn-plus-overloading">
       <term>
        <parameter>warn_plus_overloading</parameter>
        <type>booleano</type>
       </term>
       <listitem>
        <para>
         Se habilitado, esta opção faz com que o PHP imprima um aviso quando o operador
         mais (<literal>+</literal>) é usado em variáveis string.
         Isto é para tornar mais fácil encontrar scripts que precisam ser reescritos
         para substituir pelo concatenador de strings
         (<literal>.</literal>).
        </para>
       </listitem>
      </varlistentry>

     </variablelist>
    </para>
   </sect2>

   <sect2 id="ini.sect.safe-mode">
    <title>Diretivas de Configuração de Modo Seguro (Safe Mode)</title>
    <variablelist>

     <varlistentry id="ini.safe-mode">
      <term>
       <parameter>safe_mode</parameter>
       <type>booleano</type>
      </term>
      <listitem>
       <para>
        Quando habilitar o modo seguro do PHP, leia os capítulos
        <link linkend="security">Capítulo de Segurança</link> e
        <link linkend="features.safe-mode">Safe Mode</link> para
        maiores informações
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ini.safe-mode-gid">
      <term>
       <parameter>safe_mode_gid</parameter>
       <type>booleano</type>
      </term>
      <listitem>
       <para>
        Configura para a utilização do <literal>UID</literal> (&false;) ou
        <literal>GID</literal> (&true;) na checagem de acesso
        dos arquivos. Leia em <link linkend="features.safe-mode">Safe Mode</link> para
        maiores informações.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ini.safe-mode-exec-dir">
      <term>
       <parameter>safe_mode_exec_dir</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Se o PHP está sendo usado em modo seguro, <function>system</function> e
        as outras funções de execução do sistema recusam-se a iniciar programas que
        não estejam neste diretório.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ini.safe-mode-include-dir">
      <term>
       <parameter>safe_mode_include_dir</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        A checagem de <literal>UID</literal>/<literal>GID</literal> pode ser ignorada
        quando incluindo arquivos para esse diretório e subdiretórios (o diretório
        precisa estar em <link linkend="ini.include-path">include_path</link>
        ou o caminho completo precisa ser incluído).
       </para>
       <simpara>
        A partir do PHP 4.2.0, esta diretiva pode ter caminhos separados por
        vírgulas, assim com a diretiva include_path, em vez de
        apenas um único diretório.
       </simpara>
      </listitem>
     </varlistentry>

    </variablelist>
   </sect2>

   <sect2 id="ini.sect.debugger">
    <title>Diretivas ed Configuração do Debugger</title>
    <variablelist>

     <varlistentry id="ini.debugger.host">
      <term>
       <parameter>debugger.host</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Nome do DNS ou endereço IP da máquina usada pelo debuger.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ini.debugger.port">
      <term>
       <parameter>debugger.port</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Número da porta usada pelo debugger.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ini.debugger.enabled">
      <term>
       <parameter>debugger.enabled</parameter>
       <type>booleano</type>
      </term>
      <listitem>
       <para>
        Se o debugger está habilitado ou não.
       </para>
      </listitem>
     </varlistentry>

    </variablelist>
   </sect2>

   <sect2 id="ini.sect.extension">
    <title>Diretivas de Carregamento de Extensão</title>
    <variablelist>
     
     <varlistentry id="ini.enable-dl">
      <term>
        <parameter>enable_dl</parameter>
        <type>booleano</type>
      </term>
      <listitem>
        <para>
         Esta diretiva só é realmente útil na versão do módulo Apache
         do PHP. Você pode habilitar ou desabilitar o carregamento
         dinâmico de extensões PHP com <function>dl</function> em servidor
         por virtual ou por diretório.
        </para>
        <para>
         A principal razão em desabilitar o carregamento dinâmico é
         a segurança. Com carregamento dinâmico, é possível ignorar todas
         as restrições safe_mode e open_basedir.
        </para>
        <para>
         O padrão é permitir o carregamento dinâmico, exceto ao ser usado o
         modo seguro.  No modo seguro, é sempre impossível usar
         <function>dl</function>.
        </para>
      </listitem>
     </varlistentry>
      
     <varlistentry id="ini.extension-dir">
      <term>
       <parameter>extension_dir</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Nesse diretório o PHP deve procurar por extensões dinamicamente
        carregáveis.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ini.extension">
      <term>
       <parameter>extension</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Que extensões dinamicamente carregáveis devem ser carregadas quando o PHP
        inicia.
       </para>
      </listitem>
     </varlistentry>
     
    </variablelist>
   </sect2>

   <sect2 id="ini.sect.sesam">
    <title>Diretivas de Configuração SESAM</title>
    <variablelist>
     
     <varlistentry id="ini.sesam-oml">
      <term>
       <parameter>sesam_oml</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Nome da biblioteca BS2000 PLAM contendo os módulos de driver SESAM
        carregáveis.  Exigido para usar funções SESAM. A biblioteca
        BS2000 PLAM deve estar definida ACCESS=READ,SHARE=YES
        porque ela deve ser lida pelo id de usuário do servidor Apache.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ini.sesam-configfile">
      <term>
       <parameter>sesam_configfile</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Nome do arquivo de configuração da aplicação  SESAM.  Exigido ao usar
        funções SESAM.  O arquivo BS2000 deve ser lido pelo id de usuário
        do servidor apache.
       </para>
       <para>
        O arquivo de configuração da aplicação irá normalmente conter um
        arquivo de configuração como (veja o manual de
        referência SESAM):
        <informalexample>
         <programlisting role="bs2000">
<![CDATA[
CNF=B
NAM=K
NOTYPE
]]>
         </programlisting>
        </informalexample>
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry id="ini.sesam-messagecatalog">
      <term>
       <parameter>sesam_messagecatalog</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Nome do arquivo de catálogo de mensagem SESAM.  Na maioria dos casos, esta
        diretiva é desnecessária. Apenas se o arquivo de mensagem SESAM
        não estiver instalado na tabela de arquivo de mensagen do sistema BS2000,
        pode então ser definida por esta diretiva.
       </para>
       <para>
        O catálgo de mensagem deve ser definido ACCESS=READ,SHARE=YES porque ele deve
        ser lido pelo id de usuário do servidor apache.
       </para>
      </listitem>
     </varlistentry>

    </variablelist>
   </sect2>


   <sect2 id="ini.sect.browscap">
    <title>Diretivas de Configuração de Capacidade de Navegador</title>
    <variablelist>

     <varlistentry id="ini.browscap">
      <term>
       <parameter>browscap</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Nome do arquivo de capacidade do navegador. Veja também
        <function>get_browser</function>.
       </para>
      </listitem>
     </varlistentry>
     
    </variablelist>
   </sect2>

  </sect1>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

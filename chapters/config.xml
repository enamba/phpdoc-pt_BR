<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.107 Maintainer: ae Status: ready -->
 <chapter id="configuration">
  <title>Configuração</title>

  <sect1 id="configuration.file">
   <title>O arquivo de configuração</title>

   <simpara>
    O arquivo de configuração (chamado <filename>php3.ini</filename> no
    PHP 3.0, e simplesmente &php.ini; no PHP 4.0)
    é lido quando o PHP inicia. Para as versões de módulos de servidor do PHP,
    isso só acontece uma vez quando o servidor é iniciado. Para as versões
    <acronym>CGI</acronym> e <acronym>CLI</acronym> acontece em
    cada execução.
   </simpara>
   <para>
    A localização padrão do &php.ini; é uma opção de compilação (veja a <link
    linkend="faq.installation.phpini">FAQ</link> correspondente), mas pode ser modificada
    para as versões <acronym>CGI</acronym> e <acronym>CLI</acronym> com o opcional
    <literal>-c</literal> (mais informações em
    <link linkend="features.commandline">utilizando
    o PHP na linha de comando</link>). Você também pode utilizar a
    variavável ambiente <literal>PHPRC</literal> para colocar caminhos adicionais
    para a procura do arquivo &php.ini;.
   </para>
   <note>
    <para>
     O servidor web Apache muda o diretório root na inicialização fazendo que
     o PHP tente ler o &php.ini; a partir da raiz do
     sistema de arquivos, se existir.
    </para>
   </note>
   <para>
    Note que nem todas as diretivas do PHP estão documentadas a seguir. Para uma lista completa,
    leia o seu próprio e bem comentado arquivo &php.ini;. Você também pode ver a
    <ulink url="&url.php.cvs.phpini;">versão mais atualizada</ulink> diretamente do CVS.
   </para>
   <note>
    <para>
     O valor default da diretiva
     <link linkend="ini.register-globals">register_globals</link> mudou de
     <emphasis>on</emphasis> para <emphasis>off</emphasis> a partir do PHP
     <ulink url="&url.php.release4.2.0;">4.2.0</ulink>.
    </para>
   </note>
   <para>
    <example>
     <title>&php.ini; example</title>
     <programlisting role="ini">
<![CDATA[
; qualquer texto depois de um ponto e vírgula não delimitado (;) é ignorado
[php] ; marcadores de seção (texto entre colchetes) também são ignorados
; Valores booleanos podem ser:
;    true, on, yes
; ou false, off, no, none
register_globals = off
magic_quotes_gpc = yes

; você pode delimitar strings com aspas
include_path = ".:/usr/local/lib/php"

; barras invertidas são tratadas da mesma maneira que outros caracteres
include_path = ".;c:\php\lib"
]]>
</programlisting>
<!-- TODO: add more details about values and expressions -->
    </example>
   </para>
  </sect1>

  <sect1 id="configuration.changes">
   <title>Como alterar as configurações definidas</title>

   <sect2 id="configuration.changes.apache">
    <title>Rodando o <literal>PHP</literal> como módulo do Apache</title>
    <simpara>
     Quando usando o PHP como um módulo do Apache, você também pode mudar
     as definições de configuração usando diretivas na configuração do
     Apache (&httpd.conf;) e
     dos arquivos &htaccess; (Você irá precisar de privilégios
     "AllowOverride Options" ou "AllowOverride All")
    </simpara>

    <para>
     Com o PHP 4.0, existem várias diretivas do Apache que lhe permitem
     mudar a configuração PHP diretamente a partir dos arquivos de configuração
     do Apache. Para uma lista das diretivas que podem ser alteradas, veja aquelas marcadas com
     <constant>PHP_INI_ALL</constant>, <constant>PHP_INI_PERDIR</constant>,
     ou <constant>PHP_INI_SYSTEM</constant>, relacionadas na documentação
     da função <function>ini_set</function>.
    </para>

    <note>
     <simpara>
      Com o PHP 3.0, existem diretivas Apache que correspondem a cada
      definição de configuração do <filename>php3.ini</filename>,
      exceto os nomes prefixados por "php3_".
     </simpara>
    </note>

    <para>
     <variablelist>
      <varlistentry>
       <term>
        <systemitem role="directive">php_value</systemitem>
        <parameter>nome</parameter>
        <parameter>valor</parameter>
       </term>
       <listitem>
        <para>
         Define o valor da variável especificada.
         Pode ser utilizada somente com diretivas do tipo <constant>PHP_INI_ALL</constant> e <constant>PHP_INI_PERDIR</constant>.
         Para limpar um valor configurado anteriormente, utilize <literal>none</literal> como parâmetro.
         <informalexample>
          <programlisting role="ini">
<![CDATA[
php_value auto_prepend_file none
]]>
          </programlisting>
         </informalexample>
        </para>
        <note>
         <simpara>
          Não utilize <literal>php_value</literal> para configurar valores booleandos.
          Em vez disso, use <literal>php_flag</literal> (veja abaixo).
         </simpara>
        </note>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <systemitem role="directive">php_flag</systemitem>
        <parameter>nome</parameter>
        <parameter>on|off</parameter>
       </term>
       <listitem>
        <para>
         Isto é usado para definir uma opção de configuração Booleana.
         Somente pode ser utilizada em diretivas do tipo <constant>PHP_INI_ALL</constant> e <constant>PHP_INI_PERDIR</constant>.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <systemitem role="directive">php_admin_value</systemitem>
        <parameter>nome</parameter>
        <parameter>valor</parameter>
       </term>
       <listitem>
        <para>
         Define o valor da variável especificada.
         Isto NÃO pode ser utilizado em arquivos &htaccess;.
         Qualquer tipo de diretiva modificada com <systemitem role="directive">php_admin_value</systemitem>
         não pode ser sobrescrita por arquivos &htaccess; ou diretivas virtualhost.
         Para limpar um valor configurado antetiormente, utilize <literal>none</literal> como parâmetro.
         <informalexample>
          <programlisting role="ini">
<![CDATA[
php_admin_value open_basedir none
]]>
          </programlisting>
         </informalexample>
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <systemitem role="directive">php_admin_flag</systemitem>
        <parameter>nome</parameter>
        <parameter>on|off</parameter>
       </term>
       <listitem>
        <para>
         Utilizado para definir uma opção de configuração Booleana.
         Isto NÃO pode ser utilizado em arquivos &htaccess;.
         Qualquer diretiva configurada com <systemitem role="directive">php_admin_flag</systemitem>
         não pode ser sobrescrita por arquivos &htaccess; ou diretivas virtualhost.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
    <para>
     <example>
      <title>Exemplo de configuração do Apache</title>
      <programlisting role="ini">
<![CDATA[
<IfModule mod_php4.c>
  php_value include_path ".:/usr/local/lib/php"
  php_admin_flag safe_mode on
</IfModule>
<IfModule mod_php3.c>
  php3_include_path ".:/usr/local/lib/php"
  php3_safe_mode on
</IfModule>
]]>
      </programlisting>
     </example>

     <note>
      <para>
       Constantes PHP não existem fora do PHP. Por exemplo, no
       &htaccess; não pode utilizar constantes PHP
       como <constant>E_ALL</constant> ou <constant>E_NOTICE</constant>
       para configurar a diretiva <link linkend="ini.error-reporting">error_reporting</link>,
       pois elas não tem nenhum sentido e serão avaliados como
       <emphasis>0</emphasis>. Nesses casos, utilize seus valores de bit.
       Essas constantes só podem ser utilizadas dentro do &php.ini;
      </para>
     </note>
    </para>
   </sect2>

   <sect2 id="configuration.changes.other">
    <title>Outras interfaces para o <literal>PHP</literal></title>
    <para>
     Independentemente da interface do <literal>PHP</literal>, você pode mudar
     certos valores em tempo de execução em seus scripts através
     <function>ini_set</function>. A tabela seguinte explica
     em que nível as diretivas podem ser modificadas.
    </para>
    <para>
     <table>
     <title>Definições das constantes PHP_INI_*</title>
     <tgroup cols="3">
      <thead>
       <row>
        <entry>Constante</entry>
        <entry>Valor</entry>
        <entry>Significado</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>PHP_INI_USER</entry>
        <entry>1</entry>
        <entry>Diretiva pode ser modificada em seus scripts</entry>
       </row>
       <row>
        <entry>PHP_INI_PERDIR</entry>
        <entry>2</entry>
        <entry>
         Diretiva pode ser modificada no &php.ini;, &htaccess; ou
         &httpd.conf;
        </entry>
       </row>
       <row>
        <entry>PHP_INI_SYSTEM</entry>
        <entry>4</entry>
        <entry>
         Diretiva pode ser modificada no &php.ini; ou &htaccess;
        </entry>
       </row>
       <row>
        <entry>PHP_INI_ALL</entry>
        <entry>7</entry>
        <entry>Diretiva pode ser modificada em qualquer lugar</entry>
       </row>
      </tbody>
     </tgroup>
    </table>
    </para>
    <para>
     Você pode visualizar as configurações das diretivas na
     saída de <function>phpinfo</function>. Você também pode
     acessar os valores individuais das configurações utilizando
     <function>ini_get</function> ou <function>get_cfg_var</function>.
    </para>
   </sect2>
  </sect1>

  <sect1 id="configuration.directives">
   <title>Miretivas de configuração diversas</title>
   <para>
    Esta não é uma lista completa das diretivas do PHP. Muitas diretivas são listadas
    em seus lugares apropriados como, por exemplo, informações sobre diretivas
    de sessões estão no
    <link linkend="ref.session">capítulo sobre sessões</link>.
   </para>

  <sect2 id="ini.sect.httpd-options">
   <title>Opções Httpd</title>
    <para>
     <table>
      <title>Opções Httpd</title>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>Nome</entry>
         <entry>Padrão</entry>
         <entry>Alterável</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>async_send</entry>
         <entry>"0"</entry>
         <entry>PHP_INI_ALL</entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
    <para>
    </para>
   </sect2>

  <sect2 id="ini.sect.language-options">
   <title>Opções da Linguagem</title>
   <para>
   <table>
    <title>Opções gerais da linguagem</title>
    <tgroup cols="3">
     <thead>
      <row>
       <entry>Nome</entry>
       <entry>Padrão</entry>
       <entry>Alterável</entry>
      </row>
     </thead>
     <tbody>
     <row>
      <entry>short_open_tag</entry>
      <entry>On</entry>
      <entry>PHP_INI_SYSTEM|PHP_INI_PERDIR</entry>
     </row>
     <row>
      <entry>asp_tags</entry>
      <entry>Off</entry>
      <entry>PHP_INI_SYSTEM|PHP_INI_PERDIR</entry>
     </row>
     <row>
      <entry>precision</entry>
      <entry>"14"</entry>
      <entry>PHP_INI_ALL</entry>
     </row>
     <row>
      <entry>y2k_compliance</entry>
      <entry>Off</entry>
      <entry>PHP_INI_ALL</entry>
     </row>
     <row>
      <entry>allow_call_time_pass_reference</entry>
      <entry>On</entry>
      <entry>PHP_INI_SYSTEM|PHP_INI_PERDIR</entry>
     </row>
     <row>
      <entry>expose_php</entry>
      <entry>On</entry>
      <entry>PHP_INI_SYSTEM</entry>
     </row>
    </tbody>
    </tgroup>
   </table>
   </para>

   &ini.descriptions.title; 

    <para>
     <variablelist>
      <varlistentry id="ini.short-open-tag">
       <term>
        <parameter>short_open_tag</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
         Informa quando a tag reduzida (<userinput>&lt;? ?&gt;</userinput>)
         do PHP pode ser permitida. Se você quiser usar o PHP em
         combinação com XML, você pode desligar essa opção para poder
         utilizar <userinput>&lt;?xml ?&gt;</userinput> inline. De outra forma, você
         pode imprimir com o PHP, por exemplo: <userinput>&lt;?php echo '&lt;?xml
         version="1.0"'; ?&gt;</userinput>. Se desligado, você precisará utilizar a
         forma longa da tag de abertura do PHP (<userinput>&lt;?php ?&gt;</userinput>).
        </para>
        <note>
         <para>
          Esta diretiva também afeta o atalho <userinput>&lt;?=</userinput>,
          que é idêntico a <userinput>&lt;? echo</userinput>. A utilização desse
          atalho requer <systemitem role="directive">short_open_tag</systemitem>
          ligado.
         </para>
        </note>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.asp-tags">
       <term>
        <parameter>asp_tags</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <simpara>
         Ativa a utilização das tags estilo ASP &lt;% %&gt; em adição as
         tags &lt;?php ?&gt;. Isto inclui o atalho de
         impressão de valores &lt;%= $var %&gt;. Para
         mais informações, veja <link
         linkend="language.basic-syntax.phpmode">Alternando do HTML</link>.
        </simpara>
        <note>
         <para>
          O suporte a tags estilo APS foi acrescentado no 3.0.4.
         </para>
        </note>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.precision">
       <term>
        <parameter>precision</parameter>
        <type>integer</type>
       </term>
       <listitem>
        <simpara>
         O número de dígitos significantes exibidos em números de ponto flutuante.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.y2k-compliance">
       <term>
        <parameter>y2k_compliance</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <simpara>
         Força a especificação Ano 2002 (poderá causar problemas com browsers não compatíveis)
        </simpara>
       </listitem>
      </varlistentry>


      <varlistentry id="ini.allow-call-time-pass-reference">
       <term>
        <parameter>allow_call_time_pass_reference</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
         Especifica a habilidade em forçar que argumentos possam ser passados por referência
         na chamada de uma função. Este método é obsoleto e logo não será mais
         suportado nas futuras versões do PHP/Zend. O método recomendado para
         especificar que argumentos devem ser passados por referência é pela declaração da
         função. Você é encorajado em tentar desligar essa opção e verificar
         se seus scripts trabalham adequadamente de forma a garantir que elas irã funcionar
         nas futuras versões da linguagem (você receberá um alerta cada vez que
         utilizar esse recurso, e o argumento será passado por valor em vez de por
         referência).
        </para>
        <para>
         Veja também <link linkend="language.references">Referências Explicadas</link>.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.expose-php">
       <term>
        <parameter>expose_php</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
         Decide se o PHP poderá expor o fato de que ele está instalado no servidor
         (acrescentando sua assinatura no header do servidor web). Isto não causa problemas
         de segurança de qualquer forma, mas torna possível determinar se você usa o PHP
         em seu servidor ou não.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
   </sect2>

  <sect2 id="ini.sect.resource-limits">
   <title>Limitação de recursos</title>
   <para>
    <table>
     <title>Limitação de recursos</title>
     <tgroup cols="3">
      <thead>
       <row>
        <entry>Nome</entry>
        <entry>Padrão</entry>
        <entry>Alterável</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>memory_limit</entry>
        <entry>"8M"</entry>
        <entry>PHP_INI_ALL</entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>

   &ini.descriptions.title;

   <para>
    <variablelist>
     <varlistentry id="ini.memory-limit">
      <term>
       <parameter>memory_limit</parameter>
       <type>integer</type>
      </term>
      <listitem>
       <para>
        Isto configura a quantidade máxima de memória, em bytes, que um script
        poderá alocar. Isto ajuda a prevenir que scripts mal
        escritos acabem com toda a memória disponível do servidor. Para poder
        utilizar esta diretiva, você precisa ativá-la na compilação. Assim,
        sua linha de configuração deve incluir:
        <literal>--enable-memory-limit</literal>. Note que você pode configura-la
        para -1 se não quiser impor nenhum limite para a utilização da memória.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
   <para>
    Veja também <link linkend="ini.max-execution-time">max_execution_time</link>.
   </para>
  </sect2>

  <sect2 id="ini.sect.data-handling">
   <title>Manipulação de dados</title>
    <para>
     <table>
      <title>Opções configuráveis para manipulação de dados</title>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>Nome</entry>
         <entry>Padrão</entry>
         <entry>Alterável</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>track-vars</entry>
         <entry>"On"</entry>
         <entry>PHP_INI_??</entry>
        </row>
        <row>
         <entry>arg_separator.output</entry>
         <entry>"&amp;"</entry>
         <entry>PHP_INI_ALL</entry>
        </row>
        <row>
         <entry>arg_separator.input</entry>
         <entry>"&amp;"</entry>
         <entry>PHP_INI_SYSTEM|PHP_INI_PERDIR</entry>
        </row>
        <row>
         <entry>variables_order</entry>
         <entry>"EGPCS"</entry>
         <entry>PHP_INI_ALL</entry>
        </row>
        <row>
         <entry>register_globals</entry>
         <entry>"Off"</entry>
         <entry>PHP_INI_PERDIR|PHP_INI_SYSTEM</entry>
        </row>
        <row>
         <entry>register_argc_argv</entry>
         <entry>"On"</entry>
         <entry>PHP_INI_PERDIR|PHP_INI_SYSTEM</entry>
       </row>
       <row>
        <entry>register_long_arrays</entry>
        <entry>"On"</entry>
        <entry>PHP_INI_PERDIR|PHP_INI_SYSTEM</entry>
       </row>
       <row>
        <entry>post_max_size</entry>
        <entry>"8M"</entry>
        <entry>PHP_INI_SYSTEM|PHP_INI_PERDIR</entry>
       </row>
       <row>
        <entry>gpc_order</entry>
        <entry>"GPC"</entry>
        <entry>PHP_INI_ALL</entry>
       </row>
       <row>
        <entry>auto_prepend_file</entry>
        <entry>""</entry>
        <entry>PHP_INI_SYSTEM|PHP_INI_PERDIR</entry>
       </row>
       <row>
        <entry>auto_append_file</entry>
        <entry>""</entry>
        <entry>PHP_INI_SYSTEM|PHP_INI_PERDIR</entry>
       </row>
        <row>
         <entry>default_mimetype</entry>
         <entry>"text/html"</entry>
         <entry>PHP_INI_ALL</entry>
        </row>
        <row>
         <entry>default_charset</entry>
         <entry>"iso-8859-1"</entry>
         <entry>PHP_INI_ALL</entry>
        </row>
        <row>
         <entry>always_populate_raw_post_data</entry>
         <entry>"0"</entry>
         <entry>PHP_INI_SYSTEM|PHP_INI_PERDIR</entry>
        </row>
        <row>
         <entry>allow_webdav_methods</entry>
         <entry>"0"</entry>
         <entry>PHP_INI_SYSTEM|PHP_INI_PERDIR</entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>

    &ini.descriptions.title;

    <para>
     <variablelist>
      <varlistentry id="ini.track-vars">
       <term>
        <parameter>track_vars</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
         Se ativado, quaisquer variáveis Environment, GET, POST, Cookie e Server
         encontradas poderão ser acessadas nos arrays globais associativos
         <varname>$_ENV</varname>,
         <varname>$_GET</varname>,
         <varname>$_POST</varname>,
         <varname>$_COOKIE</varname> e
         <varname>$_SERVER</varname>.
        </para>
        <para>
         Note que a partir do PHP 4.0.3, <systemitem
         role="directive">track_vars</systemitem> está sempre ativado.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.arg-separator.output">
       <term>
        <parameter>arg_separator.output</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         O separador de parâmetros em URLs geradas pelo PHP.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.arg-separator.input">
       <term>
        <parameter>arg_separator.input</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Lista dos separador(es) utilizados pelo PHP para interpretar URLs em variáveis.
        </para>
        <note>
             <para>
          Cada caracter nesta diretiva é considerado como um separador!
         </para>
        </note>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.variables-order">
       <term>
        <parameter>variables_order</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Configura a ordem de interpretação das variáveis EGPCS (Environment, GET, POST, Cookie e
         Server). O default dessa
         diretiva é "EGPCS". Configurando para "GP", por exemplo,
         fará com que o PHP ignore completamente variáveis de ambiente (E),
         cookies (C) e do servidor (S), sendo que qualquer variável GET será sobrescrita por
         qualquer variável do método POST com o mesmo nome.
        </para>
        <para>
         Veja também <link linkend="ini.register-globals">register_globals</link>.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.register-globals">
       <term>
        <parameter>register_globals</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
         Ativa ou não o registro de variáveis EGPCS (Environment, GET,
         POST, Cookie e Server) como variáveis globais. Por exemplo:
         se register_globals = on, a URL
         <literal>http://www.example.com/test.php?id=3</literal> irá criar a variável
         <varname>$id</varname>. Ou, <varname>$DOCUMENT_ROOT</varname> de
         <varname>$_SERVER['DOCUMENT_ROOT']</varname>. Você pode desligar essa
         diretiva se você não deseja sujar o escopo global de seus scripts com
         dados do usuário. Desde o PHP <ulink url="&url.php.release4.2.0;">4.2.0</ulink>,
         o padrão dessa diretiva é <emphasis>off</emphasis>. É preferível utilizar as
          <link linkend="reserved.variables">variáveis predefinidas
         </link> do PHP, como as
         <link linkend="language.variables.superglobals">superglobals</link>:
         <varname>$_ENV</varname>, <varname>$_GET</varname>,
         <varname>$_POST</varname>, <varname>$_COOKIE</varname> e
         <varname>$_SERVER</varname>. Leia cuidadosamente o capitulo de segurança em
         <link linkend="security.registerglobals">Utilizando register_globals</link>
         para mais informações.
        </para>
        <para>
         Veja que <systemitem role="directive">register_globals</systemitem>
         não pode ser alterado em tempo de execução (<function>ini_set</function>). Entretanto, você pode
         utilizar o &htaccess; se seu host permitir como descrito
         anteriormente. Um exemplo de entrada do &htaccess;:
         <userinput>php_flag register_globals on</userinput>.
        </para>
        <note>
         <para>
          <systemitem role="directive">register_globals</systemitem> é afetada
          pela diretiva <link linkend="ini.variables-order">variables_order</link>
          .
         </para>
        </note>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.register-argc-argv">
       <term>
        <parameter>register_argc_argv</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <simpara>
         Configura quando o PHP deve declarar ou não as variáveis argv e argc
         (que podem conter dados do método GET).
        </simpara>
        <simpara>
         Veja também <link linkend="features.commandline">Utilizando o PHP em linha de comando</link>.
         Além, essa diretiva foi criada no PHP 4.0.0 e
         sempre foi "ativa" antes disso.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.register-long-arrays">
       <term>
        <parameter>register_long_arrays</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <simpara>
         Configura quando o PHP vai ou não registrar os grandes e obsoletos arrays
         <varname>$HTTP_*_VARS</varname>
         <link linkend="language.variables.predefined">pré
         definidos</link>. Se ativo (default), grandes variáveis arrays PHP
         como a <varname>$HTTP_GET_VARS</varname> serão defininas.
         Se você não estiver usando-as, é recomendado desligar essa opção,
         por questão de performance. Em vez desses arrays, utilize os arrays superglobais
         como <varname>$_GET</varname>.
        </simpara>
        <simpara>
         Esta diretiva se tornou disponível no PHP 5.0.0.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.post-max-size">
       <term>
        <parameter>post_max_size</parameter>
        <type>integer</type>
       </term>
       <listitem>
        <simpara>
         Configura o tamanho máximo dos dados postados. Esta configuração também afeta
         o upload de arquivos. Para receber arquivos grandes, esse valor precisa ser maior
         que <link linkend="ini.upload-max-filesize">upload_max_filesize</link>.
        </simpara>
        <simpara>
         Se o limite de memória estiver ativado em seu script de configuração, <link
         linkend="ini.memory-limit">memory_limit</link> também afeta
         o upload de arquivos. Falando diretamente,
         <link linkend="ini.memory-limit">memory_limit</link> precisa ser
         maior que <parameter>post_max_size</parameter>.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.gpc-order">
       <term>
        <parameter>gpc_order</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Informa a ordem de interpretação das variáveis GET/POST/COOKIE. O
         padrão dessa diretiva é "GPC". Configurando para
         "GP", por exemplo, fará com que o PHP ignore completamente cookies
         e que sobrescreva qualquer dado postado via GET por variáveis postados
         via POST que tenham o mesmo nome.
        </para>
        <note>
         <para>
          Esta opção não está disponível no PHP 4.
          Utilize <link linkend="ini.variables-order">variables_order</link>
          no seu lugar.
         </para>
        </note>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.auto-prepend-file">
       <term>
        <parameter>auto_prepend_file</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Especifica o nome do arquivo que será automaticamente interpretado
         antes do arquivo principal. O arquivo é incluído como se ele fosse
         chamado com a função <function>include</function>, então
         <link linkend="ini.include-path">include_path</link> é utilizado.</para>
        <para>
         O valor especial <systemitem class="constant">none</systemitem>
         desabilita a auto inclusão.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.auto-append-file">
       <term>
        <parameter>auto_append_file</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Especifica se o nome do arquivo que será automaticamente interpretado
         depois do arquivo principal. O arquivo é incluído como se ele fosse
         chamada a função <function>include</function>, então
         <link linkend="ini.include-path">include_path</link> é utilizado.</para>
        <para>
         O valor especial <systemitem class="constant">none</systemitem>
         desabilita a auto inclusão.
         <note>
          <simpara>
           Se o script é terminado com <function>exit</function>,
           a auto inclusão <emphasis>não</emphasis> irá ocorrer.</simpara>
         </note>
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.default-mimetype">
       <term>
        <parameter>default_mimetype</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.default-charset">
       <term>
        <parameter>default_charset</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         A partir da versão 4.0b4, o PHP sempre emite a codificação de caracter por padrão no
         header Content-type:. Para desabilitar o envio do código de página, simplesmente
         deixe a diretiva em branco.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.always-populate-raw-post-data">
       <term>
        <parameter>always_populate_raw_post_data</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
         Sempre preenche a variável $HTTP_RAW_POST_DATA.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.allow-webdav-methods">
       <term>
        <parameter>allow_webdav_methods</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
         Permite a manipulação de headers HTTP com scripts PHP (com
         PROPFIND, PROPPATCH, MOVE, COPY, etc).
         Se você quiser obter os dados postados dessas requisições, ative
         <link linkend="ini.always-populate-raw-post-data">
         always_populate_raw_post_data</link> para isso.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
    <para>
     Veja também <link linkend="ini.magic-quotes-gpc">magic_quotes_gpc</link>,
     <link linkend="ini.magic-quotes-runtime">magic-quotes-runtime</link>,
     e
     <link linkend="ini.magic-quotes-sybase">magic_quotes_sybase</link>.
    </para>
   </sect2>

  <sect2 id="ini.sect.path-directory">
   <title>Paths and Directories</title>
    <para>
     <table>
      <title>Opções de configuração de caminhos e diretórios</title>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>Nome</entry>
         <entry>Padrão</entry>
         <entry>Alterável</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>include_path</entry>
         <entry>PHP_INCLUDE_PATH</entry>
         <entry>PHP_INI_ALL</entry>
        </row>
        <row>
         <entry>doc_root</entry>
         <entry>PHP_INCLUDE_PATH</entry>
         <entry>PHP_INI_SYSTEM</entry>
        </row>
        <row>
         <entry>user_dir</entry>
         <entry>NULL</entry>
         <entry>PHP_INI_SYSTEM</entry>
        </row>
        <row>
         <entry>extension_dir</entry>
         <entry>PHP_EXTENSION_DIR</entry>
         <entry>PHP_INI_SYSTEM</entry>
        </row>
        <row>
         <entry>cgi.force_redirect</entry>
         <entry>"1"</entry>
         <entry>PHP_INI_SYSTEM</entry>
        </row>
        <row>
         <entry>cgi.redirect_status_env</entry>
         <entry>""</entry>
         <entry>PHP_INI_SYSTEM</entry>
        </row>
        <row>
         <entry>fastcgi.impersonate</entry>
         <entry>"0"</entry>
         <entry>PHP_INI_SYSTEM</entry>
        </row>
        <row>
         <entry>cgi.rfc2616_headers</entry>
         <entry>"0"</entry>
         <entry>PHP_INI_SYSTEM</entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>

    &ini.descriptions.title;

    <para>
     <variablelist>
      <varlistentry id="ini.include-path">
       <term>
        <parameter>include_path</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Especifica a lista de diretórios onde as funções
         <function>require</function>, <function>include</function>
         and <function>fopen_with_path</function> procurarão por
         arquivos. O formato é o mesmo que o da variável ambiente
         <envar>PATH</envar>: uma lista de diretórios, separador por
         vírgula no UNIX ou ponto e vírgula no Windows.
        </para>
        <para>
         <example>
          <title>include_path UNIX</title>
          <programlisting role="php.ini">
<![CDATA[
include_path=".:/php/includes"
]]>
          </programlisting>
         </example>
        </para>
        <para>
         <example>
          <title>include_path Windows</title>
          <programlisting role="php.ini">
<![CDATA[
include_path=".;c:\php\includes"
]]>
          </programlisting>
         </example>
        </para>
        <para>
         Colocar um <literal>.</literal> no include_path permite
         includes relativos a partir do diretório atual.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.doc-root">
       <term>
        <parameter>doc_root</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         O "diretório root" do PHP no servidor. Utilizado somente se for
         preenchido. Se o PHP estiver configurado com &safemode;, nenhum arquivo acima
         desse diretório será acessível.
         Se o PHP não estiver compilado com FORCE_REDIRECT, você DEVE configurar doc_root
         se estiver rodando o PHP como CGI sob qualquer servidor web (que não o IIS)
         Outra alternativa é configurar a diretiva <link linkend="ini.cgi.force-redirect">
         cgi.force_redirect</link>, abaixo.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.user-dir">
       <term>
        <parameter>user_dir</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         O caminho base do usado como diretório home do usuário
         para arquivos PHP, por exemplo
         <literal>public_html</literal>.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.extension-dir">
       <term>
        <parameter>extension_dir</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Diretório de onde o PHP poderá carregar dinamicamente as
         extensões. Veja também <link linkend="ini.enable-dl">enable_dl</link>
         e <function>dl</function>.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.extension">
       <term>
        <parameter>extension</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Que extensões dinamicamente carregáveis devem ser carregadas quando o PHP
         inicia.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.cgi.force-redirect">
       <term>
        <parameter>cgi.force_redirect</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
         cgi.force_redirect é necessário para prover segurança quando rodando o PHP como
         módulo sob a maioria dos servidores web. Se deixado indefinido, o PHP assume como
         ativo. Você pode desligá-lo <emphasis>SOB SEU RISCO</emphasis>.
        </para>
        <note>
         <para>
          Usuários Windows: Você PODE desligar isso no ISS, e de fato, você DEVE fazê-lo.
          Para que o OmniHTTPD ou Xitami funcionem, você PRECISA desligá-lo.
         </para>
        </note>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.cgi.redirect-status-env">
       <term>
        <parameter>cgi.redirect_status_env</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Se cgi.force_redirect estiver ativado, e se não estiver rodando o PHP sob os
         servidores web Apache ou Netscape (iPlanet), você PRECISARÁ configurar uma
         variável de ambiente que o PHP procurará para saber se ele pode
         continuar a execução.
        </para>
        <note>
         <para>
          Configurar essa variável PODERÁ causar problemas de segurança,
          POR ISSO SAIBA QUE ESTEJA FAZENDO PRIMEIRO.
         </para>
        </note>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.fastcgi.impersonate">
       <term>
        <parameter>fastcgi.impersonate</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         FastCGI sob o IIS (em sistemas baseados em WinNT) suporta a habilidade de despersonalizar
         tokens de segurança da chamado do cliente. Isto permite ao ISS definir o
         contexto de segurança da requisição que está rodando. mod_fastcgi sob o Apache
         ainda não suporta esse recurso (17/03/2002).
         Configure 1 se estiver rodando sob o ISS. O padrão é zero.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.cgi.rfc2616-headers">
       <term>
        <parameter>cgi.rfc2616_headers</parameter>
        <type>int</type>
       </term>
       <listitem>
        <para>
         Diz ao PHP que tipo de header utilizar quando enviando a resposta
         HTTP. Se configurado para 0, o PHP envia um header Status:, suportado
         pelo Apache e outros servidores web. Quando configurado para 1, o PHP
         irá enviar headers compatíveis com o <ulink url="&url.rfc;2616">RFC 2616</ulink>.
         Deixe configurado para 0 a não ser que saiba o que está fazendo.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
   </sect2>

  <sect2 id="ini.sect.file_uploads">
   <title>Upload de arquivos</title>
    <para>
     <table>
      <title>Opções de configuração para upload de arquivos</title>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>Nome</entry>
         <entry>Padrão</entry>
         <entry>Alterável</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>file_uploads</entry>
         <entry>"1"</entry>
         <entry>PHP_INI_SYSTEM</entry>
        </row>
        <row>
         <entry>upload_tmp_dir</entry>
         <entry>NULL</entry>
         <entry>PHP_INI_SYSTEM</entry>
        </row>
        <row>
         <entry>upload_max_filesize</entry>
         <entry>"2M"</entry>
         <entry>PHP_INI_SYSTEM|PHP_INI_PERDIR</entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>

    &ini.descriptions.title;
    
    <para>
     <variablelist>
      <varlistentry id="ini.file-uploads">
       <term>
        <parameter>file_uploads</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
         Permite ou não
         <link linkend="features.file-upload">upload de arquivos HTTP</link>. Veja
         também
         <link linkend="ini.upload-max-filesize">upload_max_filesize</link>,
         <link linkend="ini.upload-tmp-dir">upload_tmp_dir</link> e
         <link linkend="ini.post-max-size">post_max_size</link> directives.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.upload-tmp-dir">
       <term>
        <parameter>upload_tmp_dir</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         O diretório temporário utilizado para armazenar arquivos quando realizando
         o upload de arquivos. Ele precisa ter permissão de escrita para qualquer usuário que
         for rodar o <literal>PHP</literal>. Se não especificado, o PHP utilizará o default do sistema.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.upload-max-filesize">
       <term>
        <parameter>upload_max_filesize</parameter>
        <type>integer</type>
       </term>
       <listitem>
        <para>
         O tamanho máximo de um arquivo para upload.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
   </sect2>

  <sect2 id="ini.sql-general">
   <title>SQL Geral</title>
    <para>
     <table>
      <title>Opções de configuração SQL gerais</title>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>Nome</entry>
         <entry>Padrão</entry>
         <entry>Alterável</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>sql.safe_mode</entry>
         <entry>"0"</entry>
         <entry>PHP_INI_SYSTEM</entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>

    &ini.descriptions.title;

    <para>
     <variablelist>
      <varlistentry id="ini.sql.safe-mode">
       <term>
        <parameter>sql.safe_mode</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
   </sect2>

   <sect2 id="ini.sect.debugger">
    <title>Diretivas de configuração do debugador</title>
    <variablelist>

     <varlistentry id="ini.debugger.host">
      <term>
       <parameter>debugger.host</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Nome DNS ou endereço IP do host utilizado pelo debugador.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ini.debugger.port">
      <term>
       <parameter>debugger.port</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Porta utilizado pelo debugador.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ini.debugger.enabled">
      <term>
       <parameter>debugger.enabled</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
        Controle de ativação do debugador.
       </para>
      </listitem>
     </varlistentry>

    </variablelist>
   </sect2>

  </sect1>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

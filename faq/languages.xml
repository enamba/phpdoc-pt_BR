<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: n/a Maintainer: narigone Status: ready -->
 <chapter xml:id="faq.languages" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>PHP e outras linguagens</title>
  <titleabbrev>PHP e outras linguagens</titleabbrev>

  <para>
   PHP é a melhor linguagem para programar para web,
   mas e as outras linguagens?
  </para>

  <qandaset>
   <qandaentry xml:id="faq.languages.asp">
    <question>
     <para>PHP vs. ASP?</para>
    </question>
    <answer>
     <para>
      ASP não é uma linguagem propriamente dita, é um acrônimo para Active
      Server Pages, a verdadeira linguagem usada para programar ASP é Visual
      Basic Script ou JScript. A maior desvantagem de ASP é fato de ser
      um sistema proprietário que só tem suporte nativo no Microsoft
      Internet Information Server (IIS). Isso limita a sua disponibilidade a
      servidores baseados em Win32. Existem alguns projetos em andamento
      que permitem que ASP seja executado em outros ambientes e webservers:
      <link xlink:href="&url.instantasp;">InstantASP</link>
      da <link xlink:href="&url.halcyon;">Halcyon</link> (comercial),
      Chili!Soft ASP da 
      <link xlink:href="&url.chilisoft;">Chili!Soft</link> (comercial).
      ASP tem a fama de ser mais lento e incómoda que o PHP, menos estável
      também. Algumas das vantagens do ASP é o fato de usar primeiramente
      VBScript, é relativamente fácil de aprender se você já
      souber como programar em Visual Basic. Suporte a ASP também é
      disponibilizado por padrão no servidor IIS, o que torna fácil de fazer
      funcionar. Os componentes nativos do ASP são muito limitados, então se você
      precisar usar capacidades "avançadas", como interagir com servidores FTP,
      é necessário comprar os componentes adicionais.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.languages.aspconverter">
    <question>
     <para>Existe um conversor de ASP para PHP?</para>
    </question>
    <answer>
     <para>
      Sim, o server-side <link xlink:href="&url.asp2php;">asp2php</link>
      é frequentemente referido assim como essa opção 
      <link xlink:href="&url.asptranslator;"> client-side</link>.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.languages.coldfusion">
    <question>
     <para>PHP vs. Cold Fusion?</para>
    </question>
    <answer>
     <para>
      PHP é considerada mais rápida e mais eficiente para tarefas complexas 
      de programação e para tentar novas idéias. PHP é geralmente citado
      como mais estável e por consumir menos recursos também. Cold Fusion
      tem melhor tratamento de erro, abstração de banco de dados e tratamento de datas
      embora abstração de banco de dados é tratado no PHP 4. Outra
      coisa que é listada como um dos fortes do Cold Fusion é seu excelente
      engine de busca, mas já foi mencionado que um engine de busca não é
      algo que deve ser incluído em uma linguagem de script para web. PHP
      roda em quase todas as plataformas que existem; Cold Fusion só está disponível 
      em Win32, Solaris, Linux e HP/UX. Cold Fusion tem uma boa IDE e
      é geralmente mais fácil de se começar, enquanto o PHP inicialmente
      requer mais conhecimento de programação. Cold Fusion é tem
      como alvo não-programadores, enquanto PHP é focado para programadores.
     </para>
     <para>
      Um ótimo resumo feito por Michael J Sheldon nesse assunto foi
      postado para a lista de e-mail do PHP. Uma cópia pode ser achada
      em <link xlink:href="&url.coldfusion.summary;">&url.coldfusion.summary;</link>.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.languages.perl">
    <question>
     <para>PHP vs. Perl?</para>
    </question>
    <answer>
     <para>
      A maior vantagem do PHP sobre Perl é que PHP foi feita para criação
      de scripts para web enquanto Perl foi feita para fazer muito mais e pode,
      por consequência disso, ficar muito complicado. A flexibilidade / complexibilidade
      de Perl torna fácil escrever código que outro autor / codificador
      tenha trabalho de ler. PHP tem um formato mais rígido e menos confuso
      sem perder flexibilidade. PHP é mais fácil de integrar com HTML
      já existente que Perl. PHP tem quase todas as funcionalidades 'boas' do
      Perl: construções, sintaxe e por aí vai, sem se torna tão complicado
      quanto Perl pode ser. Perl é uma linguagem testada e aprovada, existe
      desde o final dos anos 80, mas PHP está amadurecendo muito rápido.
     </para>
    </answer>
   </qandaentry>

  </qandaset>
 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

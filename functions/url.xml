<?xml version="1.0" encoding="iso-8859-1"?>
 <reference id="ref.url">
  <title>Funções URL</title>
  <titleabbrev>URLs</titleabbrev>

  <refentry id="function.base64-decode">
   <refnamediv>
    <refname>base64_decode</refname>
    <refpurpose>Decodifica dados codificados com MIME base64</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>base64_decode</function></funcdef>
      <paramdef>string <parameter>encoded_data</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>base64_decode</function> decodes
     <parameter>encoded_data</parameter> e retorna o dado
     original.  O retorno pode ser binário.
    </para>
    <para>
     Veja também: <function>base64_encode</function>, RFC-2045 seção
     6.8.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.base64-encode">
   <refnamediv>
    <refname>base64_encode</refname>
    <refpurpose>Codifica dados com MIME base64</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>base64_encode</function></funcdef>
      <paramdef>string <parameter>dados</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>base64_encode</function> returns
     <parameter>Dado</parameter> codificado com base64.  Esta codificação
     é designada para que dados binários durem no transporte sobre
     camadas de transorte que não são 8-bit clean, como mensagens de e-mail.
    </para>
    <para>
     Dados codificados na Base-64 tem aproximadamente 33% mais espaço que dos dados
     originais.</para>
    <para>
     Veja também:
     <function>base64_decode</function>,
     <function>chunk_split</function>,
     RFC-2045 seção 6.8.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.parse-url">
   <refnamediv>
    <refname>parse_url</refname>
    <refpurpose>Separa uma URL e retorna seus componentes</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>parse_url</function></funcdef>
      <paramdef>string <parameter>url</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Esta função retorna um array associativo qualquer um dos vários
     componentes de uma URL que estão presentes. Isto inclui 
     "scheme", "host", "port", "user", "pass", "path", "query", e
     "fragment".
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.urldecode">
   <refnamediv>
    <refname>urldecode</refname>
    <refpurpose>Decodifica uma URL codificada</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>urldecode</function></funcdef>
      <paramdef>string <parameter>str</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Decodifica qualquer <literal>%<replaceable>##</replaceable></literal>
     codificado na string.  A string decodificada é o valor de retorno.
     <example>
      <title><function>urldecode</function> exemplo</title>
      <programlisting role="php">
$a = split ('&amp;', $querystring);
$i = 0;
while ($i &lt; count ($a)) {
    $b = split ('=', $a [$i]);
    echo 'Value for parameter ', htmlspecialchars (urldecode ($b [0])),
         ' is ', htmlspecialchars (urldecode ($b [1])), "&lt;BR>";
    $i++;
}
      </programlisting>
     </example>
    </para>
    <para>
     Veja também <function>urlencode</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.urlencode">
   <refnamediv>
    <refname>urlencode</refname>
    <refpurpose>Codifica uma string URL</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>urlencode</function></funcdef>
      <paramdef>string <parameter>str</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Retorna uma string onde todos caracteres não-alfanuméricos exceto
     <literal>-_.</literal> é substituido por um sinal de porcento
     (<literal>%</literal>) seguidos por dois digítos hexadecimais e espaços
     codificados como um sinal de 'mais' (<literal>+</literal>).  É codificando
     o mesmo caminho que um dado enviados por um formulário WWW é codificado , que é a 
     mesma coisa como em um tipo de mídia
     <literal>application/x-www-form-urlencoded</literal>.
     Isto difere da codificação RFC1738 (veja
     <function>rawurlencode</function>) por rasões históricas,
     espaçoes são codificados como um sinal de 'mais' (+). Esta função é
     conveniente quando codificado uma string para ser usada em uma parte de consulta
     em uma URL, como um conveniente meio de passar variáveis para uma próxima página:
     <example>
      <title><function>urlencode</function> exemplo</title>
      <programlisting role="php">
echo '&lt;A HREF="mycgi?foo=', urlencode ($userinput), '">';
      </programlisting>
     </example>
    </para>
    <para>
     Veja também <function>urldecode</function>.
    </para>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->

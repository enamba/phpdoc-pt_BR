<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: n/a Maintainer: felipe Status: ready -->
<sect1 xml:id="language.types.object">
 <title>Objetos</title>

 <sect2 xml:id="language.types.object.init">
  <title>Inicialização de objetos</title>

  <para>
   Para criar um objeto, você usa a instrução <literal>new</literal>,
   criando uma instância do objeto em uma variável.

   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
class foo
{
    function do_foo()
    {
        echo "Fazendo foo.";
    }
}

$bar = new foo;
$bar->do_foo();
?>
]]>
    </programlisting>
   </informalexample>
  </para>
  <simpara>
   Para uma explicação completa, consulte a seção <link
   linkend="language.oop">Classes e Objetos</link>.
  </simpara>
 </sect2>

 <sect2 xml:id="language.types.object.casting">
  <title>Convertendo para objeto</title>

  <para>
   Se um objeto é convertido para objeto, ele não é modificado. Se um valor
   de um outro tipo é convertido para objeto, uma nova instância da
   <literal>stdClass</literal> é criada. Se o valor
   é NULL, a nova instância estará vazia. Arrays convertem para um objeto
   com propriedades chamadas pelas chaves do array e com os respectivos valores. 
   Para qualquer outro valor, uma variável membro chamada <literal>scalar</literal> irá 
   conter o valor.
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
$obj = (object) 'ciao';
echo $obj->scalar;  // exibe 'ciao'
?>
]]>
    </programlisting>
   </informalexample>
  </para>
 </sect2>
</sect1>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="iso-8859-1"?>
  <chapter id="language.basic-syntax">
   <title>Sintaxe básica</title>

   <sect1 id="language.basic-syntax.phpmode">
    <title>Escapes do HTML</title>
  
    <para>
     Há quatro meios de escapes do HTML para entrar no modo "código
     PHP":</para>

    <para>
     <example>
      <title>Meios de escape do HTML</title>
      <programlisting>
1.  &lt;? echo ("esta é a mais simples, uma instrução de processamento SGML\n"); ?>
 
2.  &lt;?php echo("se você quer servir documentos XML, faça assim\n"); ?>

3.  &lt;script language="php"> 
        echo ("alguns editores (como o FrontPage) não gostam de
              instruções de processamento");
    &lt;/script>

4.  &lt;% echo ("Você pode, opcionalmente, usar tags com estilo ASP"); %>
    &lt;%= $variable; # Este é um atalho para "&lt;%echo .." %>
      </programlisting>
     </example></para>

    <para>
     O primeiro meio só é disponível se tags curtas foram habilitadas.
     Isto pode ser feito através da função <function>short_tags</function>,
     habilitando a configuração <link linkend="ini.short-open-tag">short_open_tag</link> 
     no arquivo de configuração do PHP, ou compilando o PHP com a opção
     --enable-short-tags em <command>configure</command>.</para>

    <para>
     O quarto meio só é disponível se tags com estilo ASP foram habilitadas, usando
     a configuração <link linkend="ini.asp-tags">asp_tags</link>.

    <note>
     <para>O suporte para tags com estilo ASP foram acrescentadas em 3.0.4.</para>
    </note></para>

    <para>
     A tag de fechamento para o bloco incluirá a nova linha imediatamente 
     seguinte, se uma estiver presente.</para></sect1>

   <sect1 id="language.basic-syntax.instruction-separation">
    <title>Separação de instrução</title>

    <simpara>
     Instruções são separadas da mesma forma que em C ou perl - terminando
     cada comando com um ponto-e-vírgula.</simpara>

    <para>
     A tag de fechamento (?&gt;) também implica no fim do comando, de forma que 
     os seguintes itens são equivalentes:

     <informalexample>
      <programlisting>
&lt;?php
    echo "Este é um teste";
?>

&lt;?php echo "Este é um teste" ?>
      </programlisting>
     </informalexample></para></sect1>

   <sect1 id="language.basic-syntax.comments">
    <title>Comentários</title>
   
    <para>
     O PHP suporta comentários com os estilos 'C', 'C++' e shell do Unix. Por exemplo:

    <informalexample><programlisting>
&lt;?php
    echo "Este é um teste"; // Esta linha é um comentário de uma linha com estilo c++
    /* Este é um comentário de múltiplas linhas
       ainda outra linha de comentário */
    echo "Este é ainda outro teste";
    echo "Um Teste Final"; # Este é um comentário com estilo shell
?>
     </programlisting>
    </informalexample></para>

    <simpara>
     Os estilos de comentário de uma linha só funcionam até o fim da linha ou o fim
     do bloco de código PHP corrente, o que vier primeiro.</simpara>
    <informalexample><programlisting>
&lt;h1>Este é um exemplo &lt;?# echo "simples";?>.&lt;/h1>
&lt;p>O cabeçalho acima dirá 'Este é um exemplo'.
</programlisting></informalexample> 

    <simpara>
     Você deve ter o cuidado de não aninhar comentários com estilo 'C', o que pode
     acontecer quando se comenta grandes blocos.</simpara>

    <informalexample><programlisting>
&lt;?php
 /* 
    echo "Este é um teste"; /* Este comentário causará um problema */
 */
?>
    </programlisting></informalexample></sect1>
  </chapter>
 
 <!-- Keep this comment at the end of the file
 Local variables:
 mode: sgml
 sgml-omittag:t
 sgml-shorttag:t
 sgml-minimize-attributes:nil
 sgml-always-quote-attributes:t
 sgml-indent-step:1
 sgml-indent-data:t
 sgml-parent-document:nil
 sgml-default-dtd-file:"../manual.ced"
 sgml-exposed-tags:nil
 sgml-local-catalogs:nil
 sgml-local-ecat-files:nil
 End:
 -->

<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.17 Maintainer: felipe Status: ready --><!-- CREDITS:
narigone, thiago -->
 <sect1 xml:id="language.oop5.static" xmlns="http://docbook.org/ns/docbook">
  <title>Palavra-Chave 'static'</title>

  <para>
   Declarar membros ou métodos de uma classe como estáticos faz deles
   acessíveis sem precisar instanciar a classe. Um membro declarados como
   estático não pode ser acessado com um objeto instanciado da classe (embora
   métodos estáticos podem).
  </para>

  <para>
   Por
   compatibilidade com o PHP 4, se nenhuma declaração de <link
   linkend="language.oop5.visibility">visibilidade</link> for usada, então
   o membro ou método será tratado
   como se fosse declarado como <literal>public</literal>.
  </para>

  <para>
   Como métodos estáticos podem ser chamados sem uma instância do
   objeto ter sido criada, a pseudo-variável <varname>$this</varname> não
   é disponível dentro do método declarado como estático.
  </para>

  <para>
   Propriedades estáticas não podem ser acessadas pelo objeto usando o operador
   seta -&gt;.
  </para>

  <para>
    Chamar métodos não estáticos de maneira estática gera um aviso de nível E_STRICT.
  </para>

  <para>
    No PHP 5.3.0, é possível referenciar a classe usando uma variável.
    O valor da variável não pode ser uma palavra chave (e.g. <literal>self</literal>, 
    <literal>parent</literal> e <literal>static</literal>).
  </para>

  <example>
   <title>Exemplo de membro estático</title>
   <programlisting role="php">
<![CDATA[
<?php
class Foo
{
    public static $meu_estatico = 'foo';

    public function valorEstatico() {
        return self::$meu_estatico;
    }
}

class Bar extends Foo
{
    public function fooEstatico() {
        return parent::$meu_estatico;
    }
}


print Foo::$meu_estatico . "\n";

$foo = new Foo();
print $foo->valorEstatico() . "\n";
print $foo->$meu_estatico . "\n";      // "Propriedade" Indefinida $meu_estatico

print $foo::$meu_estatico . "\n";
$classname = 'Foo';
print $classname::$meu_estatico . "\n"; // No PHP 5.3.0

print Bar::$meu_estatico . "\n";
$bar = new Bar();
print $bar->fooEstatico() . "\n";
?>
]]>
   </programlisting>
  </example>

  <example>
   <title>Exemplo de método estático</title>
    <programlisting role="php">
<![CDATA[
<?php
class Foo {
  public static function umMetodoEstatico() {
    // ...
  }
}

Foo::umMetodoEstatico();
$classname = 'Foo';
$classname::umMetodoEstatico(); // No PHP 5.3.0
?>
]]>
    </programlisting>
  </example>

 </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

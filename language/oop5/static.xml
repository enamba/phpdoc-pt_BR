<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.9 Maintainer: narigone Status: ready -->
 <sect1 id="language.oop5.static">
  <title>Palavra-Chave 'static'</title>

  <para>
   Declarar membros ou métodos de uma classe como estáticos faz deles
   acessíveis sem precisar instanciar a classe. Um membro declarados como
   estático não pode ser acessado com um objeto instanciado da classe (embora
   métodos estáticos podem).
  </para>

  <para>
   A declaraï¿½o static deve estar depois da declaraï¿½o de visibilidade. Por
   compatibilidade com o PHP 4, se nenhum declaraï¿½o de <link
   linkend="language.oop5.visibility">visibilidade</link> for usada, entï¿½
   o membro ou mï¿½odo serï¿½tratado
   como se fosse declarado como <literal>public static</literal>.
  </para>

  <para>
   Como mï¿½odos estï¿½icos podem ser chamados sem uma instï¿½cia do
   objeto ter sido criada, a pseudo-variï¿½el <varname>$this</varname> nï¿½
   ï¿½disponï¿½el dentro do mï¿½odo declarado como estï¿½ico.
  </para>

  <para>
   De fato, chamadas a mï¿½odos <literal>estï¿½icos</literal> sï¿½ resolvidas em tempo
   de compilaï¿½o. Quando usando um nome de classe explï¿½ito o mï¿½odo jï¿½ï¿½identificado
   completamente e nenhuma das regras de heranï¿½ se aplicam. Se a chamada for feita por
   <literal>self</literal> entï¿½ <literal>self</literal> ï¿½traduzido para
   a classe atual, isso ï¿½ a classe ï¿½qual o cï¿½igo pertence. Aqui tambï¿½ nï¿½
   se aplicam as regras de heranï¿½.
  </para>

  <para>
   Propriedades estï¿½icas nï¿½ podem ser acessadas pelo objeto usando o operador
   seta -&gt;.
  </para>

  <para>
    Chamar mï¿½odos nï¿½ estï¿½icos de maneira estï¿½ica gera um aviso de nï¿½el E_STRICT.
  </para>

  <example>
   <title>Exemplo de membro estï¿½ico</title>
   <programlisting role="php">
<![CDATA[
<?php
class Foo
{
    public static $meu_estatico = 'foo';

    public function valorEstatico() {
        return self::$meu_estatico;
    }
}

class Bar extends Foo
{
    public function fooEstatico() {
        return parent::$meu_estatico;
    }
}


print Foo::$meu_estatico . "\n";

$foo = new Foo();
print $foo->valorEstatico() . "\n";
print $foo->$meu_estatico . "\n";      // "Propriedade" Indefinida $meu_estatico

// $foo::$meu_estatico nï¿½ ï¿½possï¿½el

print Bar::$meu_estatico . "\n";
$bar = new Bar();
print $bar->fooEstatico() . "\n";
?>
]]>
   </programlisting>
  </example>

  <example>
   <title>Exemplo de mï¿½odo estï¿½ico</title>
    <programlisting role="php">
<![CDATA[
<?php
class Foo {
  public static function umMetodoEstatico() {
    // ...
  }
}

Foo::umMetodoEstatico();
?>
]]>
    </programlisting>
  </example>

 </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

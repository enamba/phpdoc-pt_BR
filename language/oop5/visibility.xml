<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.4 Maintainer: narigone Status: ready -->
 <sect1 id="language.oop5.visibility">
  <title>Visibilidade</title>
  <para>
   A visibilidade de uma propriedade ou método pode ser definida prefixando a
   declaração com as palavras-chave: 'public','protected' ou 'private'. Itens
   declarados como public podem ser acessados por todo mundo. Protected limita o acesso a
   classes herdadas (e para a classe que define o item). Private limita
   a visibilidade para apenas a classe que define o item.
  </para>
  <sect2 id="language.oop5.visiblity-members">
   <title>Visibilidade dos membros</title>
   <para>
   Membros de uma classe devem ser definidos com public, private, ou protected.
   </para>
    <example>
     <title>Declaração de Membros</title>
     <programlisting role="php">
<![CDATA[
<?php

class MinhaClasse {
   public    $public     = "MinhaClasse::public!\n";
   protected $protected  = "MinhaClasse::Protected!\n";
   protected $protected2 = "MinhaClasse::Protected2!\n";
   private   $private    = "MinhaClasse::private!\n";

   function imprimaAlo() {
      print "MinhaClasse::imprimaAlo() " . $this->private;
      print "MinhaClasse::imprimaAlo() " . $this->protected;
      print "MinhaClasse::imprimaAlo() " . $this->protected2;
   }
}

class MinhaClasse2 extends MinhaClasse {
   protected $protected = "MinhaClasse2::protected!\n";

   function imprimaAlo() {

      MinhaClasse::imprimaAlo();    

      print "MinhaClasse2::imprimaAlo() " . $this->public; 
      print "MinhaClasse2::imprimaAlo() " . $this->protected; 
      print "MinhaClasse2::imprimaAlo() " . $this->protected2;

      /* Resultará em Erro Fatal: */
      //print "MinhaClasse2::imprimaAlo() " . $this->private; /* Erro Fatal */

   }
}

$obj = new MinhaClasse();

print "Principal:: " . $obj->public;
//print $obj->private; /* Erro Fatal */
//print $obj->protected;  /* Erro Fatal */
//print $obj->protected2;  /* Erro Fatal */

$obj->imprimaAlo(); /* Deve imprimir */

$obj2 = new MinhaClasse2();
print "Principal:: " . $obj2->private; /* Indefinido */ 

//print $obj2->protected;   /* Erro Fatal */ 
//print $obj2->protected2;  /* Erro Fatal */ 

$obj2->imprimaAlo();
?> 
]]>
     </programlisting>
    </example>
   <note>
    <simpara>
     O uso da declaração de variável com a palavra-chave 'var' do PHP 4 não
     é mais válida para objetos do PHP 5. Para compatibilidade, presumirá-se que
     uma variável declarada no php tenha visibilidade public, e um
     aviso <constant>E_STRICT</constant> será mostrado na tela.
    </simpara>
   </note>
  </sect2>
  <sect2 id="language.oop5.visiblity-methods">
   <title>Visibilidade de Métodos</title>
   <para>
    .
   </para>
  </sect2>


 </sect1>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

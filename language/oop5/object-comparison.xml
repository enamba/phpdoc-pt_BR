<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.3 Maintainer: narigone Status: ready -->
  <sect1 id="language.oop5.object-comparison">
   <title>Comparando objetos</title>
   <para>
    No PHP 5, comparação de objetos é mais complicada que no PHP 4 e mais
    de acordo com o que é esperado de uma Linguagem Orientada a Objetos
    (não que PHP 5 seja uma delas).
   </para>
   <para>
    Quando usar o operador de comparação (<literal>==</literal>),
    variáveis objeto são comparadas de maneira simples, nominalmente: Duas instâncias 
    de objetos são iguais se tem os mesmos atributos e valores, e são
    instâncias da mesma classe.
   </para>
   <para>
    Por outro lado, quando usando o operador de identidade (<literal>===</literal>),
    variáveis objetos são identicas se e somente se elas se referem a mesma
    instância da mesma classe.
   </para>
   <para>
    Um exemplo evidenciará essas regras.
    <example>
     <title>Exemplo de comparação de objetos no PHP 5</title>
     <programlisting role='php'>
<![CDATA[
<?php
function bool2str($bool) {
    if ($bool === false) {
            return 'FALSO';
    } else {
            return 'VERDADEIRO';
    }
}

function compareObjetos(&$o1, &$o2) {
    echo 'o1 == o2 : '.bool2str($o1 == $o2)."\n";
    echo 'o1 != o2 : '.bool2str($o1 != $o2)."\n";
    echo 'o1 === o2 : '.bool2str($o1 === $o2)."\n";
    echo 'o1 !== o2 : '.bool2str($o1 !== $o2)."\n";
}

class Flag {
    var $flag;

    function Flag($flag=true) {
            $this->flag = $flag;
    }
}

class OutraFlag {
    var $flag;

    function OutraFlag($flag=true) {
            $this->flag = $flag;
    }
}

$o = new Flag();
$p = new Flag();
$q = $o;
$r = new OutraFlag();

echo "Duas instâncias da mesma classe\n";
compareObjetos($o, $p);

echo "\nDuas referências para a mesma instância\n";
compareObjetos($o, $q);

echo "\nInstâncias de duas classes diferentes\n";
compareObjetos($o, $r);
?>
]]>
     </programlisting>
    </example>
    This example will output:
    <screen>
Duas instâncias da mesma classe
o1 == o2 : VERDADEIRO
o1 != o2 : FALSO
o1 === o2 : FALSO
o1 !== o2 : VERDADEIRO

Duas referências para a mesma instância
o1 == o2 : VERDADEIRO
o1 != o2 : FALSO
o1 === o2 : VERDADEIRO
o1 !== o2 : FALSO

Instâncias de duas classes diferentes
o1 == o2 : FALSO
o1 != o2 : VERDADEIRO
o1 === o2 : FALSO
o1 !== o2 : VERDADEIRO
    </screen>
   </para>
  </sect1>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.25 Maintainer: ae Status: ready -->
 <chapter id="language.constants">
  <title>Constantes</title>

  <simpara>
   Uma constante é um identificador (nome) para um valor simples. Como o nome
   sugere, esse valor não pode mudar durante a execução do
   script (as 'constantes mágicas' <constant>__FILE__</constant> e
   <constant>__LINE__</constant> parecem ser uma exceção a essa regra,
   mas elas não são realmente constantes). As constantes são sensíveis ao caso
   por padrão. Por convenção, o nomes de constantes são sempre
   em maiúsculas.
  </simpara>
  <para>
   O nome de uma constante tem as mesmas regras de qualquer identificador no PHP. Um
   nome de constante válida começa com uma letra ou sublinhado, seguido
   por qualquer número de letras, números ou sublinhados. Em expressões
   regulares, ela pode ser representada por:
   <literal>[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*</literal>

   <!-- TODO: Example of valid & invalid constant names -->
  </para>

  <note>
   <simpara>
    Para nossos exemplos, as letras a-z, A-Z e os caracteres ASCII
    do 127 ao 255 (0x7f-0xff).
   </simpara>
  </note>

  <simpara>
   O escopo de uma constante é global. Você pode acessá-la em qualquer lugar em
   seu script sem se preocupar com seus escopo.
  </simpara>

  <sect1 id="language.constants.syntax">
   <title>Sintaxe</title>
   <simpara>
    Você pode definir uma constante utilizando-se da função
    <function>define</function>. Quando uma constante é definida,
    ela não pode ser mais modificada ou anulada.
   </simpara>
   <simpara>
    Somente dados escalares (<type>boolean</type>, <type>integer</type>,
    <type>float</type> e <type>string</type>) pode ser colocados
    em constantes.
   </simpara>
   <simpara>
    Você pode obter o valor de uma constante simplismente especificando seu nome.
    Diferentemente de variáveis, você <emphasis>não</emphasis> pode prefixar
    uma constante com um sinal de <literal>$</literal>.
    Você também pode utilizar a função <function>constant</function> para
    ler o valor de uma constante, se você precisar obter seu valor
    dinamicamente.
    Utilize <function>get_defined_constants</function> para obter a lista de
    todas as constantes definidas.
   </simpara>
   <note>
    <simpara>
     As constantes e variáveis (globais) estão em espaços de nomes diferentes.
     Isto implica, por exemplo, que &true; e
     <varname>$TRUE</varname> são geralmente diferentes.
    </simpara>
   </note>
   <simpara>
    Se você usar uma constante indefinida, o PHP assume o nome
    da constante como seu próprio valor. Uma
    <link linkend="features.error-handling">notice</link> será informada
    quando isso acontecer. Use a função <function>defined</function> se
    você precisar saber se uma constante está definida ou não.
   </simpara>
   <para>
    Estas são as diferenças entre constantes e variáveis:
    <itemizedlist>
     <listitem>
      <simpara>
       Constantes não podem ter um sinal de cifrão (<literal>$</literal>)
       antes delas;
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Constantes só podem ser definidas utilizando a função
       <function>define</function>, e não por simples assimilação;
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Constantes podem ser definidas e acessadas de qualquer lugar sem
       que a regras de escopo de variáveis seja aplicadas;
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Constantes não podem ser redefinidas ou eliminadas depois que
       elas são criadas; e
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Constantes só podem conter valores escalares.
       </simpara>
     </listitem>
    </itemizedlist>
   </para>

   <para>
    <example>
     <title>Definindo Constantes</title>
     <programlisting role="php">
<![CDATA[
<?php
define("CONSTANT", "Hello world.");
echo CONSTANT; // imprime "Hello world."
echo Constant; // imprime "Constant" e gera um alerta notice.
?>
]]>
     </programlisting>
    </example>

   </para>
  </sect1>

  <sect1 id="language.constants.predefined">
   <title>Constantes Predefinidas</title>

   <simpara>
    O PHP fornece um grande número de constantes predefinidas para qualquer script
    que ele execute. A maioria dessas constantes, entretanto, são criadas por
    várias extensões, e somente estarão presentes quando essas extensões
    estiverem disponíveis, por carregamento dinamico ou por compilação
    direta.
   </simpara>

   <simpara>
    A lista de constantes predefinidas está disponível na seção <link
    linkend="reserved.constants">Constantes Predefinidas</link>.
   </simpara>


  </sect1>
 </chapter>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
